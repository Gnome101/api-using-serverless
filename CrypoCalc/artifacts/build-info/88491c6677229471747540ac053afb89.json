{"id":"88491c6677229471747540ac053afb89","_format":"hh-sol-build-info-1","solcVersion":"0.8.10","solcLongVersion":"0.8.10+commit.fc410830","input":{"language":"Solidity","sources":{"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"},"contracts/Authorizable.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity >=0.7.0;\n\ncontract Authorizable {\n    // This contract allows a flexible authorization scheme\n\n    // The owner who can change authorization status\n    address public owner;\n    // A mapping from an address to its authorization status\n    mapping(address => bool) public authorized;\n\n    /// @dev We set the deployer to the owner\n    constructor() {\n        owner = msg.sender;\n    }\n\n    /// @dev This modifier checks if the msg.sender is the owner\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Sender not owner\");\n        _;\n    }\n\n    /// @dev This modifier checks if an address is authorized\n    modifier onlyAuthorized() {\n        require(isAuthorized(msg.sender), \"Sender not Authorized\");\n        _;\n    }\n\n    /// @dev Returns true if an address is authorized\n    /// @param who the address to check\n    /// @return true if authorized false if not\n    function isAuthorized(address who) public view returns (bool) {\n        return authorized[who];\n    }\n\n    /// @dev Privileged function authorize an address\n    /// @param who the address to authorize\n    function authorize(address who) external onlyOwner {\n        _authorize(who);\n    }\n\n    /// @dev Privileged function to de authorize an address\n    /// @param who The address to remove authorization from\n    function deauthorize(address who) external onlyOwner {\n        authorized[who] = false;\n    }\n\n    /// @dev Function to change owner\n    /// @param who The new owner address\n    function setOwner(address who) public onlyOwner {\n        owner = who;\n    }\n\n    /// @dev Inheritable function which authorizes someone\n    /// @param who the address to authorize\n    function _authorize(address who) internal {\n        authorized[who] = true;\n    }\n}"},"contracts/ERC20Permit.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n// Copied from https://github.com/delvtech/elf-contracts/blob/a6cb960896301b7562ced70a8b221f3cc964ea0a/contracts/libraries/ERC20Permit.sol\n\npragma solidity ^0.8.3;\n\nimport \"./IERC20Permit.sol\";\n\n// This default erc20 library is designed for max efficiency and security.\n// WARNING: By default it does not include totalSupply which breaks the ERC20 standard\n//          to use a fully standard compliant ERC20 use 'ERC20PermitWithSupply\"\nabstract contract ERC20Permit is IERC20Permit {\n    // --- ERC20 Data ---\n    // The name of the erc20 token\n    string public name;\n    // The symbol of the erc20 token\n    string public override symbol;\n    // The decimals of the erc20 token, should default to 18 for new tokens\n    uint8 public override decimals;\n\n    // A mapping which tracks user token balances\n    mapping(address => uint256) public override balanceOf;\n    // A mapping which tracks which addresses a user allows to move their tokens\n    mapping(address => mapping(address => uint256)) public override allowance;\n    // A mapping which tracks the permit signature nonces for users\n    mapping(address => uint256) public override nonces;\n\n    // --- EIP712 niceties ---\n    // solhint-disable-next-line var-name-mixedcase\n    bytes32 public override DOMAIN_SEPARATOR;\n    // bytes32 public constant PERMIT_TYPEHASH = keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH =\n        0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n\n    /// @notice Initializes the erc20 contract\n    /// @param name_ the value 'name' will be set to\n    /// @param symbol_ the value 'symbol' will be set to\n    /// @dev decimals default to 18 and must be reset by an inheriting contract for\n    ///      non standard decimal values\n    constructor(string memory name_, string memory symbol_) {\n        // Set the state variables\n        name = name_;\n        symbol = symbol_;\n        decimals = 18;\n\n        // By setting these addresses to 0 attempting to execute a transfer to\n        // either of them will revert. This is a gas efficient way to prevent\n        // a common user mistake where they transfer to the token address.\n        // These values are not considered 'real' tokens and so are not included\n        // in 'total supply' which only contains minted tokens.\n        balanceOf[address(0)] = type(uint256).max;\n        balanceOf[address(this)] = type(uint256).max;\n\n        // Optional extra state manipulation\n        _extraConstruction();\n\n        // Computes the EIP 712 domain separator which prevents user signed messages for\n        // this contract to be replayed in other contracts.\n        // https://eips.ethereum.org/EIPS/eip-712\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256(\n                    \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\"\n                ),\n                keccak256(bytes(name)),\n                keccak256(bytes(\"1\")),\n                block.chainid,\n                address(this)\n            )\n        );\n    }\n\n    /// @notice An optional override function to execute and change state before immutable assignment\n    function _extraConstruction() internal virtual {}\n\n    // --- Token ---\n    /// @notice Allows a token owner to send tokens to another address\n    /// @param recipient The address which will be credited with the tokens\n    /// @param amount The amount user token to send\n    /// @return returns true on success, reverts on failure so cannot return false.\n    /// @dev transfers to this contract address or 0 will fail\n    function transfer(\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        // We forward this call to 'transferFrom'\n        return transferFrom(msg.sender, recipient, amount);\n    }\n\n    /// @notice Transfers an amount of erc20 from a spender to a receipt\n    /// @param spender The source of the ERC20 tokens\n    /// @param recipient The destination of the ERC20 tokens\n    /// @param amount the number of tokens to send\n    /// @return returns true on success and reverts on failure\n    /// @dev will fail transfers which send funds to this contract or 0\n    function transferFrom(\n        address spender,\n        address recipient,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        // Load balance and allowance\n        uint256 balance = balanceOf[spender];\n        require(balance >= amount, \"ERC20: insufficient-balance\");\n        // We potentially have to change allowances\n        if (spender != msg.sender) {\n            // Loading the allowance in the if block prevents vanilla transfers\n            // from paying for the sload.\n            uint256 allowed = allowance[spender][msg.sender];\n            // If the allowance is max we do not reduce it\n            // Note - This means that max allowances will be more gas efficient\n            // by not requiring a sstore on 'transferFrom'\n            if (allowed != type(uint256).max) {\n                require(allowed >= amount, \"ERC20: insufficient-allowance\");\n                allowance[spender][msg.sender] = allowed - amount;\n            }\n        }\n        // Update the balances\n        balanceOf[spender] = balance - amount;\n        // Note - In the constructor we initialize the 'balanceOf' of address 0 and\n        //        the token address to uint256.max and so in 8.0 transfers to those\n        //        addresses revert on this step.\n        balanceOf[recipient] = balanceOf[recipient] + amount;\n        // Emit the needed event\n        emit Transfer(spender, recipient, amount);\n        // Return that this call succeeded\n        return true;\n    }\n\n    /// @notice This internal minting function allows inheriting contracts\n    ///         to mint tokens in the way they wish.\n    /// @param account the address which will receive the token.\n    /// @param amount the amount of token which they will receive\n    /// @dev This function is virtual so that it can be overridden, if you\n    ///      are reviewing this contract for security you should ensure to\n    ///      check for overrides\n    function _mint(address account, uint256 amount) internal virtual {\n        // Add tokens to the account\n        balanceOf[account] = balanceOf[account] + amount;\n        // Emit an event to track the minting\n        emit Transfer(address(0), account, amount);\n    }\n\n    /// @notice This internal burning function allows inheriting contracts to\n    ///         burn tokens in the way they see fit.\n    /// @param account the account to remove tokens from\n    /// @param amount  the amount of tokens to remove\n    /// @dev This function is virtual so that it can be overridden, if you\n    ///      are reviewing this contract for security you should ensure to\n    ///      check for overrides\n    function _burn(address account, uint256 amount) internal virtual {\n        // Reduce the balance of the account\n        balanceOf[account] = balanceOf[account] - amount;\n        // Emit an event tracking transfers\n        emit Transfer(account, address(0), amount);\n    }\n\n    /// @notice This function allows a user to approve an account which can transfer\n    ///         tokens on their behalf.\n    /// @param account The account which will be approve to transfer tokens\n    /// @param amount The approval amount, if set to uint256.max the allowance does not go down on transfers.\n    /// @return returns true for compatibility with the ERC20 standard\n    function approve(\n        address account,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        // Set the senders allowance for account to amount\n        allowance[msg.sender][account] = amount;\n        // Emit an event to track approvals\n        emit Approval(msg.sender, account, amount);\n        return true;\n    }\n\n    /// @notice This function allows a caller who is not the owner of an account to execute the functionality of 'approve' with the owners signature.\n    /// @param owner the owner of the account which is having the new approval set\n    /// @param spender the address which will be allowed to spend owner's tokens\n    /// @param value the new allowance value\n    /// @param deadline the timestamp which the signature must be submitted by to be valid\n    /// @param v Extra ECDSA data which allows public key recovery from signature assumed to be 27 or 28\n    /// @param r The r component of the ECDSA signature\n    /// @param s The s component of the ECDSA signature\n    /// @dev The signature for this function follows EIP 712 standard and should be generated with the\n    ///      eth_signTypedData JSON RPC call instead of the eth_sign JSON RPC call. If using out of date\n    ///      parity signing libraries the v component may need to be adjusted. Also it is very rare but possible\n    ///      for v to be other values, those values are not supported.\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external override {\n        // The EIP 712 digest for this function\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                \"\\x19\\x01\",\n                DOMAIN_SEPARATOR,\n                keccak256(\n                    abi.encode(\n                        PERMIT_TYPEHASH,\n                        owner,\n                        spender,\n                        value,\n                        nonces[owner],\n                        deadline\n                    )\n                )\n            )\n        );\n        // Require that the owner is not zero\n        require(owner != address(0), \"ERC20: invalid-address-0\");\n        // Require that we have a valid signature from the owner\n        require(owner == ecrecover(digest, v, r, s), \"ERC20: invalid-permit\");\n        // Require that the signature is not expired\n        require(\n            deadline == 0 || block.timestamp <= deadline,\n            \"ERC20: permit-expired\"\n        );\n        // Format the signature to the default format\n        require(\n            uint256(s) <=\n                0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0,\n            \"ERC20: invalid signature 's' value\"\n        );\n        // Increment the signature nonce to prevent replay\n        nonces[owner]++;\n        // Set the allowance to the new value\n        allowance[owner][spender] = value;\n        // Emit an approval event to be able to track this happening\n        emit Approval(owner, spender, value);\n    }\n\n    /// @notice Internal function which allows inheriting contract to set custom decimals\n    /// @param decimals_ the new decimal value\n    function _setupDecimals(uint8 decimals_) internal {\n        // Set the decimals\n        decimals = decimals_;\n    }\n}"},"contracts/ERC20PermitWithMint.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n// Largely based on https://github.com/delvtech/elf-contracts/blob/a6cb960896301b7562ced70a8b221f3cc964ea0a/contracts/libraries/ERC20PermitWithSupply.sol\n\npragma solidity ^0.8.3;\n\nimport \"./ERC20Permit.sol\";\nimport \"./Authorizable.sol\";\n\n// This contract adds total supply and minting to the generic erc20\nabstract contract ERC20PermitWithMint is ERC20Permit, Authorizable {\n    /// @notice Initializes the erc20 contract\n    /// @param name_ the value 'name' will be set to\n    /// @param symbol_ the value 'symbol' will be set to\n    /// @param owner_ address which has the power to mint\n    constructor(\n        string memory name_,\n        string memory symbol_,\n        address owner_\n    ) ERC20Permit(name_, symbol_) {\n        setOwner(owner_);\n    }\n\n    // The stored totalSupply, it equals all tokens minted - all tokens burned\n    uint256 public totalSupply;\n\n    /// @notice Allows the governance to mint\n    /// @param account the account to addd tokens to\n    /// @param amount the amount of tokens to add\n    function mint(address account, uint256 amount) external onlyOwner {\n        _mint(account, amount);\n    }\n\n    /// @notice This function overrides the ERC20Permit Library's _mint and causes it\n    ///          to track total supply.\n    /// @param account the account to addd tokens to\n    /// @param amount the amount of tokens to add\n    function _mint(address account, uint256 amount) internal override {\n        // Increase account balance\n        balanceOf[account] = balanceOf[account] + amount;\n        // Increase total supply\n        totalSupply += amount;\n        // Emit a transfer from zero to emulate a mint\n        emit Transfer(address(0), account, amount);\n    }\n\n    /// @notice Allows the governance to burn\n    /// @param account the account to burn from\n    /// @param amount the amount of token to burn\n    function burn(address account, uint256 amount) external onlyOwner {\n        _burn(account, amount);\n    }\n\n    /// @notice This function overrides the ERC20Permit Library's _burn to decrement total supply\n    /// @param account the account to burn from\n    /// @param amount the amount of token to burn\n    function _burn(address account, uint256 amount) internal override {\n        // Decrease user balance\n        uint256 currentBalance = balanceOf[account];\n        // This logic prevents a reversion if the _burn is frontrun\n        if (currentBalance < amount) {\n            balanceOf[account] = 0;\n        } else {\n            balanceOf[account] = currentBalance - amount;\n        }\n        // Decrease total supply\n        totalSupply -= amount;\n        // Emit an event tracking the burn\n        emit Transfer(account, address(0), amount);\n    }\n}"},"contracts/IERC20.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.3;\n\ninterface IERC20 {\n    function name() external view returns (string memory);\n\n    function symbol() external view returns (string memory);\n\n    function balanceOf(address account) external view returns (uint256);\n\n    // Note this is non standard but nearly all ERC20 have exposed decimal functions\n    function decimals() external view returns (uint8);\n\n    function transfer(\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    function allowance(\n        address owner,\n        address spender\n    ) external view returns (uint256);\n\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    function transferFrom(\n        address sender,\n        address recipient,\n        uint256 amount\n    ) external returns (bool);\n\n    event Transfer(address indexed from, address indexed to, uint256 value);\n    event Approval(\n        address indexed owner,\n        address indexed spender,\n        uint256 value\n    );\n}"},"contracts/IERC20Permit.sol":{"content":"// Forked from openzepplin\n// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.3;\n\nimport \"./IERC20.sol\";\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n */\ninterface IERC20Permit is IERC20 {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over `owner`'s tokens,\n     * given `owner`'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}"},"contracts/mockHog.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\n\n// taken from our contracts repo\n\nimport \"./ERC20PermitWithMint.sol\";\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\";\npragma solidity ^0.8.3;\n\ncontract MockHog is ERC20PermitWithMint {\n    constructor(\n        string memory name_,\n        string memory symbol_,      \n        address owner_\n    ) ERC20PermitWithMint(name_, symbol_, owner_) {}\n\n    function setBalance(address who, uint256 amount) external {\n        balanceOf[who] = amount;\n    }\n\n    function setAllowance(\n        address source,\n        address spender,\n        uint256 amount\n    ) external {\n        allowance[source][spender] = amount;\n    }\n}"}},"settings":{"evmVersion":"istanbul","optimizer":{"enabled":true,"runs":1,"details":{"yul":false}},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"sources":{"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol","exportedSymbols":{"IUniswapV3Pool":[21],"IUniswapV3PoolActions":[117],"IUniswapV3PoolDerivedState":[148],"IUniswapV3PoolEvents":[267],"IUniswapV3PoolImmutables":[307],"IUniswapV3PoolOwnerActions":[333],"IUniswapV3PoolState":[441]},"id":22,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:0"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol","file":"./pool/IUniswapV3PoolImmutables.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":22,"sourceUnit":308,"src":"71:45:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol","file":"./pool/IUniswapV3PoolState.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":22,"sourceUnit":442,"src":"117:40:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol","file":"./pool/IUniswapV3PoolDerivedState.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":22,"sourceUnit":149,"src":"158:47:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol","file":"./pool/IUniswapV3PoolActions.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":22,"sourceUnit":118,"src":"206:42:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol","file":"./pool/IUniswapV3PoolOwnerActions.sol","id":6,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":22,"sourceUnit":334,"src":"249:47:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol","file":"./pool/IUniswapV3PoolEvents.sol","id":7,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":22,"sourceUnit":268,"src":"297:41:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":9,"name":"IUniswapV3PoolImmutables","nodeType":"IdentifierPath","referencedDeclaration":307,"src":"637:24:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"637:24:0"},{"baseName":{"id":11,"name":"IUniswapV3PoolState","nodeType":"IdentifierPath","referencedDeclaration":441,"src":"667:19:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"667:19:0"},{"baseName":{"id":13,"name":"IUniswapV3PoolDerivedState","nodeType":"IdentifierPath","referencedDeclaration":148,"src":"692:26:0"},"id":14,"nodeType":"InheritanceSpecifier","src":"692:26:0"},{"baseName":{"id":15,"name":"IUniswapV3PoolActions","nodeType":"IdentifierPath","referencedDeclaration":117,"src":"724:21:0"},"id":16,"nodeType":"InheritanceSpecifier","src":"724:21:0"},{"baseName":{"id":17,"name":"IUniswapV3PoolOwnerActions","nodeType":"IdentifierPath","referencedDeclaration":333,"src":"751:26:0"},"id":18,"nodeType":"InheritanceSpecifier","src":"751:26:0"},{"baseName":{"id":19,"name":"IUniswapV3PoolEvents","nodeType":"IdentifierPath","referencedDeclaration":267,"src":"783:20:0"},"id":20,"nodeType":"InheritanceSpecifier","src":"783:20:0"}],"canonicalName":"IUniswapV3Pool","contractDependencies":[],"contractKind":"interface","documentation":{"id":8,"nodeType":"StructuredDocumentation","src":"340:265:0","text":"@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"},"fullyImplemented":false,"id":21,"linearizedBaseContracts":[21,267,333,117,148,441,307],"name":"IUniswapV3Pool","nameLocation":"615:14:0","nodeType":"ContractDefinition","nodes":[],"scope":22,"src":"605:203:0","usedErrors":[]}],"src":"45:764:0"},"id":0},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol","exportedSymbols":{"IUniswapV3PoolActions":[117]},"id":118,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":23,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3PoolActions","contractDependencies":[],"contractKind":"interface","documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"71:102:1","text":"@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"},"fullyImplemented":false,"id":117,"linearizedBaseContracts":[117],"name":"IUniswapV3PoolActions","nameLocation":"183:21:1","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":25,"nodeType":"StructuredDocumentation","src":"211:206:1","text":"@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"},"functionSelector":"f637731d","id":30,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nameLocation":"431:10:1","nodeType":"FunctionDefinition","parameters":{"id":28,"nodeType":"ParameterList","parameters":[{"constant":false,"id":27,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"450:12:1","nodeType":"VariableDeclaration","scope":30,"src":"442:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":26,"name":"uint160","nodeType":"ElementaryTypeName","src":"442:7:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"441:22:1"},"returnParameters":{"id":29,"nodeType":"ParameterList","parameters":[],"src":"472:0:1"},"scope":117,"src":"422:51:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":31,"nodeType":"StructuredDocumentation","src":"479:1029:1","text":"@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"},"functionSelector":"3c8a7d8d","id":48,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nameLocation":"1522:4:1","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"recipient","nameLocation":"1544:9:1","nodeType":"VariableDeclaration","scope":48,"src":"1536:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":32,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":35,"mutability":"mutable","name":"tickLower","nameLocation":"1569:9:1","nodeType":"VariableDeclaration","scope":48,"src":"1563:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":34,"name":"int24","nodeType":"ElementaryTypeName","src":"1563:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":37,"mutability":"mutable","name":"tickUpper","nameLocation":"1594:9:1","nodeType":"VariableDeclaration","scope":48,"src":"1588:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":36,"name":"int24","nodeType":"ElementaryTypeName","src":"1588:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":39,"mutability":"mutable","name":"amount","nameLocation":"1621:6:1","nodeType":"VariableDeclaration","scope":48,"src":"1613:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":38,"name":"uint128","nodeType":"ElementaryTypeName","src":"1613:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":41,"mutability":"mutable","name":"data","nameLocation":"1652:4:1","nodeType":"VariableDeclaration","scope":48,"src":"1637:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":40,"name":"bytes","nodeType":"ElementaryTypeName","src":"1637:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1526:136:1"},"returnParameters":{"id":47,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"amount0","nameLocation":"1689:7:1","nodeType":"VariableDeclaration","scope":48,"src":"1681:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":43,"name":"uint256","nodeType":"ElementaryTypeName","src":"1681:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":46,"mutability":"mutable","name":"amount1","nameLocation":"1706:7:1","nodeType":"VariableDeclaration","scope":48,"src":"1698:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":45,"name":"uint256","nodeType":"ElementaryTypeName","src":"1698:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1680:34:1"},"scope":117,"src":"1513:202:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":49,"nodeType":"StructuredDocumentation","src":"1721:1053:1","text":"@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"},"functionSelector":"4f1eb3d8","id":66,"implemented":false,"kind":"function","modifiers":[],"name":"collect","nameLocation":"2788:7:1","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[{"constant":false,"id":51,"mutability":"mutable","name":"recipient","nameLocation":"2813:9:1","nodeType":"VariableDeclaration","scope":66,"src":"2805:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":50,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":53,"mutability":"mutable","name":"tickLower","nameLocation":"2838:9:1","nodeType":"VariableDeclaration","scope":66,"src":"2832:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":52,"name":"int24","nodeType":"ElementaryTypeName","src":"2832:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":55,"mutability":"mutable","name":"tickUpper","nameLocation":"2863:9:1","nodeType":"VariableDeclaration","scope":66,"src":"2857:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":54,"name":"int24","nodeType":"ElementaryTypeName","src":"2857:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":57,"mutability":"mutable","name":"amount0Requested","nameLocation":"2890:16:1","nodeType":"VariableDeclaration","scope":66,"src":"2882:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":56,"name":"uint128","nodeType":"ElementaryTypeName","src":"2882:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":59,"mutability":"mutable","name":"amount1Requested","nameLocation":"2924:16:1","nodeType":"VariableDeclaration","scope":66,"src":"2916:24:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":58,"name":"uint128","nodeType":"ElementaryTypeName","src":"2916:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2795:151:1"},"returnParameters":{"id":65,"nodeType":"ParameterList","parameters":[{"constant":false,"id":62,"mutability":"mutable","name":"amount0","nameLocation":"2973:7:1","nodeType":"VariableDeclaration","scope":66,"src":"2965:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":61,"name":"uint128","nodeType":"ElementaryTypeName","src":"2965:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":64,"mutability":"mutable","name":"amount1","nameLocation":"2990:7:1","nodeType":"VariableDeclaration","scope":66,"src":"2982:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":63,"name":"uint128","nodeType":"ElementaryTypeName","src":"2982:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2964:34:1"},"scope":117,"src":"2779:220:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"3005:631:1","text":"@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"},"functionSelector":"a34123a7","id":80,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nameLocation":"3650:4:1","nodeType":"FunctionDefinition","parameters":{"id":74,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"tickLower","nameLocation":"3670:9:1","nodeType":"VariableDeclaration","scope":80,"src":"3664:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":68,"name":"int24","nodeType":"ElementaryTypeName","src":"3664:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":71,"mutability":"mutable","name":"tickUpper","nameLocation":"3695:9:1","nodeType":"VariableDeclaration","scope":80,"src":"3689:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":70,"name":"int24","nodeType":"ElementaryTypeName","src":"3689:5:1","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":73,"mutability":"mutable","name":"amount","nameLocation":"3722:6:1","nodeType":"VariableDeclaration","scope":80,"src":"3714:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":72,"name":"uint128","nodeType":"ElementaryTypeName","src":"3714:7:1","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"3654:80:1"},"returnParameters":{"id":79,"nodeType":"ParameterList","parameters":[{"constant":false,"id":76,"mutability":"mutable","name":"amount0","nameLocation":"3761:7:1","nodeType":"VariableDeclaration","scope":80,"src":"3753:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":75,"name":"uint256","nodeType":"ElementaryTypeName","src":"3753:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":78,"mutability":"mutable","name":"amount1","nameLocation":"3778:7:1","nodeType":"VariableDeclaration","scope":80,"src":"3770:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":77,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3752:34:1"},"scope":117,"src":"3641:146:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"3793:1015:1","text":"@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"},"functionSelector":"128acb08","id":98,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nameLocation":"4822:4:1","nodeType":"FunctionDefinition","parameters":{"id":92,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"recipient","nameLocation":"4844:9:1","nodeType":"VariableDeclaration","scope":98,"src":"4836:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"4836:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":85,"mutability":"mutable","name":"zeroForOne","nameLocation":"4868:10:1","nodeType":"VariableDeclaration","scope":98,"src":"4863:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":84,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":87,"mutability":"mutable","name":"amountSpecified","nameLocation":"4895:15:1","nodeType":"VariableDeclaration","scope":98,"src":"4888:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":86,"name":"int256","nodeType":"ElementaryTypeName","src":"4888:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":89,"mutability":"mutable","name":"sqrtPriceLimitX96","nameLocation":"4928:17:1","nodeType":"VariableDeclaration","scope":98,"src":"4920:25:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":88,"name":"uint160","nodeType":"ElementaryTypeName","src":"4920:7:1","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":91,"mutability":"mutable","name":"data","nameLocation":"4970:4:1","nodeType":"VariableDeclaration","scope":98,"src":"4955:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":90,"name":"bytes","nodeType":"ElementaryTypeName","src":"4955:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4826:154:1"},"returnParameters":{"id":97,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"amount0","nameLocation":"5006:7:1","nodeType":"VariableDeclaration","scope":98,"src":"4999:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":93,"name":"int256","nodeType":"ElementaryTypeName","src":"4999:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":96,"mutability":"mutable","name":"amount1","nameLocation":"5022:7:1","nodeType":"VariableDeclaration","scope":98,"src":"5015:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":95,"name":"int256","nodeType":"ElementaryTypeName","src":"5015:6:1","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4998:32:1"},"scope":117,"src":"4813:218:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":99,"nodeType":"StructuredDocumentation","src":"5037:657:1","text":"@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"},"functionSelector":"490e6cbc","id":110,"implemented":false,"kind":"function","modifiers":[],"name":"flash","nameLocation":"5708:5:1","nodeType":"FunctionDefinition","parameters":{"id":108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":101,"mutability":"mutable","name":"recipient","nameLocation":"5731:9:1","nodeType":"VariableDeclaration","scope":110,"src":"5723:17:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":100,"name":"address","nodeType":"ElementaryTypeName","src":"5723:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":103,"mutability":"mutable","name":"amount0","nameLocation":"5758:7:1","nodeType":"VariableDeclaration","scope":110,"src":"5750:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":102,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":105,"mutability":"mutable","name":"amount1","nameLocation":"5783:7:1","nodeType":"VariableDeclaration","scope":110,"src":"5775:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":104,"name":"uint256","nodeType":"ElementaryTypeName","src":"5775:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":107,"mutability":"mutable","name":"data","nameLocation":"5815:4:1","nodeType":"VariableDeclaration","scope":110,"src":"5800:19:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":106,"name":"bytes","nodeType":"ElementaryTypeName","src":"5800:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5713:112:1"},"returnParameters":{"id":109,"nodeType":"ParameterList","parameters":[],"src":"5834:0:1"},"scope":117,"src":"5699:136:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":111,"nodeType":"StructuredDocumentation","src":"5841:367:1","text":"@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"},"functionSelector":"32148f67","id":116,"implemented":false,"kind":"function","modifiers":[],"name":"increaseObservationCardinalityNext","nameLocation":"6222:34:1","nodeType":"FunctionDefinition","parameters":{"id":114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":113,"mutability":"mutable","name":"observationCardinalityNext","nameLocation":"6264:26:1","nodeType":"VariableDeclaration","scope":116,"src":"6257:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":112,"name":"uint16","nodeType":"ElementaryTypeName","src":"6257:6:1","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"6256:35:1"},"returnParameters":{"id":115,"nodeType":"ParameterList","parameters":[],"src":"6300:0:1"},"scope":117,"src":"6213:88:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":118,"src":"173:6130:1","usedErrors":[]}],"src":"45:6259:1"},"id":1},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol","exportedSymbols":{"IUniswapV3PoolDerivedState":[148]},"id":149,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":119,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:2"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3PoolDerivedState","contractDependencies":[],"contractKind":"interface","documentation":{"id":120,"nodeType":"StructuredDocumentation","src":"71:222:2","text":"@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."},"fullyImplemented":false,"id":148,"linearizedBaseContracts":[148],"name":"IUniswapV3PoolDerivedState","nameLocation":"303:26:2","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":121,"nodeType":"StructuredDocumentation","src":"336:1045:2","text":"@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"},"functionSelector":"883bdbfd","id":133,"implemented":false,"kind":"function","modifiers":[],"name":"observe","nameLocation":"1395:7:2","nodeType":"FunctionDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"secondsAgos","nameLocation":"1421:11:2","nodeType":"VariableDeclaration","scope":133,"src":"1403:29:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_calldata_ptr","typeString":"uint32[]"},"typeName":{"baseType":{"id":122,"name":"uint32","nodeType":"ElementaryTypeName","src":"1403:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":123,"nodeType":"ArrayTypeName","src":"1403:8:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage_ptr","typeString":"uint32[]"}},"visibility":"internal"}],"src":"1402:31:2"},"returnParameters":{"id":132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":128,"mutability":"mutable","name":"tickCumulatives","nameLocation":"1496:15:2","nodeType":"VariableDeclaration","scope":133,"src":"1481:30:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int56_$dyn_memory_ptr","typeString":"int56[]"},"typeName":{"baseType":{"id":126,"name":"int56","nodeType":"ElementaryTypeName","src":"1481:5:2","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":127,"nodeType":"ArrayTypeName","src":"1481:7:2","typeDescriptions":{"typeIdentifier":"t_array$_t_int56_$dyn_storage_ptr","typeString":"int56[]"}},"visibility":"internal"},{"constant":false,"id":131,"mutability":"mutable","name":"secondsPerLiquidityCumulativeX128s","nameLocation":"1530:34:2","nodeType":"VariableDeclaration","scope":133,"src":"1513:51:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint160_$dyn_memory_ptr","typeString":"uint160[]"},"typeName":{"baseType":{"id":129,"name":"uint160","nodeType":"ElementaryTypeName","src":"1513:7:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":130,"nodeType":"ArrayTypeName","src":"1513:9:2","typeDescriptions":{"typeIdentifier":"t_array$_t_uint160_$dyn_storage_ptr","typeString":"uint160[]"}},"visibility":"internal"}],"src":"1480:85:2"},"scope":148,"src":"1386:180:2","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":134,"nodeType":"StructuredDocumentation","src":"1572:771:2","text":"@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"},"functionSelector":"a38807f2","id":147,"implemented":false,"kind":"function","modifiers":[],"name":"snapshotCumulativesInside","nameLocation":"2357:25:2","nodeType":"FunctionDefinition","parameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"mutability":"mutable","name":"tickLower","nameLocation":"2389:9:2","nodeType":"VariableDeclaration","scope":147,"src":"2383:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":135,"name":"int24","nodeType":"ElementaryTypeName","src":"2383:5:2","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":138,"mutability":"mutable","name":"tickUpper","nameLocation":"2406:9:2","nodeType":"VariableDeclaration","scope":147,"src":"2400:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":137,"name":"int24","nodeType":"ElementaryTypeName","src":"2400:5:2","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"2382:34:2"},"returnParameters":{"id":146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":141,"mutability":"mutable","name":"tickCumulativeInside","nameLocation":"2483:20:2","nodeType":"VariableDeclaration","scope":147,"src":"2477:26:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":140,"name":"int56","nodeType":"ElementaryTypeName","src":"2477:5:2","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":143,"mutability":"mutable","name":"secondsPerLiquidityInsideX128","nameLocation":"2525:29:2","nodeType":"VariableDeclaration","scope":147,"src":"2517:37:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":142,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":145,"mutability":"mutable","name":"secondsInside","nameLocation":"2575:13:2","nodeType":"VariableDeclaration","scope":147,"src":"2568:20:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":144,"name":"uint32","nodeType":"ElementaryTypeName","src":"2568:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2463:135:2"},"scope":148,"src":"2348:251:2","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":149,"src":"293:2308:2","usedErrors":[]}],"src":"45:2557:2"},"id":2},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol","exportedSymbols":{"IUniswapV3PoolEvents":[267]},"id":268,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":150,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:3"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3PoolEvents","contractDependencies":[],"contractKind":"interface","documentation":{"id":151,"nodeType":"StructuredDocumentation","src":"71:88:3","text":"@title Events emitted by a pool\n @notice Contains all events emitted by the pool"},"fullyImplemented":true,"id":267,"linearizedBaseContracts":[267],"name":"IUniswapV3PoolEvents","nameLocation":"169:20:3","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":152,"nodeType":"StructuredDocumentation","src":"196:344:3","text":"@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"},"id":158,"name":"Initialize","nameLocation":"551:10:3","nodeType":"EventDefinition","parameters":{"id":157,"nodeType":"ParameterList","parameters":[{"constant":false,"id":154,"indexed":false,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"570:12:3","nodeType":"VariableDeclaration","scope":158,"src":"562:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":153,"name":"uint160","nodeType":"ElementaryTypeName","src":"562:7:3","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":156,"indexed":false,"mutability":"mutable","name":"tick","nameLocation":"590:4:3","nodeType":"VariableDeclaration","scope":158,"src":"584:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":155,"name":"int24","nodeType":"ElementaryTypeName","src":"584:5:3","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"561:34:3"},"src":"545:51:3"},{"anonymous":false,"documentation":{"id":159,"nodeType":"StructuredDocumentation","src":"602:551:3","text":"@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"},"id":175,"name":"Mint","nameLocation":"1164:4:3","nodeType":"EventDefinition","parameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":161,"indexed":false,"mutability":"mutable","name":"sender","nameLocation":"1186:6:3","nodeType":"VariableDeclaration","scope":175,"src":"1178:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":160,"name":"address","nodeType":"ElementaryTypeName","src":"1178:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":163,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1218:5:3","nodeType":"VariableDeclaration","scope":175,"src":"1202:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":162,"name":"address","nodeType":"ElementaryTypeName","src":"1202:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":165,"indexed":true,"mutability":"mutable","name":"tickLower","nameLocation":"1247:9:3","nodeType":"VariableDeclaration","scope":175,"src":"1233:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":164,"name":"int24","nodeType":"ElementaryTypeName","src":"1233:5:3","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":167,"indexed":true,"mutability":"mutable","name":"tickUpper","nameLocation":"1280:9:3","nodeType":"VariableDeclaration","scope":175,"src":"1266:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":166,"name":"int24","nodeType":"ElementaryTypeName","src":"1266:5:3","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":169,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1307:6:3","nodeType":"VariableDeclaration","scope":175,"src":"1299:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":168,"name":"uint128","nodeType":"ElementaryTypeName","src":"1299:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":171,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"1331:7:3","nodeType":"VariableDeclaration","scope":175,"src":"1323:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":170,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":173,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"1356:7:3","nodeType":"VariableDeclaration","scope":175,"src":"1348:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1168:201:3"},"src":"1158:212:3"},{"anonymous":false,"documentation":{"id":176,"nodeType":"StructuredDocumentation","src":"1376:493:3","text":"@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"},"id":190,"name":"Collect","nameLocation":"1880:7:3","nodeType":"EventDefinition","parameters":{"id":189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":178,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"1913:5:3","nodeType":"VariableDeclaration","scope":190,"src":"1897:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":177,"name":"address","nodeType":"ElementaryTypeName","src":"1897:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":180,"indexed":false,"mutability":"mutable","name":"recipient","nameLocation":"1936:9:3","nodeType":"VariableDeclaration","scope":190,"src":"1928:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":179,"name":"address","nodeType":"ElementaryTypeName","src":"1928:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":182,"indexed":true,"mutability":"mutable","name":"tickLower","nameLocation":"1969:9:3","nodeType":"VariableDeclaration","scope":190,"src":"1955:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":181,"name":"int24","nodeType":"ElementaryTypeName","src":"1955:5:3","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":184,"indexed":true,"mutability":"mutable","name":"tickUpper","nameLocation":"2002:9:3","nodeType":"VariableDeclaration","scope":190,"src":"1988:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":183,"name":"int24","nodeType":"ElementaryTypeName","src":"1988:5:3","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":186,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"2029:7:3","nodeType":"VariableDeclaration","scope":190,"src":"2021:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":185,"name":"uint128","nodeType":"ElementaryTypeName","src":"2021:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":188,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"2054:7:3","nodeType":"VariableDeclaration","scope":190,"src":"2046:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":187,"name":"uint128","nodeType":"ElementaryTypeName","src":"2046:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1887:180:3"},"src":"1874:194:3"},{"anonymous":false,"documentation":{"id":191,"nodeType":"StructuredDocumentation","src":"2074:523:3","text":"@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"},"id":205,"name":"Burn","nameLocation":"2608:4:3","nodeType":"EventDefinition","parameters":{"id":204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":193,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"2638:5:3","nodeType":"VariableDeclaration","scope":205,"src":"2622:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":192,"name":"address","nodeType":"ElementaryTypeName","src":"2622:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":195,"indexed":true,"mutability":"mutable","name":"tickLower","nameLocation":"2667:9:3","nodeType":"VariableDeclaration","scope":205,"src":"2653:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":194,"name":"int24","nodeType":"ElementaryTypeName","src":"2653:5:3","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":197,"indexed":true,"mutability":"mutable","name":"tickUpper","nameLocation":"2700:9:3","nodeType":"VariableDeclaration","scope":205,"src":"2686:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":196,"name":"int24","nodeType":"ElementaryTypeName","src":"2686:5:3","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":199,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"2727:6:3","nodeType":"VariableDeclaration","scope":205,"src":"2719:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":198,"name":"uint128","nodeType":"ElementaryTypeName","src":"2719:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":201,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"2751:7:3","nodeType":"VariableDeclaration","scope":205,"src":"2743:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":200,"name":"uint256","nodeType":"ElementaryTypeName","src":"2743:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":203,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"2776:7:3","nodeType":"VariableDeclaration","scope":205,"src":"2768:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":202,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:177:3"},"src":"2602:188:3"},{"anonymous":false,"documentation":{"id":206,"nodeType":"StructuredDocumentation","src":"2796:600:3","text":"@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"},"id":222,"name":"Swap","nameLocation":"3407:4:3","nodeType":"EventDefinition","parameters":{"id":221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":208,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"3437:6:3","nodeType":"VariableDeclaration","scope":222,"src":"3421:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":207,"name":"address","nodeType":"ElementaryTypeName","src":"3421:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":210,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"3469:9:3","nodeType":"VariableDeclaration","scope":222,"src":"3453:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":209,"name":"address","nodeType":"ElementaryTypeName","src":"3453:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":212,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"3495:7:3","nodeType":"VariableDeclaration","scope":222,"src":"3488:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":211,"name":"int256","nodeType":"ElementaryTypeName","src":"3488:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":214,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"3519:7:3","nodeType":"VariableDeclaration","scope":222,"src":"3512:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":213,"name":"int256","nodeType":"ElementaryTypeName","src":"3512:6:3","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":216,"indexed":false,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"3544:12:3","nodeType":"VariableDeclaration","scope":222,"src":"3536:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":215,"name":"uint160","nodeType":"ElementaryTypeName","src":"3536:7:3","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":218,"indexed":false,"mutability":"mutable","name":"liquidity","nameLocation":"3574:9:3","nodeType":"VariableDeclaration","scope":222,"src":"3566:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":217,"name":"uint128","nodeType":"ElementaryTypeName","src":"3566:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":220,"indexed":false,"mutability":"mutable","name":"tick","nameLocation":"3599:4:3","nodeType":"VariableDeclaration","scope":222,"src":"3593:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":219,"name":"int24","nodeType":"ElementaryTypeName","src":"3593:5:3","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"3411:198:3"},"src":"3401:209:3"},{"anonymous":false,"documentation":{"id":223,"nodeType":"StructuredDocumentation","src":"3616:562:3","text":"@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"},"id":237,"name":"Flash","nameLocation":"4189:5:3","nodeType":"EventDefinition","parameters":{"id":236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":225,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"4220:6:3","nodeType":"VariableDeclaration","scope":237,"src":"4204:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":224,"name":"address","nodeType":"ElementaryTypeName","src":"4204:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":227,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"4252:9:3","nodeType":"VariableDeclaration","scope":237,"src":"4236:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":226,"name":"address","nodeType":"ElementaryTypeName","src":"4236:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":229,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"4279:7:3","nodeType":"VariableDeclaration","scope":237,"src":"4271:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":228,"name":"uint256","nodeType":"ElementaryTypeName","src":"4271:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":231,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"4304:7:3","nodeType":"VariableDeclaration","scope":237,"src":"4296:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":230,"name":"uint256","nodeType":"ElementaryTypeName","src":"4296:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":233,"indexed":false,"mutability":"mutable","name":"paid0","nameLocation":"4329:5:3","nodeType":"VariableDeclaration","scope":237,"src":"4321:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"4321:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":235,"indexed":false,"mutability":"mutable","name":"paid1","nameLocation":"4352:5:3","nodeType":"VariableDeclaration","scope":237,"src":"4344:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":234,"name":"uint256","nodeType":"ElementaryTypeName","src":"4344:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4194:169:3"},"src":"4183:181:3"},{"anonymous":false,"documentation":{"id":238,"nodeType":"StructuredDocumentation","src":"4370:451:3","text":"@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"},"id":244,"name":"IncreaseObservationCardinalityNext","nameLocation":"4832:34:3","nodeType":"EventDefinition","parameters":{"id":243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":240,"indexed":false,"mutability":"mutable","name":"observationCardinalityNextOld","nameLocation":"4883:29:3","nodeType":"VariableDeclaration","scope":244,"src":"4876:36:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":239,"name":"uint16","nodeType":"ElementaryTypeName","src":"4876:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":242,"indexed":false,"mutability":"mutable","name":"observationCardinalityNextNew","nameLocation":"4929:29:3","nodeType":"VariableDeclaration","scope":244,"src":"4922:36:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":241,"name":"uint16","nodeType":"ElementaryTypeName","src":"4922:6:3","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4866:98:3"},"src":"4826:139:3"},{"anonymous":false,"documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"4971:370:3","text":"@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"},"id":255,"name":"SetFeeProtocol","nameLocation":"5352:14:3","nodeType":"EventDefinition","parameters":{"id":254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":247,"indexed":false,"mutability":"mutable","name":"feeProtocol0Old","nameLocation":"5373:15:3","nodeType":"VariableDeclaration","scope":255,"src":"5367:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":246,"name":"uint8","nodeType":"ElementaryTypeName","src":"5367:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":249,"indexed":false,"mutability":"mutable","name":"feeProtocol1Old","nameLocation":"5396:15:3","nodeType":"VariableDeclaration","scope":255,"src":"5390:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":248,"name":"uint8","nodeType":"ElementaryTypeName","src":"5390:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":251,"indexed":false,"mutability":"mutable","name":"feeProtocol0New","nameLocation":"5419:15:3","nodeType":"VariableDeclaration","scope":255,"src":"5413:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":250,"name":"uint8","nodeType":"ElementaryTypeName","src":"5413:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":253,"indexed":false,"mutability":"mutable","name":"feeProtocol1New","nameLocation":"5442:15:3","nodeType":"VariableDeclaration","scope":255,"src":"5436:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":252,"name":"uint8","nodeType":"ElementaryTypeName","src":"5436:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"5366:92:3"},"src":"5346:113:3"},{"anonymous":false,"documentation":{"id":256,"nodeType":"StructuredDocumentation","src":"5465:384:3","text":"@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"},"id":266,"name":"CollectProtocol","nameLocation":"5860:15:3","nodeType":"EventDefinition","parameters":{"id":265,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"5892:6:3","nodeType":"VariableDeclaration","scope":266,"src":"5876:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":257,"name":"address","nodeType":"ElementaryTypeName","src":"5876:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":260,"indexed":true,"mutability":"mutable","name":"recipient","nameLocation":"5916:9:3","nodeType":"VariableDeclaration","scope":266,"src":"5900:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":259,"name":"address","nodeType":"ElementaryTypeName","src":"5900:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":262,"indexed":false,"mutability":"mutable","name":"amount0","nameLocation":"5935:7:3","nodeType":"VariableDeclaration","scope":266,"src":"5927:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":261,"name":"uint128","nodeType":"ElementaryTypeName","src":"5927:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":264,"indexed":false,"mutability":"mutable","name":"amount1","nameLocation":"5952:7:3","nodeType":"VariableDeclaration","scope":266,"src":"5944:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":263,"name":"uint128","nodeType":"ElementaryTypeName","src":"5944:7:3","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"5875:85:3"},"src":"5854:107:3"}],"scope":268,"src":"159:5804:3","usedErrors":[]}],"src":"45:5919:3"},"id":3},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol","exportedSymbols":{"IUniswapV3PoolImmutables":[307]},"id":308,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":269,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3PoolImmutables","contractDependencies":[],"contractKind":"interface","documentation":{"id":270,"nodeType":"StructuredDocumentation","src":"71:153:4","text":"@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"},"fullyImplemented":false,"id":307,"linearizedBaseContracts":[307],"name":"IUniswapV3PoolImmutables","nameLocation":"234:24:4","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":271,"nodeType":"StructuredDocumentation","src":"265:138:4","text":"@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"},"functionSelector":"c45a0155","id":276,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nameLocation":"417:7:4","nodeType":"FunctionDefinition","parameters":{"id":272,"nodeType":"ParameterList","parameters":[],"src":"424:2:4"},"returnParameters":{"id":275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":274,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":276,"src":"450:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":273,"name":"address","nodeType":"ElementaryTypeName","src":"450:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"449:9:4"},"scope":307,"src":"408:51:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":277,"nodeType":"StructuredDocumentation","src":"465:113:4","text":"@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"},"functionSelector":"0dfe1681","id":282,"implemented":false,"kind":"function","modifiers":[],"name":"token0","nameLocation":"592:6:4","nodeType":"FunctionDefinition","parameters":{"id":278,"nodeType":"ParameterList","parameters":[],"src":"598:2:4"},"returnParameters":{"id":281,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":282,"src":"624:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":279,"name":"address","nodeType":"ElementaryTypeName","src":"624:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"623:9:4"},"scope":307,"src":"583:50:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":283,"nodeType":"StructuredDocumentation","src":"639:114:4","text":"@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"},"functionSelector":"d21220a7","id":288,"implemented":false,"kind":"function","modifiers":[],"name":"token1","nameLocation":"767:6:4","nodeType":"FunctionDefinition","parameters":{"id":284,"nodeType":"ParameterList","parameters":[],"src":"773:2:4"},"returnParameters":{"id":287,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":288,"src":"799:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":285,"name":"address","nodeType":"ElementaryTypeName","src":"799:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"798:9:4"},"scope":307,"src":"758:50:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":289,"nodeType":"StructuredDocumentation","src":"814:84:4","text":"@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"},"functionSelector":"ddca3f43","id":294,"implemented":false,"kind":"function","modifiers":[],"name":"fee","nameLocation":"912:3:4","nodeType":"FunctionDefinition","parameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"915:2:4"},"returnParameters":{"id":293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":292,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":294,"src":"941:6:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":291,"name":"uint24","nodeType":"ElementaryTypeName","src":"941:6:4","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"940:8:4"},"scope":307,"src":"903:46:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":295,"nodeType":"StructuredDocumentation","src":"955:358:4","text":"@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"},"functionSelector":"d0c93a7c","id":300,"implemented":false,"kind":"function","modifiers":[],"name":"tickSpacing","nameLocation":"1327:11:4","nodeType":"FunctionDefinition","parameters":{"id":296,"nodeType":"ParameterList","parameters":[],"src":"1338:2:4"},"returnParameters":{"id":299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":300,"src":"1364:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":297,"name":"int24","nodeType":"ElementaryTypeName","src":"1364:5:4","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1363:7:4"},"scope":307,"src":"1318:53:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":301,"nodeType":"StructuredDocumentation","src":"1377:363:4","text":"@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"},"functionSelector":"70cf754a","id":306,"implemented":false,"kind":"function","modifiers":[],"name":"maxLiquidityPerTick","nameLocation":"1754:19:4","nodeType":"FunctionDefinition","parameters":{"id":302,"nodeType":"ParameterList","parameters":[],"src":"1773:2:4"},"returnParameters":{"id":305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":304,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":306,"src":"1799:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":303,"name":"uint128","nodeType":"ElementaryTypeName","src":"1799:7:4","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1798:9:4"},"scope":307,"src":"1745:63:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":308,"src":"224:1586:4","usedErrors":[]}],"src":"45:1766:4"},"id":4},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol","exportedSymbols":{"IUniswapV3PoolOwnerActions":[333]},"id":334,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":309,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:5"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3PoolOwnerActions","contractDependencies":[],"contractKind":"interface","documentation":{"id":310,"nodeType":"StructuredDocumentation","src":"71:116:5","text":"@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"},"fullyImplemented":false,"id":333,"linearizedBaseContracts":[333],"name":"IUniswapV3PoolOwnerActions","nameLocation":"197:26:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":311,"nodeType":"StructuredDocumentation","src":"230:205:5","text":"@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"},"functionSelector":"8206a4d1","id":318,"implemented":false,"kind":"function","modifiers":[],"name":"setFeeProtocol","nameLocation":"449:14:5","nodeType":"FunctionDefinition","parameters":{"id":316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":313,"mutability":"mutable","name":"feeProtocol0","nameLocation":"470:12:5","nodeType":"VariableDeclaration","scope":318,"src":"464:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":312,"name":"uint8","nodeType":"ElementaryTypeName","src":"464:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":315,"mutability":"mutable","name":"feeProtocol1","nameLocation":"490:12:5","nodeType":"VariableDeclaration","scope":318,"src":"484:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":314,"name":"uint8","nodeType":"ElementaryTypeName","src":"484:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"463:40:5"},"returnParameters":{"id":317,"nodeType":"ParameterList","parameters":[],"src":"512:0:5"},"scope":333,"src":"440:73:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"519:483:5","text":"@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"},"functionSelector":"85b66729","id":332,"implemented":false,"kind":"function","modifiers":[],"name":"collectProtocol","nameLocation":"1016:15:5","nodeType":"FunctionDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"mutability":"mutable","name":"recipient","nameLocation":"1049:9:5","nodeType":"VariableDeclaration","scope":332,"src":"1041:17:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":320,"name":"address","nodeType":"ElementaryTypeName","src":"1041:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":323,"mutability":"mutable","name":"amount0Requested","nameLocation":"1076:16:5","nodeType":"VariableDeclaration","scope":332,"src":"1068:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":322,"name":"uint128","nodeType":"ElementaryTypeName","src":"1068:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":325,"mutability":"mutable","name":"amount1Requested","nameLocation":"1110:16:5","nodeType":"VariableDeclaration","scope":332,"src":"1102:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":324,"name":"uint128","nodeType":"ElementaryTypeName","src":"1102:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1031:101:5"},"returnParameters":{"id":331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"amount0","nameLocation":"1159:7:5","nodeType":"VariableDeclaration","scope":332,"src":"1151:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":327,"name":"uint128","nodeType":"ElementaryTypeName","src":"1151:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":330,"mutability":"mutable","name":"amount1","nameLocation":"1176:7:5","nodeType":"VariableDeclaration","scope":332,"src":"1168:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":329,"name":"uint128","nodeType":"ElementaryTypeName","src":"1168:7:5","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1150:34:5"},"scope":333,"src":"1007:178:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":334,"src":"187:1000:5","usedErrors":[]}],"src":"45:1143:5"},"id":5},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol","exportedSymbols":{"IUniswapV3PoolState":[441]},"id":442,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":335,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:6"},{"abstract":false,"baseContracts":[],"canonicalName":"IUniswapV3PoolState","contractDependencies":[],"contractKind":"interface","documentation":{"id":336,"nodeType":"StructuredDocumentation","src":"71:169:6","text":"@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"},"fullyImplemented":false,"id":441,"linearizedBaseContracts":[441],"name":"IUniswapV3PoolState","nameLocation":"250:19:6","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"276:1140:6","text":"@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"},"functionSelector":"3850c7bd","id":354,"implemented":false,"kind":"function","modifiers":[],"name":"slot0","nameLocation":"1430:5:6","nodeType":"FunctionDefinition","parameters":{"id":338,"nodeType":"ParameterList","parameters":[],"src":"1435:2:6"},"returnParameters":{"id":353,"nodeType":"ParameterList","parameters":[{"constant":false,"id":340,"mutability":"mutable","name":"sqrtPriceX96","nameLocation":"1506:12:6","nodeType":"VariableDeclaration","scope":354,"src":"1498:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":339,"name":"uint160","nodeType":"ElementaryTypeName","src":"1498:7:6","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":342,"mutability":"mutable","name":"tick","nameLocation":"1538:4:6","nodeType":"VariableDeclaration","scope":354,"src":"1532:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":341,"name":"int24","nodeType":"ElementaryTypeName","src":"1532:5:6","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":344,"mutability":"mutable","name":"observationIndex","nameLocation":"1563:16:6","nodeType":"VariableDeclaration","scope":354,"src":"1556:23:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":343,"name":"uint16","nodeType":"ElementaryTypeName","src":"1556:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":346,"mutability":"mutable","name":"observationCardinality","nameLocation":"1600:22:6","nodeType":"VariableDeclaration","scope":354,"src":"1593:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":345,"name":"uint16","nodeType":"ElementaryTypeName","src":"1593:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":348,"mutability":"mutable","name":"observationCardinalityNext","nameLocation":"1643:26:6","nodeType":"VariableDeclaration","scope":354,"src":"1636:33:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":347,"name":"uint16","nodeType":"ElementaryTypeName","src":"1636:6:6","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"feeProtocol","nameLocation":"1689:11:6","nodeType":"VariableDeclaration","scope":354,"src":"1683:17:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":349,"name":"uint8","nodeType":"ElementaryTypeName","src":"1683:5:6","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":352,"mutability":"mutable","name":"unlocked","nameLocation":"1719:8:6","nodeType":"VariableDeclaration","scope":354,"src":"1714:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":351,"name":"bool","nodeType":"ElementaryTypeName","src":"1714:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1484:253:6"},"scope":441,"src":"1421:317:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":355,"nodeType":"StructuredDocumentation","src":"1744:168:6","text":"@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"},"functionSelector":"f3058399","id":360,"implemented":false,"kind":"function","modifiers":[],"name":"feeGrowthGlobal0X128","nameLocation":"1926:20:6","nodeType":"FunctionDefinition","parameters":{"id":356,"nodeType":"ParameterList","parameters":[],"src":"1946:2:6"},"returnParameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":360,"src":"1972:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":357,"name":"uint256","nodeType":"ElementaryTypeName","src":"1972:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1971:9:6"},"scope":441,"src":"1917:64:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":361,"nodeType":"StructuredDocumentation","src":"1987:168:6","text":"@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"},"functionSelector":"46141319","id":366,"implemented":false,"kind":"function","modifiers":[],"name":"feeGrowthGlobal1X128","nameLocation":"2169:20:6","nodeType":"FunctionDefinition","parameters":{"id":362,"nodeType":"ParameterList","parameters":[],"src":"2189:2:6"},"returnParameters":{"id":365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":364,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":366,"src":"2215:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":363,"name":"uint256","nodeType":"ElementaryTypeName","src":"2215:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2214:9:6"},"scope":441,"src":"2160:64:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":367,"nodeType":"StructuredDocumentation","src":"2230:147:6","text":"@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"},"functionSelector":"1ad8b03b","id":374,"implemented":false,"kind":"function","modifiers":[],"name":"protocolFees","nameLocation":"2391:12:6","nodeType":"FunctionDefinition","parameters":{"id":368,"nodeType":"ParameterList","parameters":[],"src":"2403:2:6"},"returnParameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":370,"mutability":"mutable","name":"token0","nameLocation":"2437:6:6","nodeType":"VariableDeclaration","scope":374,"src":"2429:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":369,"name":"uint128","nodeType":"ElementaryTypeName","src":"2429:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":372,"mutability":"mutable","name":"token1","nameLocation":"2453:6:6","nodeType":"VariableDeclaration","scope":374,"src":"2445:14:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":371,"name":"uint128","nodeType":"ElementaryTypeName","src":"2445:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2428:32:6"},"scope":441,"src":"2382:79:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":375,"nodeType":"StructuredDocumentation","src":"2467:150:6","text":"@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"},"functionSelector":"1a686502","id":380,"implemented":false,"kind":"function","modifiers":[],"name":"liquidity","nameLocation":"2631:9:6","nodeType":"FunctionDefinition","parameters":{"id":376,"nodeType":"ParameterList","parameters":[],"src":"2640:2:6"},"returnParameters":{"id":379,"nodeType":"ParameterList","parameters":[{"constant":false,"id":378,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":380,"src":"2666:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":377,"name":"uint128","nodeType":"ElementaryTypeName","src":"2666:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2665:9:6"},"scope":441,"src":"2622:53:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":381,"nodeType":"StructuredDocumentation","src":"2681:1244:6","text":"@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."},"functionSelector":"f30dba93","id":402,"implemented":false,"kind":"function","modifiers":[],"name":"ticks","nameLocation":"3939:5:6","nodeType":"FunctionDefinition","parameters":{"id":384,"nodeType":"ParameterList","parameters":[{"constant":false,"id":383,"mutability":"mutable","name":"tick","nameLocation":"3951:4:6","nodeType":"VariableDeclaration","scope":402,"src":"3945:10:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":382,"name":"int24","nodeType":"ElementaryTypeName","src":"3945:5:6","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"3944:12:6"},"returnParameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":386,"mutability":"mutable","name":"liquidityGross","nameLocation":"4025:14:6","nodeType":"VariableDeclaration","scope":402,"src":"4017:22:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":385,"name":"uint128","nodeType":"ElementaryTypeName","src":"4017:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":388,"mutability":"mutable","name":"liquidityNet","nameLocation":"4060:12:6","nodeType":"VariableDeclaration","scope":402,"src":"4053:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":387,"name":"int128","nodeType":"ElementaryTypeName","src":"4053:6:6","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":390,"mutability":"mutable","name":"feeGrowthOutside0X128","nameLocation":"4094:21:6","nodeType":"VariableDeclaration","scope":402,"src":"4086:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":389,"name":"uint256","nodeType":"ElementaryTypeName","src":"4086:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":392,"mutability":"mutable","name":"feeGrowthOutside1X128","nameLocation":"4137:21:6","nodeType":"VariableDeclaration","scope":402,"src":"4129:29:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"4129:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":394,"mutability":"mutable","name":"tickCumulativeOutside","nameLocation":"4178:21:6","nodeType":"VariableDeclaration","scope":402,"src":"4172:27:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":393,"name":"int56","nodeType":"ElementaryTypeName","src":"4172:5:6","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":396,"mutability":"mutable","name":"secondsPerLiquidityOutsideX128","nameLocation":"4221:30:6","nodeType":"VariableDeclaration","scope":402,"src":"4213:38:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":395,"name":"uint160","nodeType":"ElementaryTypeName","src":"4213:7:6","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":398,"mutability":"mutable","name":"secondsOutside","nameLocation":"4272:14:6","nodeType":"VariableDeclaration","scope":402,"src":"4265:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":397,"name":"uint32","nodeType":"ElementaryTypeName","src":"4265:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":400,"mutability":"mutable","name":"initialized","nameLocation":"4305:11:6","nodeType":"VariableDeclaration","scope":402,"src":"4300:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":399,"name":"bool","nodeType":"ElementaryTypeName","src":"4300:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4003:323:6"},"scope":441,"src":"3930:397:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":403,"nodeType":"StructuredDocumentation","src":"4333:99:6","text":"@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"},"functionSelector":"5339c296","id":410,"implemented":false,"kind":"function","modifiers":[],"name":"tickBitmap","nameLocation":"4446:10:6","nodeType":"FunctionDefinition","parameters":{"id":406,"nodeType":"ParameterList","parameters":[{"constant":false,"id":405,"mutability":"mutable","name":"wordPosition","nameLocation":"4463:12:6","nodeType":"VariableDeclaration","scope":410,"src":"4457:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":404,"name":"int16","nodeType":"ElementaryTypeName","src":"4457:5:6","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"4456:20:6"},"returnParameters":{"id":409,"nodeType":"ParameterList","parameters":[{"constant":false,"id":408,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":410,"src":"4500:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":407,"name":"uint256","nodeType":"ElementaryTypeName","src":"4500:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4499:9:6"},"scope":441,"src":"4437:72:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":411,"nodeType":"StructuredDocumentation","src":"4515:700:6","text":"@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"},"functionSelector":"514ea4bf","id":426,"implemented":false,"kind":"function","modifiers":[],"name":"positions","nameLocation":"5229:9:6","nodeType":"FunctionDefinition","parameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"key","nameLocation":"5247:3:6","nodeType":"VariableDeclaration","scope":426,"src":"5239:11:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":412,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5239:7:6","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5238:13:6"},"returnParameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":416,"mutability":"mutable","name":"_liquidity","nameLocation":"5320:10:6","nodeType":"VariableDeclaration","scope":426,"src":"5312:18:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":415,"name":"uint128","nodeType":"ElementaryTypeName","src":"5312:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":418,"mutability":"mutable","name":"feeGrowthInside0LastX128","nameLocation":"5352:24:6","nodeType":"VariableDeclaration","scope":426,"src":"5344:32:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":417,"name":"uint256","nodeType":"ElementaryTypeName","src":"5344:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":420,"mutability":"mutable","name":"feeGrowthInside1LastX128","nameLocation":"5398:24:6","nodeType":"VariableDeclaration","scope":426,"src":"5390:32:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":419,"name":"uint256","nodeType":"ElementaryTypeName","src":"5390:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":422,"mutability":"mutable","name":"tokensOwed0","nameLocation":"5444:11:6","nodeType":"VariableDeclaration","scope":426,"src":"5436:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":421,"name":"uint128","nodeType":"ElementaryTypeName","src":"5436:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":424,"mutability":"mutable","name":"tokensOwed1","nameLocation":"5477:11:6","nodeType":"VariableDeclaration","scope":426,"src":"5469:19:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":423,"name":"uint128","nodeType":"ElementaryTypeName","src":"5469:7:6","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"5298:200:6"},"scope":441,"src":"5220:279:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":427,"nodeType":"StructuredDocumentation","src":"5505:749:6","text":"@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"},"functionSelector":"252c09d7","id":440,"implemented":false,"kind":"function","modifiers":[],"name":"observations","nameLocation":"6268:12:6","nodeType":"FunctionDefinition","parameters":{"id":430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":429,"mutability":"mutable","name":"index","nameLocation":"6289:5:6","nodeType":"VariableDeclaration","scope":440,"src":"6281:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":428,"name":"uint256","nodeType":"ElementaryTypeName","src":"6281:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6280:15:6"},"returnParameters":{"id":439,"nodeType":"ParameterList","parameters":[{"constant":false,"id":432,"mutability":"mutable","name":"blockTimestamp","nameLocation":"6363:14:6","nodeType":"VariableDeclaration","scope":440,"src":"6356:21:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":431,"name":"uint32","nodeType":"ElementaryTypeName","src":"6356:6:6","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":434,"mutability":"mutable","name":"tickCumulative","nameLocation":"6397:14:6","nodeType":"VariableDeclaration","scope":440,"src":"6391:20:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":433,"name":"int56","nodeType":"ElementaryTypeName","src":"6391:5:6","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":436,"mutability":"mutable","name":"secondsPerLiquidityCumulativeX128","nameLocation":"6433:33:6","nodeType":"VariableDeclaration","scope":440,"src":"6425:41:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":435,"name":"uint160","nodeType":"ElementaryTypeName","src":"6425:7:6","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":438,"mutability":"mutable","name":"initialized","nameLocation":"6485:11:6","nodeType":"VariableDeclaration","scope":440,"src":"6480:16:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":437,"name":"bool","nodeType":"ElementaryTypeName","src":"6480:4:6","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6342:164:6"},"scope":441,"src":"6259:248:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":442,"src":"240:6269:6","usedErrors":[]}],"src":"45:6465:6"},"id":6},"contracts/Authorizable.sol":{"ast":{"absolutePath":"contracts/Authorizable.sol","exportedSymbols":{"Authorizable":[553]},"id":554,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":443,"literals":["solidity",">=","0.7",".0"],"nodeType":"PragmaDirective","src":"39:24:7"},{"abstract":false,"baseContracts":[],"canonicalName":"Authorizable","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":553,"linearizedBaseContracts":[553],"name":"Authorizable","nameLocation":"74:12:7","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"8da5cb5b","id":445,"mutability":"mutable","name":"owner","nameLocation":"222:5:7","nodeType":"VariableDeclaration","scope":553,"src":"207:20:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":444,"name":"address","nodeType":"ElementaryTypeName","src":"207:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"b9181611","id":449,"mutability":"mutable","name":"authorized","nameLocation":"326:10:7","nodeType":"VariableDeclaration","scope":553,"src":"294:42:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":448,"keyType":{"id":446,"name":"address","nodeType":"ElementaryTypeName","src":"302:7:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"294:24:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":447,"name":"bool","nodeType":"ElementaryTypeName","src":"313:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"body":{"id":458,"nodeType":"Block","src":"403:35:7","statements":[{"expression":{"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":453,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"413:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":454,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"421:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"421:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"413:18:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":457,"nodeType":"ExpressionStatement","src":"413:18:7"}]},"documentation":{"id":450,"nodeType":"StructuredDocumentation","src":"343:41:7","text":"@dev We set the deployer to the owner"},"id":459,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":451,"nodeType":"ParameterList","parameters":[],"src":"400:2:7"},"returnParameters":{"id":452,"nodeType":"ParameterList","parameters":[],"src":"403:0:7"},"scope":553,"src":"389:49:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":471,"nodeType":"Block","src":"530:76:7","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":463,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"548:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"548:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":465,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"562:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"548:19:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53656e646572206e6f74206f776e6572","id":467,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"569:18:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3","typeString":"literal_string \"Sender not owner\""},"value":"Sender not owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3","typeString":"literal_string \"Sender not owner\""}],"id":462,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"540:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"540:48:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":469,"nodeType":"ExpressionStatement","src":"540:48:7"},{"id":470,"nodeType":"PlaceholderStatement","src":"598:1:7"}]},"documentation":{"id":460,"nodeType":"StructuredDocumentation","src":"444:60:7","text":"@dev This modifier checks if the msg.sender is the owner"},"id":472,"name":"onlyOwner","nameLocation":"518:9:7","nodeType":"ModifierDefinition","parameters":{"id":461,"nodeType":"ParameterList","parameters":[],"src":"527:2:7"},"src":"509:97:7","virtual":false,"visibility":"internal"},{"body":{"id":484,"nodeType":"Block","src":"700:86:7","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":477,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"731:3:7","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"731:10:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":476,"name":"isAuthorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"718:12:7","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":479,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"718:24:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53656e646572206e6f7420417574686f72697a6564","id":480,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"744:23:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_44c34049b5ec3aa09486c699baac35c90ecea4d0ef4e66a336b6ed25e029a389","typeString":"literal_string \"Sender not Authorized\""},"value":"Sender not Authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_44c34049b5ec3aa09486c699baac35c90ecea4d0ef4e66a336b6ed25e029a389","typeString":"literal_string \"Sender not Authorized\""}],"id":475,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"710:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"710:58:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":482,"nodeType":"ExpressionStatement","src":"710:58:7"},{"id":483,"nodeType":"PlaceholderStatement","src":"778:1:7"}]},"documentation":{"id":473,"nodeType":"StructuredDocumentation","src":"612:57:7","text":"@dev This modifier checks if an address is authorized"},"id":485,"name":"onlyAuthorized","nameLocation":"683:14:7","nodeType":"ModifierDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[],"src":"697:2:7"},"src":"674:112:7","virtual":false,"visibility":"internal"},{"body":{"id":497,"nodeType":"Block","src":"996:39:7","statements":[{"expression":{"baseExpression":{"id":493,"name":"authorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"1013:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":495,"indexExpression":{"id":494,"name":"who","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":488,"src":"1024:3:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1013:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":492,"id":496,"nodeType":"Return","src":"1006:22:7"}]},"documentation":{"id":486,"nodeType":"StructuredDocumentation","src":"792:137:7","text":"@dev Returns true if an address is authorized\n @param who the address to check\n @return true if authorized false if not"},"functionSelector":"fe9fbb80","id":498,"implemented":true,"kind":"function","modifiers":[],"name":"isAuthorized","nameLocation":"943:12:7","nodeType":"FunctionDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"mutability":"mutable","name":"who","nameLocation":"964:3:7","nodeType":"VariableDeclaration","scope":498,"src":"956:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"956:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"955:13:7"},"returnParameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":498,"src":"990:4:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":490,"name":"bool","nodeType":"ElementaryTypeName","src":"990:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"989:6:7"},"scope":553,"src":"934:101:7","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":510,"nodeType":"Block","src":"1190:32:7","statements":[{"expression":{"arguments":[{"id":507,"name":"who","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":501,"src":"1211:3:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":506,"name":"_authorize","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":552,"src":"1200:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1200:15:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":509,"nodeType":"ExpressionStatement","src":"1200:15:7"}]},"documentation":{"id":499,"nodeType":"StructuredDocumentation","src":"1041:93:7","text":"@dev Privileged function authorize an address\n @param who the address to authorize"},"functionSelector":"b6a5d7de","id":511,"implemented":true,"kind":"function","modifiers":[{"id":504,"kind":"modifierInvocation","modifierName":{"id":503,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":472,"src":"1180:9:7"},"nodeType":"ModifierInvocation","src":"1180:9:7"}],"name":"authorize","nameLocation":"1148:9:7","nodeType":"FunctionDefinition","parameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":501,"mutability":"mutable","name":"who","nameLocation":"1166:3:7","nodeType":"VariableDeclaration","scope":511,"src":"1158:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":500,"name":"address","nodeType":"ElementaryTypeName","src":"1158:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1157:13:7"},"returnParameters":{"id":505,"nodeType":"ParameterList","parameters":[],"src":"1190:0:7"},"scope":553,"src":"1139:83:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":525,"nodeType":"Block","src":"1401:40:7","statements":[{"expression":{"id":523,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":519,"name":"authorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"1411:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":521,"indexExpression":{"id":520,"name":"who","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":514,"src":"1422:3:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1411:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1429:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"1411:23:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":524,"nodeType":"ExpressionStatement","src":"1411:23:7"}]},"documentation":{"id":512,"nodeType":"StructuredDocumentation","src":"1228:115:7","text":"@dev Privileged function to de authorize an address\n @param who The address to remove authorization from"},"functionSelector":"27c97fa5","id":526,"implemented":true,"kind":"function","modifiers":[{"id":517,"kind":"modifierInvocation","modifierName":{"id":516,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":472,"src":"1391:9:7"},"nodeType":"ModifierInvocation","src":"1391:9:7"}],"name":"deauthorize","nameLocation":"1357:11:7","nodeType":"FunctionDefinition","parameters":{"id":515,"nodeType":"ParameterList","parameters":[{"constant":false,"id":514,"mutability":"mutable","name":"who","nameLocation":"1377:3:7","nodeType":"VariableDeclaration","scope":526,"src":"1369:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":513,"name":"address","nodeType":"ElementaryTypeName","src":"1369:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1368:13:7"},"returnParameters":{"id":518,"nodeType":"ParameterList","parameters":[],"src":"1401:0:7"},"scope":553,"src":"1348:93:7","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":538,"nodeType":"Block","src":"1574:28:7","statements":[{"expression":{"id":536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":534,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":445,"src":"1584:5:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":535,"name":"who","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"1592:3:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1584:11:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":537,"nodeType":"ExpressionStatement","src":"1584:11:7"}]},"documentation":{"id":527,"nodeType":"StructuredDocumentation","src":"1447:74:7","text":"@dev Function to change owner\n @param who The new owner address"},"functionSelector":"13af4035","id":539,"implemented":true,"kind":"function","modifiers":[{"id":532,"kind":"modifierInvocation","modifierName":{"id":531,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":472,"src":"1564:9:7"},"nodeType":"ModifierInvocation","src":"1564:9:7"}],"name":"setOwner","nameLocation":"1535:8:7","nodeType":"FunctionDefinition","parameters":{"id":530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":529,"mutability":"mutable","name":"who","nameLocation":"1552:3:7","nodeType":"VariableDeclaration","scope":539,"src":"1544:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":528,"name":"address","nodeType":"ElementaryTypeName","src":"1544:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1543:13:7"},"returnParameters":{"id":533,"nodeType":"ParameterList","parameters":[],"src":"1574:0:7"},"scope":553,"src":"1526:76:7","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":551,"nodeType":"Block","src":"1753:39:7","statements":[{"expression":{"id":549,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":545,"name":"authorized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":449,"src":"1763:10:7","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":547,"indexExpression":{"id":546,"name":"who","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":542,"src":"1774:3:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1763:15:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":548,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1781:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1763:22:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":550,"nodeType":"ExpressionStatement","src":"1763:22:7"}]},"documentation":{"id":540,"nodeType":"StructuredDocumentation","src":"1608:98:7","text":"@dev Inheritable function which authorizes someone\n @param who the address to authorize"},"id":552,"implemented":true,"kind":"function","modifiers":[],"name":"_authorize","nameLocation":"1720:10:7","nodeType":"FunctionDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":542,"mutability":"mutable","name":"who","nameLocation":"1739:3:7","nodeType":"VariableDeclaration","scope":552,"src":"1731:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":541,"name":"address","nodeType":"ElementaryTypeName","src":"1731:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1730:13:7"},"returnParameters":{"id":544,"nodeType":"ParameterList","parameters":[],"src":"1753:0:7"},"scope":553,"src":"1711:81:7","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":554,"src":"65:1729:7","usedErrors":[]}],"src":"39:1755:7"},"id":7},"contracts/ERC20Permit.sol":{"ast":{"absolutePath":"contracts/ERC20Permit.sol","exportedSymbols":{"ERC20Permit":[991],"IERC20":[1214],"IERC20Permit":[1253]},"id":992,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":555,"literals":["solidity","^","0.8",".3"],"nodeType":"PragmaDirective","src":"179:23:8"},{"absolutePath":"contracts/IERC20Permit.sol","file":"./IERC20Permit.sol","id":556,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":992,"sourceUnit":1254,"src":"204:28:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":557,"name":"IERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":1253,"src":"509:12:8"},"id":558,"nodeType":"InheritanceSpecifier","src":"509:12:8"}],"canonicalName":"ERC20Permit","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":991,"linearizedBaseContracts":[991,1253,1214],"name":"ERC20Permit","nameLocation":"494:11:8","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1142],"constant":false,"functionSelector":"06fdde03","id":560,"mutability":"mutable","name":"name","nameLocation":"603:4:8","nodeType":"VariableDeclaration","scope":991,"src":"589:18:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":559,"name":"string","nodeType":"ElementaryTypeName","src":"589:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"baseFunctions":[1147],"constant":false,"functionSelector":"95d89b41","id":563,"mutability":"mutable","name":"symbol","nameLocation":"673:6:8","nodeType":"VariableDeclaration","overrides":{"id":562,"nodeType":"OverrideSpecifier","overrides":[],"src":"664:8:8"},"scope":991,"src":"650:29:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":561,"name":"string","nodeType":"ElementaryTypeName","src":"650:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"public"},{"baseFunctions":[1159],"constant":false,"functionSelector":"313ce567","id":566,"mutability":"mutable","name":"decimals","nameLocation":"783:8:8","nodeType":"VariableDeclaration","overrides":{"id":565,"nodeType":"OverrideSpecifier","overrides":[],"src":"774:8:8"},"scope":991,"src":"761:30:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":564,"name":"uint8","nodeType":"ElementaryTypeName","src":"761:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"public"},{"baseFunctions":[1154],"constant":false,"functionSelector":"70a08231","id":571,"mutability":"mutable","name":"balanceOf","nameLocation":"892:9:8","nodeType":"VariableDeclaration","overrides":{"id":570,"nodeType":"OverrideSpecifier","overrides":[],"src":"883:8:8"},"scope":991,"src":"848:53:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":569,"keyType":{"id":567,"name":"address","nodeType":"ElementaryTypeName","src":"856:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"848:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":568,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"baseFunctions":[1177],"constant":false,"functionSelector":"dd62ed3e","id":578,"mutability":"mutable","name":"allowance","nameLocation":"1052:9:8","nodeType":"VariableDeclaration","overrides":{"id":577,"nodeType":"OverrideSpecifier","overrides":[],"src":"1043:8:8"},"scope":991,"src":"988:73:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":576,"keyType":{"id":572,"name":"address","nodeType":"ElementaryTypeName","src":"996:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"988:47:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":575,"keyType":{"id":573,"name":"address","nodeType":"ElementaryTypeName","src":"1015:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1007:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":574,"name":"uint256","nodeType":"ElementaryTypeName","src":"1026:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"public"},{"baseFunctions":[1246],"constant":false,"functionSelector":"7ecebe00","id":583,"mutability":"mutable","name":"nonces","nameLocation":"1179:6:8","nodeType":"VariableDeclaration","overrides":{"id":582,"nodeType":"OverrideSpecifier","overrides":[],"src":"1170:8:8"},"scope":991,"src":"1135:50:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":581,"keyType":{"id":579,"name":"address","nodeType":"ElementaryTypeName","src":"1143:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1135:27:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"1154:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"baseFunctions":[1252],"constant":false,"functionSelector":"3644e515","id":586,"mutability":"mutable","name":"DOMAIN_SEPARATOR","nameLocation":"1299:16:8","nodeType":"VariableDeclaration","overrides":{"id":585,"nodeType":"OverrideSpecifier","overrides":[],"src":"1290:8:8"},"scope":991,"src":"1275:40:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":584,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1275:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"30adf81f","id":589,"mutability":"constant","name":"PERMIT_TYPEHASH","nameLocation":"1491:15:8","nodeType":"VariableDeclaration","scope":991,"src":"1467:116:8","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1467:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339","id":588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1517:66:8","typeDescriptions":{"typeIdentifier":"t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1","typeString":"int_const 4995...(69 digits omitted)...3241"},"value":"0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"},"visibility":"public"},{"body":{"id":667,"nodeType":"Block","src":"1928:1250:8","statements":[{"expression":{"id":599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":597,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"1973:4:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":598,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"1980:5:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1973:12:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":600,"nodeType":"ExpressionStatement","src":"1973:12:8"},{"expression":{"id":603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":601,"name":"symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":563,"src":"1995:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":602,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"2004:7:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1995:16:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":604,"nodeType":"ExpressionStatement","src":"1995:16:8"},{"expression":{"id":607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":605,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"2021:8:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"3138","id":606,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2032:2:8","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"src":"2021:13:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":608,"nodeType":"ExpressionStatement","src":"2021:13:8"},{"expression":{"id":620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":609,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"2422:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":614,"indexExpression":{"arguments":[{"hexValue":"30","id":612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2440:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":611,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2432:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":610,"name":"address","nodeType":"ElementaryTypeName","src":"2432:7:8","typeDescriptions":{}}},"id":613,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2432:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2422:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":617,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2451:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":616,"name":"uint256","nodeType":"ElementaryTypeName","src":"2451:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":615,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2446:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2446:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":619,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2446:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2422:41:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":621,"nodeType":"ExpressionStatement","src":"2422:41:8"},{"expression":{"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":622,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"2473:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":627,"indexExpression":{"arguments":[{"id":625,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2491:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Permit_$991","typeString":"contract ERC20Permit"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20Permit_$991","typeString":"contract ERC20Permit"}],"id":624,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2483:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":623,"name":"address","nodeType":"ElementaryTypeName","src":"2483:7:8","typeDescriptions":{}}},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2483:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2473:24:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"arguments":[{"id":630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2505:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":629,"name":"uint256","nodeType":"ElementaryTypeName","src":"2505:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":628,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2500:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":631,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2500:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"2500:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2473:44:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":634,"nodeType":"ExpressionStatement","src":"2473:44:8"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":635,"name":"_extraConstruction","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"2573:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":637,"nodeType":"ExpressionStatement","src":"2573:20:8"},{"expression":{"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":638,"name":"DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"2803:16:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429","id":643,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2904:84:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""},"value":"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f","typeString":"literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""}],"id":642,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2873:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2873:133:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":648,"name":"name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"3040:4:8","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":647,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3034:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":646,"name":"bytes","nodeType":"ElementaryTypeName","src":"3034:5:8","typeDescriptions":{}}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3034:11:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}],"id":645,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3024:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":650,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3024:22:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"hexValue":"31","id":654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3080:3:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6","typeString":"literal_string \"1\""}],"id":653,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3074:5:8","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":652,"name":"bytes","nodeType":"ElementaryTypeName","src":"3074:5:8","typeDescriptions":{}}},"id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3074:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":651,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"3064:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":656,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3064:21:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":657,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3103:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"chainid","nodeType":"MemberAccess","src":"3103:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":661,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"3142:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_ERC20Permit_$991","typeString":"contract ERC20Permit"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ERC20Permit_$991","typeString":"contract ERC20Permit"}],"id":660,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3134:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"3134:7:8","typeDescriptions":{}}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3134:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":640,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2845:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"2845:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2845:316:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":639,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"2822:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2822:349:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2803:368:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":666,"nodeType":"ExpressionStatement","src":"2803:368:8"}]},"documentation":{"id":590,"nodeType":"StructuredDocumentation","src":"1590:277:8","text":"@notice Initializes the erc20 contract\n @param name_ the value 'name' will be set to\n @param symbol_ the value 'symbol' will be set to\n @dev decimals default to 18 and must be reset by an inheriting contract for\n      non standard decimal values"},"id":668,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":595,"nodeType":"ParameterList","parameters":[{"constant":false,"id":592,"mutability":"mutable","name":"name_","nameLocation":"1898:5:8","nodeType":"VariableDeclaration","scope":668,"src":"1884:19:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":591,"name":"string","nodeType":"ElementaryTypeName","src":"1884:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":594,"mutability":"mutable","name":"symbol_","nameLocation":"1919:7:8","nodeType":"VariableDeclaration","scope":668,"src":"1905:21:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":593,"name":"string","nodeType":"ElementaryTypeName","src":"1905:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1883:44:8"},"returnParameters":{"id":596,"nodeType":"ParameterList","parameters":[],"src":"1928:0:8"},"scope":991,"src":"1872:1306:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":672,"nodeType":"Block","src":"3333:2:8","statements":[]},"documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"3184:97:8","text":"@notice An optional override function to execute and change state before immutable assignment"},"id":673,"implemented":true,"kind":"function","modifiers":[],"name":"_extraConstruction","nameLocation":"3295:18:8","nodeType":"FunctionDefinition","parameters":{"id":670,"nodeType":"ParameterList","parameters":[],"src":"3313:2:8"},"returnParameters":{"id":671,"nodeType":"ParameterList","parameters":[],"src":"3333:0:8"},"scope":991,"src":"3286:49:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1168],"body":{"id":691,"nodeType":"Block","src":"3822:117:8","statements":[{"expression":{"arguments":[{"expression":{"id":685,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3902:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":686,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3902:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":687,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":676,"src":"3914:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":688,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":678,"src":"3925:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":684,"name":"transferFrom","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":787,"src":"3889:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) returns (bool)"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3889:43:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":683,"id":690,"nodeType":"Return","src":"3882:50:8"}]},"documentation":{"id":674,"nodeType":"StructuredDocumentation","src":"3362:341:8","text":"@notice Allows a token owner to send tokens to another address\n @param recipient The address which will be credited with the tokens\n @param amount The amount user token to send\n @return returns true on success, reverts on failure so cannot return false.\n @dev transfers to this contract address or 0 will fail"},"functionSelector":"a9059cbb","id":692,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3717:8:8","nodeType":"FunctionDefinition","overrides":{"id":680,"nodeType":"OverrideSpecifier","overrides":[],"src":"3798:8:8"},"parameters":{"id":679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"recipient","nameLocation":"3743:9:8","nodeType":"VariableDeclaration","scope":692,"src":"3735:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":675,"name":"address","nodeType":"ElementaryTypeName","src":"3735:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":678,"mutability":"mutable","name":"amount","nameLocation":"3770:6:8","nodeType":"VariableDeclaration","scope":692,"src":"3762:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":677,"name":"uint256","nodeType":"ElementaryTypeName","src":"3762:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3725:57:8"},"returnParameters":{"id":683,"nodeType":"ParameterList","parameters":[{"constant":false,"id":682,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":692,"src":"3816:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":681,"name":"bool","nodeType":"ElementaryTypeName","src":"3816:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3815:6:8"},"scope":991,"src":"3708:231:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1197],"body":{"id":786,"nodeType":"Block","src":"4462:1350:8","statements":[{"assignments":[706],"declarations":[{"constant":false,"id":706,"mutability":"mutable","name":"balance","nameLocation":"4518:7:8","nodeType":"VariableDeclaration","scope":786,"src":"4510:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":705,"name":"uint256","nodeType":"ElementaryTypeName","src":"4510:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":710,"initialValue":{"baseExpression":{"id":707,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"4528:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":709,"indexExpression":{"id":708,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"4538:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4528:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4510:36:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":712,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"4564:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":713,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"4575:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4564:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e742d62616c616e6365","id":715,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4583:29:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cf1bb0c360361ff22414840c5832508d0a49f594e9c1aa6bd1b509b1f4b27b06","typeString":"literal_string \"ERC20: insufficient-balance\""},"value":"ERC20: insufficient-balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cf1bb0c360361ff22414840c5832508d0a49f594e9c1aa6bd1b509b1f4b27b06","typeString":"literal_string \"ERC20: insufficient-balance\""}],"id":711,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4556:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":716,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4556:57:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":717,"nodeType":"ExpressionStatement","src":"4556:57:8"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":718,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"4679:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":719,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4690:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4690:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4679:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":759,"nodeType":"IfStatement","src":"4675:626:8","trueBody":{"id":758,"nodeType":"Block","src":"4702:599:8","statements":[{"assignments":[723],"declarations":[{"constant":false,"id":723,"mutability":"mutable","name":"allowed","nameLocation":"4846:7:8","nodeType":"VariableDeclaration","scope":758,"src":"4838:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"4838:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":730,"initialValue":{"baseExpression":{"baseExpression":{"id":724,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"4856:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":726,"indexExpression":{"id":725,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"4866:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4856:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":729,"indexExpression":{"expression":{"id":727,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4875:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4875:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4856:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4838:48:8"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":731,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"5102:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5118:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":733,"name":"uint256","nodeType":"ElementaryTypeName","src":"5118:7:8","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":732,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5113:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":735,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5113:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"5113:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5102:28:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":757,"nodeType":"IfStatement","src":"5098:193:8","trueBody":{"id":756,"nodeType":"Block","src":"5132:159:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":741,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":739,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"5158:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":740,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"5169:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5158:17:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e742d616c6c6f77616e6365","id":742,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5177:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_0da582174113c4a8ccabf7379918160fd1cb3abd983e4d1b1f8ef1a08042944e","typeString":"literal_string \"ERC20: insufficient-allowance\""},"value":"ERC20: insufficient-allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0da582174113c4a8ccabf7379918160fd1cb3abd983e4d1b1f8ef1a08042944e","typeString":"literal_string \"ERC20: insufficient-allowance\""}],"id":738,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5150:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5150:59:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":744,"nodeType":"ExpressionStatement","src":"5150:59:8"},{"expression":{"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":745,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"5227:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":749,"indexExpression":{"id":746,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"5237:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5227:18:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":750,"indexExpression":{"expression":{"id":747,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5246:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5246:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5227:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":753,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":751,"name":"allowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"5260:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":752,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"5270:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5260:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5227:49:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":755,"nodeType":"ExpressionStatement","src":"5227:49:8"}]}}]}},{"expression":{"id":766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":760,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"5341:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":762,"indexExpression":{"id":761,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"5351:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5341:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":763,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"5362:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":764,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"5372:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5362:16:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5341:37:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":767,"nodeType":"ExpressionStatement","src":"5341:37:8"},{"expression":{"id":776,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":768,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"5605:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":770,"indexExpression":{"id":769,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"5615:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5605:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":775,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":771,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"5628:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":773,"indexExpression":{"id":772,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"5638:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5628:20:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":774,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"5651:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5628:29:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5605:52:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":777,"nodeType":"ExpressionStatement","src":"5605:52:8"},{"eventCall":{"arguments":[{"id":779,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":695,"src":"5714:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":780,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":697,"src":"5723:9:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":781,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":699,"src":"5734:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":778,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"5705:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5705:36:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":783,"nodeType":"EmitStatement","src":"5700:41:8"},{"expression":{"hexValue":"74727565","id":784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5801:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":704,"id":785,"nodeType":"Return","src":"5794:11:8"}]},"documentation":{"id":693,"nodeType":"StructuredDocumentation","src":"3945:369:8","text":"@notice Transfers an amount of erc20 from a spender to a receipt\n @param spender The source of the ERC20 tokens\n @param recipient The destination of the ERC20 tokens\n @param amount the number of tokens to send\n @return returns true on success and reverts on failure\n @dev will fail transfers which send funds to this contract or 0"},"functionSelector":"23b872dd","id":787,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"4328:12:8","nodeType":"FunctionDefinition","overrides":{"id":701,"nodeType":"OverrideSpecifier","overrides":[],"src":"4438:8:8"},"parameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":695,"mutability":"mutable","name":"spender","nameLocation":"4358:7:8","nodeType":"VariableDeclaration","scope":787,"src":"4350:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":694,"name":"address","nodeType":"ElementaryTypeName","src":"4350:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"recipient","nameLocation":"4383:9:8","nodeType":"VariableDeclaration","scope":787,"src":"4375:17:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":696,"name":"address","nodeType":"ElementaryTypeName","src":"4375:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":699,"mutability":"mutable","name":"amount","nameLocation":"4410:6:8","nodeType":"VariableDeclaration","scope":787,"src":"4402:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":698,"name":"uint256","nodeType":"ElementaryTypeName","src":"4402:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4340:82:8"},"returnParameters":{"id":704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":787,"src":"4456:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":702,"name":"bool","nodeType":"ElementaryTypeName","src":"4456:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4455:6:8"},"scope":991,"src":"4319:1493:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":814,"nodeType":"Block","src":"6325:200:8","statements":[{"expression":{"id":803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":795,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"6372:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":797,"indexExpression":{"id":796,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"6382:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6372:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":798,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"6393:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":800,"indexExpression":{"id":799,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"6403:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6393:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":801,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"6414:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6393:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6372:48:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":804,"nodeType":"ExpressionStatement","src":"6372:48:8"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6498:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6490:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":806,"name":"address","nodeType":"ElementaryTypeName","src":"6490:7:8","typeDescriptions":{}}},"id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6490:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":810,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":790,"src":"6502:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":811,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":792,"src":"6511:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":805,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"6481:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6481:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":813,"nodeType":"EmitStatement","src":"6476:42:8"}]},"documentation":{"id":788,"nodeType":"StructuredDocumentation","src":"5818:437:8","text":"@notice This internal minting function allows inheriting contracts\n         to mint tokens in the way they wish.\n @param account the address which will receive the token.\n @param amount the amount of token which they will receive\n @dev This function is virtual so that it can be overridden, if you\n      are reviewing this contract for security you should ensure to\n      check for overrides"},"id":815,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"6269:5:8","nodeType":"FunctionDefinition","parameters":{"id":793,"nodeType":"ParameterList","parameters":[{"constant":false,"id":790,"mutability":"mutable","name":"account","nameLocation":"6283:7:8","nodeType":"VariableDeclaration","scope":815,"src":"6275:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":789,"name":"address","nodeType":"ElementaryTypeName","src":"6275:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":792,"mutability":"mutable","name":"amount","nameLocation":"6300:6:8","nodeType":"VariableDeclaration","scope":815,"src":"6292:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":791,"name":"uint256","nodeType":"ElementaryTypeName","src":"6292:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6274:33:8"},"returnParameters":{"id":794,"nodeType":"ParameterList","parameters":[],"src":"6325:0:8"},"scope":991,"src":"6260:265:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":842,"nodeType":"Block","src":"7021:206:8","statements":[{"expression":{"id":831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":823,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"7076:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":825,"indexExpression":{"id":824,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"7086:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7076:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":830,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":826,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"7097:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":828,"indexExpression":{"id":827,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"7107:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7097:18:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":829,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"7118:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7097:27:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7076:48:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":832,"nodeType":"ExpressionStatement","src":"7076:48:8"},{"eventCall":{"arguments":[{"id":834,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":818,"src":"7192:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":837,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7209:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":836,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7201:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":835,"name":"address","nodeType":"ElementaryTypeName","src":"7201:7:8","typeDescriptions":{}}},"id":838,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7201:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":839,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":820,"src":"7213:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":833,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"7183:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":840,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7183:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":841,"nodeType":"EmitStatement","src":"7178:42:8"}]},"documentation":{"id":816,"nodeType":"StructuredDocumentation","src":"6531:420:8","text":"@notice This internal burning function allows inheriting contracts to\n         burn tokens in the way they see fit.\n @param account the account to remove tokens from\n @param amount  the amount of tokens to remove\n @dev This function is virtual so that it can be overridden, if you\n      are reviewing this contract for security you should ensure to\n      check for overrides"},"id":843,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"6965:5:8","nodeType":"FunctionDefinition","parameters":{"id":821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":818,"mutability":"mutable","name":"account","nameLocation":"6979:7:8","nodeType":"VariableDeclaration","scope":843,"src":"6971:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":817,"name":"address","nodeType":"ElementaryTypeName","src":"6971:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":820,"mutability":"mutable","name":"amount","nameLocation":"6996:6:8","nodeType":"VariableDeclaration","scope":843,"src":"6988:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":819,"name":"uint256","nodeType":"ElementaryTypeName","src":"6988:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6970:33:8"},"returnParameters":{"id":822,"nodeType":"ParameterList","parameters":[],"src":"7021:0:8"},"scope":991,"src":"6956:271:8","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"baseFunctions":[1186],"body":{"id":872,"nodeType":"Block","src":"7726:232:8","statements":[{"expression":{"id":861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":854,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"7795:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":858,"indexExpression":{"expression":{"id":855,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7805:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":856,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7805:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7795:21:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":859,"indexExpression":{"id":857,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"7817:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7795:30:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":860,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"7828:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7795:39:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":862,"nodeType":"ExpressionStatement","src":"7795:39:8"},{"eventCall":{"arguments":[{"expression":{"id":864,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7902:3:8","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":865,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"7902:10:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":866,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":846,"src":"7914:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":867,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"7923:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":863,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"7893:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7893:37:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":869,"nodeType":"EmitStatement","src":"7888:42:8"},{"expression":{"hexValue":"74727565","id":870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7947:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":853,"id":871,"nodeType":"Return","src":"7940:11:8"}]},"documentation":{"id":844,"nodeType":"StructuredDocumentation","src":"7233:377:8","text":"@notice This function allows a user to approve an account which can transfer\n         tokens on their behalf.\n @param account The account which will be approve to transfer tokens\n @param amount The approval amount, if set to uint256.max the allowance does not go down on transfers.\n @return returns true for compatibility with the ERC20 standard"},"functionSelector":"095ea7b3","id":873,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"7624:7:8","nodeType":"FunctionDefinition","overrides":{"id":850,"nodeType":"OverrideSpecifier","overrides":[],"src":"7702:8:8"},"parameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":846,"mutability":"mutable","name":"account","nameLocation":"7649:7:8","nodeType":"VariableDeclaration","scope":873,"src":"7641:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":845,"name":"address","nodeType":"ElementaryTypeName","src":"7641:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":848,"mutability":"mutable","name":"amount","nameLocation":"7674:6:8","nodeType":"VariableDeclaration","scope":873,"src":"7666:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":847,"name":"uint256","nodeType":"ElementaryTypeName","src":"7666:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7631:55:8"},"returnParameters":{"id":853,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":873,"src":"7720:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":851,"name":"bool","nodeType":"ElementaryTypeName","src":"7720:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"7719:6:8"},"scope":991,"src":"7615:343:8","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1238],"body":{"id":978,"nodeType":"Block","src":"9215:1475:8","statements":[{"assignments":[893],"declarations":[{"constant":false,"id":893,"mutability":"mutable","name":"digest","nameLocation":"9281:6:8","nodeType":"VariableDeclaration","scope":978,"src":"9273:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":892,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9273:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":914,"initialValue":{"arguments":[{"arguments":[{"hexValue":"1901","id":897,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9347:10:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},"value":"\u0019\u0001"},{"id":898,"name":"DOMAIN_SEPARATOR","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":586,"src":"9375:16:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[{"arguments":[{"id":902,"name":"PERMIT_TYPEHASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"9476:15:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":903,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"9517:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":904,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"9548:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":905,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"9581:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":906,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"9612:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":908,"indexExpression":{"id":907,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"9619:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9612:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":909,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"9651:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":900,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9440:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":901,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"9440:10:8","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9440:241:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":899,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9409:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9409:290:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","typeString":"literal_string hex\"1901\""},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":895,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"9313:3:8","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"9313:16:8","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9313:400:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":894,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"9290:9:8","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":913,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9290:433:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"9273:450:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":916,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"9787:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9804:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":918,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9796:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":917,"name":"address","nodeType":"ElementaryTypeName","src":"9796:7:8","typeDescriptions":{}}},"id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9796:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9787:19:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e76616c69642d616464726573732d30","id":922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9808:26:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_63ce1ff982ae44aad094e71f7a32e830e1c192617b027e1604999acc859fb5a0","typeString":"literal_string \"ERC20: invalid-address-0\""},"value":"ERC20: invalid-address-0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_63ce1ff982ae44aad094e71f7a32e830e1c192617b027e1604999acc859fb5a0","typeString":"literal_string \"ERC20: invalid-address-0\""}],"id":915,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9779:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":923,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9779:56:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":924,"nodeType":"ExpressionStatement","src":"9779:56:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":926,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"9918:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":928,"name":"digest","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":893,"src":"9937:6:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":929,"name":"v","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":884,"src":"9945:1:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":930,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":886,"src":"9948:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":931,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"9951:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":927,"name":"ecrecover","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-6,"src":"9927:9:8","typeDescriptions":{"typeIdentifier":"t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32,uint8,bytes32,bytes32) pure returns (address)"}},"id":932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9927:26:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9918:35:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e76616c69642d7065726d6974","id":934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9955:23:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9651f421c0a91aae0759487dc95a6c27e3685ef1aa8c7b6a9aaff61a6b425f31","typeString":"literal_string \"ERC20: invalid-permit\""},"value":"ERC20: invalid-permit"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9651f421c0a91aae0759487dc95a6c27e3685ef1aa8c7b6a9aaff61a6b425f31","typeString":"literal_string \"ERC20: invalid-permit\""}],"id":925,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9910:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":935,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9910:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":936,"nodeType":"ExpressionStatement","src":"9910:69:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":945,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":938,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"10063:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":939,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10075:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10063:13:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":941,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10080:5:8","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"10080:15:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":943,"name":"deadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":882,"src":"10099:8:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10080:27:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"10063:44:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207065726d69742d65787069726564","id":946,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10121:23:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_bf0cd640067c3a2c6ea3ebb34ef896c6bfc6649304ad046540a58b1d31406b7f","typeString":"literal_string \"ERC20: permit-expired\""},"value":"ERC20: permit-expired"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bf0cd640067c3a2c6ea3ebb34ef896c6bfc6649304ad046540a58b1d31406b7f","typeString":"literal_string \"ERC20: permit-expired\""}],"id":937,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10042:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":947,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10042:112:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":948,"nodeType":"ExpressionStatement","src":"10042:112:8"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":952,"name":"s","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":888,"src":"10247:1:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10239:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":950,"name":"uint256","nodeType":"ElementaryTypeName","src":"10239:7:8","typeDescriptions":{}}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10239:10:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"307837464646464646464646464646464646464646464646464646464646464646463544353736453733353741343530314444464539324634363638314232304130","id":954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10269:66:8","typeDescriptions":{"typeIdentifier":"t_rational_57896044618658097711785492504343953926418782139537452191302581570759080747168_by_1","typeString":"int_const 5789...(69 digits omitted)...7168"},"value":"0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0"},"src":"10239:96:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e76616c6964207369676e6174757265202773272076616c7565","id":956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10349:36:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_33c8b2e521d57fe3b657b4684a07c4c398e0034c4b4c28c2e83491c0d3ff9c94","typeString":"literal_string \"ERC20: invalid signature 's' value\""},"value":"ERC20: invalid signature 's' value"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_33c8b2e521d57fe3b657b4684a07c4c398e0034c4b4c28c2e83491c0d3ff9c94","typeString":"literal_string \"ERC20: invalid signature 's' value\""}],"id":949,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10218:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10218:177:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":958,"nodeType":"ExpressionStatement","src":"10218:177:8"},{"expression":{"id":962,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"10464:15:8","subExpression":{"baseExpression":{"id":959,"name":"nonces","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":583,"src":"10464:6:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":961,"indexExpression":{"id":960,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10471:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10464:13:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":963,"nodeType":"ExpressionStatement","src":"10464:15:8"},{"expression":{"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":964,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"10535:9:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":967,"indexExpression":{"id":965,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10545:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10535:16:8","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":968,"indexExpression":{"id":966,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"10552:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10535:25:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":969,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"10563:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10535:33:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":971,"nodeType":"ExpressionStatement","src":"10535:33:8"},{"eventCall":{"arguments":[{"id":973,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":876,"src":"10661:5:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":974,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":878,"src":"10668:7:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"10677:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":972,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1213,"src":"10652:8:8","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10652:31:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":977,"nodeType":"EmitStatement","src":"10647:36:8"}]},"documentation":{"id":874,"nodeType":"StructuredDocumentation","src":"7964:1054:8","text":"@notice This function allows a caller who is not the owner of an account to execute the functionality of 'approve' with the owners signature.\n @param owner the owner of the account which is having the new approval set\n @param spender the address which will be allowed to spend owner's tokens\n @param value the new allowance value\n @param deadline the timestamp which the signature must be submitted by to be valid\n @param v Extra ECDSA data which allows public key recovery from signature assumed to be 27 or 28\n @param r The r component of the ECDSA signature\n @param s The s component of the ECDSA signature\n @dev The signature for this function follows EIP 712 standard and should be generated with the\n      eth_signTypedData JSON RPC call instead of the eth_sign JSON RPC call. If using out of date\n      parity signing libraries the v component may need to be adjusted. Also it is very rare but possible\n      for v to be other values, those values are not supported."},"functionSelector":"d505accf","id":979,"implemented":true,"kind":"function","modifiers":[],"name":"permit","nameLocation":"9032:6:8","nodeType":"FunctionDefinition","overrides":{"id":890,"nodeType":"OverrideSpecifier","overrides":[],"src":"9206:8:8"},"parameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"mutability":"mutable","name":"owner","nameLocation":"9056:5:8","nodeType":"VariableDeclaration","scope":979,"src":"9048:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":875,"name":"address","nodeType":"ElementaryTypeName","src":"9048:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":878,"mutability":"mutable","name":"spender","nameLocation":"9079:7:8","nodeType":"VariableDeclaration","scope":979,"src":"9071:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":877,"name":"address","nodeType":"ElementaryTypeName","src":"9071:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":880,"mutability":"mutable","name":"value","nameLocation":"9104:5:8","nodeType":"VariableDeclaration","scope":979,"src":"9096:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":879,"name":"uint256","nodeType":"ElementaryTypeName","src":"9096:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":882,"mutability":"mutable","name":"deadline","nameLocation":"9127:8:8","nodeType":"VariableDeclaration","scope":979,"src":"9119:16:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"9119:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":884,"mutability":"mutable","name":"v","nameLocation":"9151:1:8","nodeType":"VariableDeclaration","scope":979,"src":"9145:7:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":883,"name":"uint8","nodeType":"ElementaryTypeName","src":"9145:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":886,"mutability":"mutable","name":"r","nameLocation":"9170:1:8","nodeType":"VariableDeclaration","scope":979,"src":"9162:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":885,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9162:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":888,"mutability":"mutable","name":"s","nameLocation":"9189:1:8","nodeType":"VariableDeclaration","scope":979,"src":"9181:9:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":887,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9181:7:8","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9038:158:8"},"returnParameters":{"id":891,"nodeType":"ParameterList","parameters":[],"src":"9215:0:8"},"scope":991,"src":"9023:1667:8","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":989,"nodeType":"Block","src":"10883:65:8","statements":[{"expression":{"id":987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":985,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":566,"src":"10921:8:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":986,"name":"decimals_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"10932:9:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"10921:20:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":988,"nodeType":"ExpressionStatement","src":"10921:20:8"}]},"documentation":{"id":980,"nodeType":"StructuredDocumentation","src":"10696:132:8","text":"@notice Internal function which allows inheriting contract to set custom decimals\n @param decimals_ the new decimal value"},"id":990,"implemented":true,"kind":"function","modifiers":[],"name":"_setupDecimals","nameLocation":"10842:14:8","nodeType":"FunctionDefinition","parameters":{"id":983,"nodeType":"ParameterList","parameters":[{"constant":false,"id":982,"mutability":"mutable","name":"decimals_","nameLocation":"10863:9:8","nodeType":"VariableDeclaration","scope":990,"src":"10857:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":981,"name":"uint8","nodeType":"ElementaryTypeName","src":"10857:5:8","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"10856:17:8"},"returnParameters":{"id":984,"nodeType":"ParameterList","parameters":[],"src":"10883:0:8"},"scope":991,"src":"10833:115:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":992,"src":"476:10474:8","usedErrors":[]}],"src":"179:10771:8"},"id":8},"contracts/ERC20PermitWithMint.sol":{"ast":{"absolutePath":"contracts/ERC20PermitWithMint.sol","exportedSymbols":{"Authorizable":[553],"ERC20Permit":[991],"ERC20PermitWithMint":[1135],"IERC20":[1214],"IERC20Permit":[1253]},"id":1136,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":993,"literals":["solidity","^","0.8",".3"],"nodeType":"PragmaDirective","src":"194:23:9"},{"absolutePath":"contracts/ERC20Permit.sol","file":"./ERC20Permit.sol","id":994,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1136,"sourceUnit":992,"src":"219:27:9","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/Authorizable.sol","file":"./Authorizable.sol","id":995,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1136,"sourceUnit":554,"src":"247:28:9","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":996,"name":"ERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":991,"src":"386:11:9"},"id":997,"nodeType":"InheritanceSpecifier","src":"386:11:9"},{"baseName":{"id":998,"name":"Authorizable","nodeType":"IdentifierPath","referencedDeclaration":553,"src":"399:12:9"},"id":999,"nodeType":"InheritanceSpecifier","src":"399:12:9"}],"canonicalName":"ERC20PermitWithMint","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1135,"linearizedBaseContracts":[1135,553,991,1253,1214],"name":"ERC20PermitWithMint","nameLocation":"363:19:9","nodeType":"ContractDefinition","nodes":[{"body":{"id":1017,"nodeType":"Block","src":"763:33:9","statements":[{"expression":{"arguments":[{"id":1014,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1006,"src":"782:6:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1013,"name":"setOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":539,"src":"773:8:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"773:16:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1016,"nodeType":"ExpressionStatement","src":"773:16:9"}]},"documentation":{"id":1000,"nodeType":"StructuredDocumentation","src":"418:210:9","text":"@notice Initializes the erc20 contract\n @param name_ the value 'name' will be set to\n @param symbol_ the value 'symbol' will be set to\n @param owner_ address which has the power to mint"},"id":1018,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1009,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1002,"src":"747:5:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1010,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1004,"src":"754:7:9","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"id":1011,"kind":"baseConstructorSpecifier","modifierName":{"id":1008,"name":"ERC20Permit","nodeType":"IdentifierPath","referencedDeclaration":991,"src":"735:11:9"},"nodeType":"ModifierInvocation","src":"735:27:9"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1007,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1002,"mutability":"mutable","name":"name_","nameLocation":"668:5:9","nodeType":"VariableDeclaration","scope":1018,"src":"654:19:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1001,"name":"string","nodeType":"ElementaryTypeName","src":"654:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1004,"mutability":"mutable","name":"symbol_","nameLocation":"697:7:9","nodeType":"VariableDeclaration","scope":1018,"src":"683:21:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1003,"name":"string","nodeType":"ElementaryTypeName","src":"683:6:9","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1006,"mutability":"mutable","name":"owner_","nameLocation":"722:6:9","nodeType":"VariableDeclaration","scope":1018,"src":"714:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1005,"name":"address","nodeType":"ElementaryTypeName","src":"714:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"644:90:9"},"returnParameters":{"id":1012,"nodeType":"ParameterList","parameters":[],"src":"763:0:9"},"scope":1135,"src":"633:163:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"constant":false,"functionSelector":"18160ddd","id":1020,"mutability":"mutable","name":"totalSupply","nameLocation":"896:11:9","nodeType":"VariableDeclaration","scope":1135,"src":"881:26:9","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1019,"name":"uint256","nodeType":"ElementaryTypeName","src":"881:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"body":{"id":1035,"nodeType":"Block","src":"1129:39:9","statements":[{"expression":{"arguments":[{"id":1031,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1023,"src":"1145:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1032,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"1154:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1030,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[1069],"referencedDeclaration":1069,"src":"1139:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1033,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1139:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1034,"nodeType":"ExpressionStatement","src":"1139:22:9"}]},"documentation":{"id":1021,"nodeType":"StructuredDocumentation","src":"914:144:9","text":"@notice Allows the governance to mint\n @param account the account to addd tokens to\n @param amount the amount of tokens to add"},"functionSelector":"40c10f19","id":1036,"implemented":true,"kind":"function","modifiers":[{"id":1028,"kind":"modifierInvocation","modifierName":{"id":1027,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":472,"src":"1119:9:9"},"nodeType":"ModifierInvocation","src":"1119:9:9"}],"name":"mint","nameLocation":"1072:4:9","nodeType":"FunctionDefinition","parameters":{"id":1026,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1023,"mutability":"mutable","name":"account","nameLocation":"1085:7:9","nodeType":"VariableDeclaration","scope":1036,"src":"1077:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1022,"name":"address","nodeType":"ElementaryTypeName","src":"1077:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1025,"mutability":"mutable","name":"amount","nameLocation":"1102:6:9","nodeType":"VariableDeclaration","scope":1036,"src":"1094:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1024,"name":"uint256","nodeType":"ElementaryTypeName","src":"1094:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1076:33:9"},"returnParameters":{"id":1029,"nodeType":"ParameterList","parameters":[],"src":"1129:0:9"},"scope":1135,"src":"1063:105:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[815],"body":{"id":1068,"nodeType":"Block","src":"1469:272:9","statements":[{"expression":{"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1045,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"1515:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1047,"indexExpression":{"id":1046,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"1525:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1515:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1048,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"1536:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1050,"indexExpression":{"id":1049,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"1546:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1536:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1051,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"1557:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1536:27:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1515:48:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1054,"nodeType":"ExpressionStatement","src":"1515:48:9"},{"expression":{"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1055,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"1606:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1056,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"1621:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1606:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1058,"nodeType":"ExpressionStatement","src":"1606:21:9"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":1062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1714:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1061,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1706:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1060,"name":"address","nodeType":"ElementaryTypeName","src":"1706:7:9","typeDescriptions":{}}},"id":1063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1706:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1064,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"1718:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1065,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1041,"src":"1727:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1059,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"1697:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1066,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1697:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1067,"nodeType":"EmitStatement","src":"1692:42:9"}]},"documentation":{"id":1037,"nodeType":"StructuredDocumentation","src":"1174:224:9","text":"@notice This function overrides the ERC20Permit Library's _mint and causes it\n          to track total supply.\n @param account the account to addd tokens to\n @param amount the amount of tokens to add"},"id":1069,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"1412:5:9","nodeType":"FunctionDefinition","overrides":{"id":1043,"nodeType":"OverrideSpecifier","overrides":[],"src":"1460:8:9"},"parameters":{"id":1042,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"account","nameLocation":"1426:7:9","nodeType":"VariableDeclaration","scope":1069,"src":"1418:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1038,"name":"address","nodeType":"ElementaryTypeName","src":"1418:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1041,"mutability":"mutable","name":"amount","nameLocation":"1443:6:9","nodeType":"VariableDeclaration","scope":1069,"src":"1435:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1040,"name":"uint256","nodeType":"ElementaryTypeName","src":"1435:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1417:33:9"},"returnParameters":{"id":1044,"nodeType":"ParameterList","parameters":[],"src":"1469:0:9"},"scope":1135,"src":"1403:338:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1084,"nodeType":"Block","src":"1957:39:9","statements":[{"expression":{"arguments":[{"id":1080,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1072,"src":"1973:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1081,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1074,"src":"1982:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1079,"name":"_burn","nodeType":"Identifier","overloadedDeclarations":[1134],"referencedDeclaration":1134,"src":"1967:5:9","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1967:22:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1083,"nodeType":"ExpressionStatement","src":"1967:22:9"}]},"documentation":{"id":1070,"nodeType":"StructuredDocumentation","src":"1747:139:9","text":"@notice Allows the governance to burn\n @param account the account to burn from\n @param amount the amount of token to burn"},"functionSelector":"9dc29fac","id":1085,"implemented":true,"kind":"function","modifiers":[{"id":1077,"kind":"modifierInvocation","modifierName":{"id":1076,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":472,"src":"1947:9:9"},"nodeType":"ModifierInvocation","src":"1947:9:9"}],"name":"burn","nameLocation":"1900:4:9","nodeType":"FunctionDefinition","parameters":{"id":1075,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1072,"mutability":"mutable","name":"account","nameLocation":"1913:7:9","nodeType":"VariableDeclaration","scope":1085,"src":"1905:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1071,"name":"address","nodeType":"ElementaryTypeName","src":"1905:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1074,"mutability":"mutable","name":"amount","nameLocation":"1930:6:9","nodeType":"VariableDeclaration","scope":1085,"src":"1922:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1073,"name":"uint256","nodeType":"ElementaryTypeName","src":"1922:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1904:33:9"},"returnParameters":{"id":1078,"nodeType":"ParameterList","parameters":[],"src":"1957:0:9"},"scope":1135,"src":"1891:105:9","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"baseFunctions":[843],"body":{"id":1133,"nodeType":"Block","src":"2264:480:9","statements":[{"assignments":[1095],"declarations":[{"constant":false,"id":1095,"mutability":"mutable","name":"currentBalance","nameLocation":"2315:14:9","nodeType":"VariableDeclaration","scope":1133,"src":"2307:22:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1094,"name":"uint256","nodeType":"ElementaryTypeName","src":"2307:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1099,"initialValue":{"baseExpression":{"id":1096,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"2332:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1098,"indexExpression":{"id":1097,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"2342:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2332:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2307:43:9"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1100,"name":"currentBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"2432:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1101,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"2449:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2432:23:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1118,"nodeType":"Block","src":"2510:69:9","statements":[{"expression":{"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1110,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"2524:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1112,"indexExpression":{"id":1111,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"2534:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2524:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1113,"name":"currentBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1095,"src":"2545:14:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1114,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"2562:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2545:23:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2524:44:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1117,"nodeType":"ExpressionStatement","src":"2524:44:9"}]},"id":1119,"nodeType":"IfStatement","src":"2428:151:9","trueBody":{"id":1109,"nodeType":"Block","src":"2457:47:9","statements":[{"expression":{"id":1107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1103,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"2471:9:9","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1105,"indexExpression":{"id":1104,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"2481:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2471:18:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2492:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2471:22:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1108,"nodeType":"ExpressionStatement","src":"2471:22:9"}]}},{"expression":{"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1120,"name":"totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1020,"src":"2621:11:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":1121,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"2636:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2621:21:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1123,"nodeType":"ExpressionStatement","src":"2621:21:9"},{"eventCall":{"arguments":[{"id":1125,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1088,"src":"2709:7:9","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":1128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2726:1:9","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2718:7:9","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1126,"name":"address","nodeType":"ElementaryTypeName","src":"2718:7:9","typeDescriptions":{}}},"id":1129,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2718:10:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1130,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1090,"src":"2730:6:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1124,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1205,"src":"2700:8:9","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1131,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2700:37:9","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1132,"nodeType":"EmitStatement","src":"2695:42:9"}]},"documentation":{"id":1086,"nodeType":"StructuredDocumentation","src":"2002:191:9","text":"@notice This function overrides the ERC20Permit Library's _burn to decrement total supply\n @param account the account to burn from\n @param amount the amount of token to burn"},"id":1134,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"2207:5:9","nodeType":"FunctionDefinition","overrides":{"id":1092,"nodeType":"OverrideSpecifier","overrides":[],"src":"2255:8:9"},"parameters":{"id":1091,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1088,"mutability":"mutable","name":"account","nameLocation":"2221:7:9","nodeType":"VariableDeclaration","scope":1134,"src":"2213:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1087,"name":"address","nodeType":"ElementaryTypeName","src":"2213:7:9","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1090,"mutability":"mutable","name":"amount","nameLocation":"2238:6:9","nodeType":"VariableDeclaration","scope":1134,"src":"2230:14:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1089,"name":"uint256","nodeType":"ElementaryTypeName","src":"2230:7:9","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2212:33:9"},"returnParameters":{"id":1093,"nodeType":"ParameterList","parameters":[],"src":"2264:0:9"},"scope":1135,"src":"2198:546:9","stateMutability":"nonpayable","virtual":false,"visibility":"internal"}],"scope":1136,"src":"345:2401:9","usedErrors":[]}],"src":"194:2552:9"},"id":9},"contracts/IERC20.sol":{"ast":{"absolutePath":"contracts/IERC20.sol","exportedSymbols":{"IERC20":[1214]},"id":1215,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1137,"literals":["solidity","^","0.8",".3"],"nodeType":"PragmaDirective","src":"39:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":1214,"linearizedBaseContracts":[1214],"name":"IERC20","nameLocation":"74:6:10","nodeType":"ContractDefinition","nodes":[{"functionSelector":"06fdde03","id":1142,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"96:4:10","nodeType":"FunctionDefinition","parameters":{"id":1138,"nodeType":"ParameterList","parameters":[],"src":"100:2:10"},"returnParameters":{"id":1141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1142,"src":"126:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1139,"name":"string","nodeType":"ElementaryTypeName","src":"126:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"125:15:10"},"scope":1214,"src":"87:54:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"95d89b41","id":1147,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"156:6:10","nodeType":"FunctionDefinition","parameters":{"id":1143,"nodeType":"ParameterList","parameters":[],"src":"162:2:10"},"returnParameters":{"id":1146,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1145,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1147,"src":"188:13:10","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1144,"name":"string","nodeType":"ElementaryTypeName","src":"188:6:10","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"187:15:10"},"scope":1214,"src":"147:56:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":1154,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"218:9:10","nodeType":"FunctionDefinition","parameters":{"id":1150,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1149,"mutability":"mutable","name":"account","nameLocation":"236:7:10","nodeType":"VariableDeclaration","scope":1154,"src":"228:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1148,"name":"address","nodeType":"ElementaryTypeName","src":"228:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"227:17:10"},"returnParameters":{"id":1153,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1152,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1154,"src":"268:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1151,"name":"uint256","nodeType":"ElementaryTypeName","src":"268:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"267:9:10"},"scope":1214,"src":"209:68:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":1159,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"377:8:10","nodeType":"FunctionDefinition","parameters":{"id":1155,"nodeType":"ParameterList","parameters":[],"src":"385:2:10"},"returnParameters":{"id":1158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1159,"src":"411:5:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1156,"name":"uint8","nodeType":"ElementaryTypeName","src":"411:5:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"410:7:10"},"scope":1214,"src":"368:50:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":1168,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"433:8:10","nodeType":"FunctionDefinition","parameters":{"id":1164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1161,"mutability":"mutable","name":"recipient","nameLocation":"459:9:10","nodeType":"VariableDeclaration","scope":1168,"src":"451:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1160,"name":"address","nodeType":"ElementaryTypeName","src":"451:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1163,"mutability":"mutable","name":"amount","nameLocation":"486:6:10","nodeType":"VariableDeclaration","scope":1168,"src":"478:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1162,"name":"uint256","nodeType":"ElementaryTypeName","src":"478:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"441:57:10"},"returnParameters":{"id":1167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1166,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1168,"src":"517:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1165,"name":"bool","nodeType":"ElementaryTypeName","src":"517:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"516:6:10"},"scope":1214,"src":"424:99:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"dd62ed3e","id":1177,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"538:9:10","nodeType":"FunctionDefinition","parameters":{"id":1173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1170,"mutability":"mutable","name":"owner","nameLocation":"565:5:10","nodeType":"VariableDeclaration","scope":1177,"src":"557:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1169,"name":"address","nodeType":"ElementaryTypeName","src":"557:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1172,"mutability":"mutable","name":"spender","nameLocation":"588:7:10","nodeType":"VariableDeclaration","scope":1177,"src":"580:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1171,"name":"address","nodeType":"ElementaryTypeName","src":"580:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"547:54:10"},"returnParameters":{"id":1176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1177,"src":"625:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1174,"name":"uint256","nodeType":"ElementaryTypeName","src":"625:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"624:9:10"},"scope":1214,"src":"529:105:10","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"095ea7b3","id":1186,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"649:7:10","nodeType":"FunctionDefinition","parameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1179,"mutability":"mutable","name":"spender","nameLocation":"665:7:10","nodeType":"VariableDeclaration","scope":1186,"src":"657:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1178,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1181,"mutability":"mutable","name":"amount","nameLocation":"682:6:10","nodeType":"VariableDeclaration","scope":1186,"src":"674:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1180,"name":"uint256","nodeType":"ElementaryTypeName","src":"674:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"656:33:10"},"returnParameters":{"id":1185,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1184,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1186,"src":"708:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1183,"name":"bool","nodeType":"ElementaryTypeName","src":"708:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"707:6:10"},"scope":1214,"src":"640:74:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"23b872dd","id":1197,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"729:12:10","nodeType":"FunctionDefinition","parameters":{"id":1193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1188,"mutability":"mutable","name":"sender","nameLocation":"759:6:10","nodeType":"VariableDeclaration","scope":1197,"src":"751:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1187,"name":"address","nodeType":"ElementaryTypeName","src":"751:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1190,"mutability":"mutable","name":"recipient","nameLocation":"783:9:10","nodeType":"VariableDeclaration","scope":1197,"src":"775:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1189,"name":"address","nodeType":"ElementaryTypeName","src":"775:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1192,"mutability":"mutable","name":"amount","nameLocation":"810:6:10","nodeType":"VariableDeclaration","scope":1197,"src":"802:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1191,"name":"uint256","nodeType":"ElementaryTypeName","src":"802:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"741:81:10"},"returnParameters":{"id":1196,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1195,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1197,"src":"841:4:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1194,"name":"bool","nodeType":"ElementaryTypeName","src":"841:4:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"840:6:10"},"scope":1214,"src":"720:127:10","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"id":1205,"name":"Transfer","nameLocation":"859:8:10","nodeType":"EventDefinition","parameters":{"id":1204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1199,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"884:4:10","nodeType":"VariableDeclaration","scope":1205,"src":"868:20:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1198,"name":"address","nodeType":"ElementaryTypeName","src":"868:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1201,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"906:2:10","nodeType":"VariableDeclaration","scope":1205,"src":"890:18:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1200,"name":"address","nodeType":"ElementaryTypeName","src":"890:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1203,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"918:5:10","nodeType":"VariableDeclaration","scope":1205,"src":"910:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1202,"name":"uint256","nodeType":"ElementaryTypeName","src":"910:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"867:57:10"},"src":"853:72:10"},{"anonymous":false,"id":1213,"name":"Approval","nameLocation":"936:8:10","nodeType":"EventDefinition","parameters":{"id":1212,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1207,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"970:5:10","nodeType":"VariableDeclaration","scope":1213,"src":"954:21:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1206,"name":"address","nodeType":"ElementaryTypeName","src":"954:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1209,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"1001:7:10","nodeType":"VariableDeclaration","scope":1213,"src":"985:23:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1208,"name":"address","nodeType":"ElementaryTypeName","src":"985:7:10","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1211,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"1026:5:10","nodeType":"VariableDeclaration","scope":1213,"src":"1018:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1210,"name":"uint256","nodeType":"ElementaryTypeName","src":"1018:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"944:93:10"},"src":"930:108:10"}],"scope":1215,"src":"64:976:10","usedErrors":[]}],"src":"39:1001:10"},"id":10},"contracts/IERC20Permit.sol":{"ast":{"absolutePath":"contracts/IERC20Permit.sol","exportedSymbols":{"IERC20":[1214],"IERC20Permit":[1253]},"id":1254,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1216,"literals":["solidity","^","0.8",".3"],"nodeType":"PragmaDirective","src":"60:23:11"},{"absolutePath":"contracts/IERC20.sol","file":"./IERC20.sol","id":1217,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1254,"sourceUnit":1215,"src":"85:22:11","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1219,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1214,"src":"618:6:11"},"id":1220,"nodeType":"InheritanceSpecifier","src":"618:6:11"}],"canonicalName":"IERC20Permit","contractDependencies":[],"contractKind":"interface","documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"109:482:11","text":" @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all."},"fullyImplemented":false,"id":1253,"linearizedBaseContracts":[1253,1214],"name":"IERC20Permit","nameLocation":"602:12:11","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1221,"nodeType":"StructuredDocumentation","src":"631:788:11","text":" @dev Sets `value` as the allowance of `spender` over `owner`'s tokens,\n given `owner`'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section]."},"functionSelector":"d505accf","id":1238,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nameLocation":"1433:6:11","nodeType":"FunctionDefinition","parameters":{"id":1236,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"owner","nameLocation":"1457:5:11","nodeType":"VariableDeclaration","scope":1238,"src":"1449:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1222,"name":"address","nodeType":"ElementaryTypeName","src":"1449:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1225,"mutability":"mutable","name":"spender","nameLocation":"1480:7:11","nodeType":"VariableDeclaration","scope":1238,"src":"1472:15:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1224,"name":"address","nodeType":"ElementaryTypeName","src":"1472:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1227,"mutability":"mutable","name":"value","nameLocation":"1505:5:11","nodeType":"VariableDeclaration","scope":1238,"src":"1497:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1226,"name":"uint256","nodeType":"ElementaryTypeName","src":"1497:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1229,"mutability":"mutable","name":"deadline","nameLocation":"1528:8:11","nodeType":"VariableDeclaration","scope":1238,"src":"1520:16:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1228,"name":"uint256","nodeType":"ElementaryTypeName","src":"1520:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1231,"mutability":"mutable","name":"v","nameLocation":"1552:1:11","nodeType":"VariableDeclaration","scope":1238,"src":"1546:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1230,"name":"uint8","nodeType":"ElementaryTypeName","src":"1546:5:11","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1233,"mutability":"mutable","name":"r","nameLocation":"1571:1:11","nodeType":"VariableDeclaration","scope":1238,"src":"1563:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1232,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1563:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":1235,"mutability":"mutable","name":"s","nameLocation":"1590:1:11","nodeType":"VariableDeclaration","scope":1238,"src":"1582:9:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1234,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1582:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1439:158:11"},"returnParameters":{"id":1237,"nodeType":"ParameterList","parameters":[],"src":"1606:0:11"},"scope":1253,"src":"1424:183:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1239,"nodeType":"StructuredDocumentation","src":"1613:294:11","text":" @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."},"functionSelector":"7ecebe00","id":1246,"implemented":false,"kind":"function","modifiers":[],"name":"nonces","nameLocation":"1921:6:11","nodeType":"FunctionDefinition","parameters":{"id":1242,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1241,"mutability":"mutable","name":"owner","nameLocation":"1936:5:11","nodeType":"VariableDeclaration","scope":1246,"src":"1928:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1240,"name":"address","nodeType":"ElementaryTypeName","src":"1928:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1927:15:11"},"returnParameters":{"id":1245,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1244,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1246,"src":"1966:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1243,"name":"uint256","nodeType":"ElementaryTypeName","src":"1966:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1965:9:11"},"scope":1253,"src":"1912:63:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1247,"nodeType":"StructuredDocumentation","src":"1981:128:11","text":" @dev Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}."},"functionSelector":"3644e515","id":1252,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nameLocation":"2176:16:11","nodeType":"FunctionDefinition","parameters":{"id":1248,"nodeType":"ParameterList","parameters":[],"src":"2192:2:11"},"returnParameters":{"id":1251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1250,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1252,"src":"2218:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1249,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2218:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2217:9:11"},"scope":1253,"src":"2167:60:11","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1254,"src":"592:1637:11","usedErrors":[]}],"src":"60:2169:11"},"id":11},"contracts/mockHog.sol":{"ast":{"absolutePath":"contracts/mockHog.sol","exportedSymbols":{"Authorizable":[553],"ERC20Permit":[991],"ERC20PermitWithMint":[1135],"IERC20":[1214],"IERC20Permit":[1253],"IUniswapV3Pool":[21],"IUniswapV3PoolActions":[117],"IUniswapV3PoolDerivedState":[148],"IUniswapV3PoolEvents":[267],"IUniswapV3PoolImmutables":[307],"IUniswapV3PoolOwnerActions":[333],"IUniswapV3PoolState":[441],"MockHog":[1307]},"id":1308,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"absolutePath":"contracts/ERC20PermitWithMint.sol","file":"./ERC20PermitWithMint.sol","id":1255,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1308,"sourceUnit":1136,"src":"74:35:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol","file":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol","id":1256,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1308,"sourceUnit":22,"src":"110:66:12","symbolAliases":[],"unitAlias":""},{"id":1257,"literals":["solidity","^","0.8",".3"],"nodeType":"PragmaDirective","src":"177:23:12"},{"abstract":false,"baseContracts":[{"baseName":{"id":1258,"name":"ERC20PermitWithMint","nodeType":"IdentifierPath","referencedDeclaration":1135,"src":"222:19:12"},"id":1259,"nodeType":"InheritanceSpecifier","src":"222:19:12"}],"canonicalName":"MockHog","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1307,"linearizedBaseContracts":[1307,1135,553,991,1253,1214],"name":"MockHog","nameLocation":"211:7:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":1273,"nodeType":"Block","src":"400:2:12","statements":[]},"id":1274,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"id":1268,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1261,"src":"376:5:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1269,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1263,"src":"383:7:12","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1270,"name":"owner_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1265,"src":"392:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1271,"kind":"baseConstructorSpecifier","modifierName":{"id":1267,"name":"ERC20PermitWithMint","nodeType":"IdentifierPath","referencedDeclaration":1135,"src":"356:19:12"},"nodeType":"ModifierInvocation","src":"356:43:12"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":1266,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1261,"mutability":"mutable","name":"name_","nameLocation":"283:5:12","nodeType":"VariableDeclaration","scope":1274,"src":"269:19:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1260,"name":"string","nodeType":"ElementaryTypeName","src":"269:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1263,"mutability":"mutable","name":"symbol_","nameLocation":"312:7:12","nodeType":"VariableDeclaration","scope":1274,"src":"298:21:12","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1262,"name":"string","nodeType":"ElementaryTypeName","src":"298:6:12","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1265,"mutability":"mutable","name":"owner_","nameLocation":"343:6:12","nodeType":"VariableDeclaration","scope":1274,"src":"335:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1264,"name":"address","nodeType":"ElementaryTypeName","src":"335:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"259:96:12"},"returnParameters":{"id":1272,"nodeType":"ParameterList","parameters":[],"src":"400:0:12"},"scope":1307,"src":"248:154:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1287,"nodeType":"Block","src":"466:40:12","statements":[{"expression":{"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1281,"name":"balanceOf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":571,"src":"476:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1283,"indexExpression":{"id":1282,"name":"who","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1276,"src":"486:3:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"476:14:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1284,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1278,"src":"493:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"476:23:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1286,"nodeType":"ExpressionStatement","src":"476:23:12"}]},"functionSelector":"e30443bc","id":1288,"implemented":true,"kind":"function","modifiers":[],"name":"setBalance","nameLocation":"417:10:12","nodeType":"FunctionDefinition","parameters":{"id":1279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1276,"mutability":"mutable","name":"who","nameLocation":"436:3:12","nodeType":"VariableDeclaration","scope":1288,"src":"428:11:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1275,"name":"address","nodeType":"ElementaryTypeName","src":"428:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1278,"mutability":"mutable","name":"amount","nameLocation":"449:6:12","nodeType":"VariableDeclaration","scope":1288,"src":"441:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1277,"name":"uint256","nodeType":"ElementaryTypeName","src":"441:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"427:29:12"},"returnParameters":{"id":1280,"nodeType":"ParameterList","parameters":[],"src":"466:0:12"},"scope":1307,"src":"408:98:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1305,"nodeType":"Block","src":"622:52:12","statements":[{"expression":{"id":1303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1297,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":578,"src":"632:9:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1300,"indexExpression":{"id":1298,"name":"source","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"642:6:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"632:17:12","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1301,"indexExpression":{"id":1299,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"650:7:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"632:26:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1302,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"661:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"632:35:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1304,"nodeType":"ExpressionStatement","src":"632:35:12"}]},"functionSelector":"da46098c","id":1306,"implemented":true,"kind":"function","modifiers":[],"name":"setAllowance","nameLocation":"521:12:12","nodeType":"FunctionDefinition","parameters":{"id":1295,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1290,"mutability":"mutable","name":"source","nameLocation":"551:6:12","nodeType":"VariableDeclaration","scope":1306,"src":"543:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"543:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1292,"mutability":"mutable","name":"spender","nameLocation":"575:7:12","nodeType":"VariableDeclaration","scope":1306,"src":"567:15:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1291,"name":"address","nodeType":"ElementaryTypeName","src":"567:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1294,"mutability":"mutable","name":"amount","nameLocation":"600:6:12","nodeType":"VariableDeclaration","scope":1306,"src":"592:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1293,"name":"uint256","nodeType":"ElementaryTypeName","src":"592:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"533:79:12"},"returnParameters":{"id":1296,"nodeType":"ParameterList","parameters":[],"src":"622:0:12"},"scope":1307,"src":"512:162:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1308,"src":"202:474:12","usedErrors":[]}],"src":"74:602:12"},"id":12}},"contracts":{"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol":{"IUniswapV3Pool":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"Collect","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"CollectProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid1","type":"uint256"}],"name":"Flash","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextOld","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextNew","type":"uint16"}],"name":"IncreaseObservationCardinalityNext","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Initialize","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"feeProtocol0Old","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol1Old","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol0New","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol1New","type":"uint8"}],"name":"SetFeeProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"int256","name":"amount0","type":"int256"},{"indexed":false,"internalType":"int256","name":"amount1","type":"int256"},{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Swap","type":"event"},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collect","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collectProtocol","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeGrowthGlobal0X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeGrowthGlobal1X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"}],"name":"increaseObservationCardinalityNext","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxLiquidityPerTick","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"observations","outputs":[{"internalType":"uint32","name":"blockTimestamp","type":"uint32"},{"internalType":"int56","name":"tickCumulative","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityCumulativeX128","type":"uint160"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32[]","name":"secondsAgos","type":"uint32[]"}],"name":"observe","outputs":[{"internalType":"int56[]","name":"tickCumulatives","type":"int56[]"},{"internalType":"uint160[]","name":"secondsPerLiquidityCumulativeX128s","type":"uint160[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"name":"positions","outputs":[{"internalType":"uint128","name":"_liquidity","type":"uint128"},{"internalType":"uint256","name":"feeGrowthInside0LastX128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthInside1LastX128","type":"uint256"},{"internalType":"uint128","name":"tokensOwed0","type":"uint128"},{"internalType":"uint128","name":"tokensOwed1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFees","outputs":[{"internalType":"uint128","name":"token0","type":"uint128"},{"internalType":"uint128","name":"token1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"feeProtocol0","type":"uint8"},{"internalType":"uint8","name":"feeProtocol1","type":"uint8"}],"name":"setFeeProtocol","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"slot0","outputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"uint16","name":"observationIndex","type":"uint16"},{"internalType":"uint16","name":"observationCardinality","type":"uint16"},{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"},{"internalType":"uint8","name":"feeProtocol","type":"uint8"},{"internalType":"bool","name":"unlocked","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"name":"snapshotCumulativesInside","outputs":[{"internalType":"int56","name":"tickCumulativeInside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityInsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsInside","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[{"internalType":"int256","name":"amount0","type":"int256"},{"internalType":"int256","name":"amount1","type":"int256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int16","name":"wordPosition","type":"int16"}],"name":"tickBitmap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tick","type":"int24"}],"name":"ticks","outputs":[{"internalType":"uint128","name":"liquidityGross","type":"uint128"},{"internalType":"int128","name":"liquidityNet","type":"int128"},{"internalType":"uint256","name":"feeGrowthOutside0X128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthOutside1X128","type":"uint256"},{"internalType":"int56","name":"tickCumulativeOutside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityOutsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsOutside","type":"uint32"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"The pool interface is broken up into many smaller pieces","kind":"dev","methods":{"burn(int24,int24,uint128)":{"details":"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect","params":{"amount":"How much liquidity to burn","tickLower":"The lower tick of the position for which to burn liquidity","tickUpper":"The upper tick of the position for which to burn liquidity"},"returns":{"amount0":"The amount of token0 sent to the recipient","amount1":"The amount of token1 sent to the recipient"}},"collect(address,int24,int24,uint128,uint128)":{"details":"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.","params":{"amount0Requested":"How much token0 should be withdrawn from the fees owed","amount1Requested":"How much token1 should be withdrawn from the fees owed","recipient":"The address which should receive the fees collected","tickLower":"The lower tick of the position for which to collect fees","tickUpper":"The upper tick of the position for which to collect fees"},"returns":{"amount0":"The amount of fees collected in token0","amount1":"The amount of fees collected in token1"}},"collectProtocol(address,uint128,uint128)":{"params":{"amount0Requested":"The maximum amount of token0 to send, can be 0 to collect fees in only token1","amount1Requested":"The maximum amount of token1 to send, can be 0 to collect fees in only token0","recipient":"The address to which collected protocol fees should be sent"},"returns":{"amount0":"The protocol fee collected in token0","amount1":"The protocol fee collected in token1"}},"factory()":{"returns":{"_0":"The contract address"}},"fee()":{"returns":{"_0":"The fee"}},"feeGrowthGlobal0X128()":{"details":"This value can overflow the uint256"},"feeGrowthGlobal1X128()":{"details":"This value can overflow the uint256"},"flash(address,uint256,uint256,bytes)":{"details":"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback","params":{"amount0":"The amount of token0 to send","amount1":"The amount of token1 to send","data":"Any data to be passed through to the callback","recipient":"The address which will receive the token0 and token1 amounts"}},"increaseObservationCardinalityNext(uint16)":{"details":"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.","params":{"observationCardinalityNext":"The desired minimum number of observations for the pool to store"}},"initialize(uint160)":{"details":"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value","params":{"sqrtPriceX96":"the initial sqrt price of the pool as a Q64.96"}},"liquidity()":{"details":"This value has no relationship to the total liquidity across all ticks"},"maxLiquidityPerTick()":{"details":"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool","returns":{"_0":"The max amount of liquidity per tick"}},"mint(address,int24,int24,uint128,bytes)":{"details":"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.","params":{"amount":"The amount of liquidity to mint","data":"Any data that should be passed through to the callback","recipient":"The address for which the liquidity will be created","tickLower":"The lower tick of the position in which to add liquidity","tickUpper":"The upper tick of the position in which to add liquidity"},"returns":{"amount0":"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback","amount1":"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"}},"observations(uint256)":{"details":"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.","params":{"index":"The element of the observations array to fetch"},"returns":{"blockTimestamp":"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"}},"observe(uint32[])":{"details":"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.","params":{"secondsAgos":"From how long ago each cumulative tick and liquidity value should be returned"},"returns":{"secondsPerLiquidityCumulativeX128s":"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp","tickCumulatives":"Cumulative tick values as of each `secondsAgos` from the current block timestamp"}},"positions(bytes32)":{"params":{"key":"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"},"returns":{"_liquidity":"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"}},"protocolFees()":{"details":"Protocol fees will never exceed uint128 max in either token"},"setFeeProtocol(uint8,uint8)":{"params":{"feeProtocol0":"new protocol fee for token0 of the pool","feeProtocol1":"new protocol fee for token1 of the pool"}},"slot0()":{"returns":{"sqrtPriceX96":"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"}},"snapshotCumulativesInside(int24,int24)":{"details":"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.","params":{"tickLower":"The lower tick of the range","tickUpper":"The upper tick of the range"},"returns":{"secondsInside":"The snapshot of seconds per liquidity for the range","secondsPerLiquidityInsideX128":"The snapshot of seconds per liquidity for the range","tickCumulativeInside":"The snapshot of the tick accumulator for the range"}},"swap(address,bool,int256,uint160,bytes)":{"details":"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback","params":{"amountSpecified":"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)","data":"Any data to be passed through to the callback","recipient":"The address to receive the output of the swap","sqrtPriceLimitX96":"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap","zeroForOne":"The direction of the swap, true for token0 to token1, false for token1 to token0"},"returns":{"amount0":"The delta of the balance of token0 of the pool, exact when negative, minimum when positive","amount1":"The delta of the balance of token1 of the pool, exact when negative, minimum when positive"}},"tickSpacing()":{"details":"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.","returns":{"_0":"The tick spacing"}},"ticks(int24)":{"params":{"tick":"The tick to look up"},"returns":{"liquidityGross":"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."}},"token0()":{"returns":{"_0":"The token contract address"}},"token1()":{"returns":{"_0":"The token contract address"}}},"title":"The interface for a Uniswap V3 Pool","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"burn(int24,int24,uint128)":"a34123a7","collect(address,int24,int24,uint128,uint128)":"4f1eb3d8","collectProtocol(address,uint128,uint128)":"85b66729","factory()":"c45a0155","fee()":"ddca3f43","feeGrowthGlobal0X128()":"f3058399","feeGrowthGlobal1X128()":"46141319","flash(address,uint256,uint256,bytes)":"490e6cbc","increaseObservationCardinalityNext(uint16)":"32148f67","initialize(uint160)":"f637731d","liquidity()":"1a686502","maxLiquidityPerTick()":"70cf754a","mint(address,int24,int24,uint128,bytes)":"3c8a7d8d","observations(uint256)":"252c09d7","observe(uint32[])":"883bdbfd","positions(bytes32)":"514ea4bf","protocolFees()":"1ad8b03b","setFeeProtocol(uint8,uint8)":"8206a4d1","slot0()":"3850c7bd","snapshotCumulativesInside(int24,int24)":"a38807f2","swap(address,bool,int256,uint160,bytes)":"128acb08","tickBitmap(int16)":"5339c296","tickSpacing()":"d0c93a7c","ticks(int24)":"f30dba93","token0()":"0dfe1681","token1()":"d21220a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":1},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\nimport './pool/IUniswapV3PoolImmutables.sol';\\nimport './pool/IUniswapV3PoolState.sol';\\nimport './pool/IUniswapV3PoolDerivedState.sol';\\nimport './pool/IUniswapV3PoolActions.sol';\\nimport './pool/IUniswapV3PoolOwnerActions.sol';\\nimport './pool/IUniswapV3PoolEvents.sol';\\n\\n/// @title The interface for a Uniswap V3 Pool\\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\\n/// to the ERC20 specification\\n/// @dev The pool interface is broken up into many smaller pieces\\ninterface IUniswapV3Pool is\\n    IUniswapV3PoolImmutables,\\n    IUniswapV3PoolState,\\n    IUniswapV3PoolDerivedState,\\n    IUniswapV3PoolActions,\\n    IUniswapV3PoolOwnerActions,\\n    IUniswapV3PoolEvents\\n{\\n\\n}\\n\",\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissionless pool actions\\n/// @notice Contains pool methods that can be called by anyone\\ninterface IUniswapV3PoolActions {\\n    /// @notice Sets the initial price for the pool\\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\\n    function initialize(uint160 sqrtPriceX96) external;\\n\\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\\n    /// @param recipient The address for which the liquidity will be created\\n    /// @param tickLower The lower tick of the position in which to add liquidity\\n    /// @param tickUpper The upper tick of the position in which to add liquidity\\n    /// @param amount The amount of liquidity to mint\\n    /// @param data Any data that should be passed through to the callback\\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    function mint(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount,\\n        bytes calldata data\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Collects tokens owed to a position\\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\\n    /// @param recipient The address which should receive the fees collected\\n    /// @param tickLower The lower tick of the position for which to collect fees\\n    /// @param tickUpper The upper tick of the position for which to collect fees\\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\\n    /// @return amount0 The amount of fees collected in token0\\n    /// @return amount1 The amount of fees collected in token1\\n    function collect(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n\\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\\n    /// @dev Fees must be collected separately via a call to #collect\\n    /// @param tickLower The lower tick of the position for which to burn liquidity\\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\\n    /// @param amount How much liquidity to burn\\n    /// @return amount0 The amount of token0 sent to the recipient\\n    /// @return amount1 The amount of token1 sent to the recipient\\n    function burn(\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Swap token0 for token1, or token1 for token0\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\\n    /// @param recipient The address to receive the output of the swap\\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\\n    /// @param data Any data to be passed through to the callback\\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\\n    function swap(\\n        address recipient,\\n        bool zeroForOne,\\n        int256 amountSpecified,\\n        uint160 sqrtPriceLimitX96,\\n        bytes calldata data\\n    ) external returns (int256 amount0, int256 amount1);\\n\\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\\n    /// @param recipient The address which will receive the token0 and token1 amounts\\n    /// @param amount0 The amount of token0 to send\\n    /// @param amount1 The amount of token1 to send\\n    /// @param data Any data to be passed through to the callback\\n    function flash(\\n        address recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        bytes calldata data\\n    ) external;\\n\\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\\n    /// the input observationCardinalityNext.\\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\\n}\\n\",\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that is not stored\\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\\n/// blockchain. The functions here may have variable gas costs.\\ninterface IUniswapV3PoolDerivedState {\\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\\n    /// you must call it with secondsAgos = [3600, 0].\\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\\n    /// timestamp\\n    function observe(uint32[] calldata secondsAgos)\\n        external\\n        view\\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\\n\\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\\n    /// snapshot is taken and the second snapshot is taken.\\n    /// @param tickLower The lower tick of the range\\n    /// @param tickUpper The upper tick of the range\\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\\n        external\\n        view\\n        returns (\\n            int56 tickCumulativeInside,\\n            uint160 secondsPerLiquidityInsideX128,\\n            uint32 secondsInside\\n        );\\n}\\n\",\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Events emitted by a pool\\n/// @notice Contains all events emitted by the pool\\ninterface IUniswapV3PoolEvents {\\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\\n\\n    /// @notice Emitted when liquidity is minted for a given position\\n    /// @param sender The address that minted the liquidity\\n    /// @param owner The owner of the position and recipient of any minted liquidity\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity minted to the position range\\n    /// @param amount0 How much token0 was required for the minted liquidity\\n    /// @param amount1 How much token1 was required for the minted liquidity\\n    event Mint(\\n        address sender,\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted when fees are collected by the owner of a position\\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\\n    /// @param owner The owner of the position for which fees are collected\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount0 The amount of token0 fees collected\\n    /// @param amount1 The amount of token1 fees collected\\n    event Collect(\\n        address indexed owner,\\n        address recipient,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount0,\\n        uint128 amount1\\n    );\\n\\n    /// @notice Emitted when a position's liquidity is removed\\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\\n    /// @param owner The owner of the position for which liquidity is removed\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity to remove\\n    /// @param amount0 The amount of token0 withdrawn\\n    /// @param amount1 The amount of token1 withdrawn\\n    event Burn(\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted by the pool for any swaps between token0 and token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the output of the swap\\n    /// @param amount0 The delta of the token0 balance of the pool\\n    /// @param amount1 The delta of the token1 balance of the pool\\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\\n    /// @param liquidity The liquidity of the pool after the swap\\n    /// @param tick The log base 1.0001 of price of the pool after the swap\\n    event Swap(\\n        address indexed sender,\\n        address indexed recipient,\\n        int256 amount0,\\n        int256 amount1,\\n        uint160 sqrtPriceX96,\\n        uint128 liquidity,\\n        int24 tick\\n    );\\n\\n    /// @notice Emitted by the pool for any flashes of token0/token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the tokens from flash\\n    /// @param amount0 The amount of token0 that was flashed\\n    /// @param amount1 The amount of token1 that was flashed\\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\\n    event Flash(\\n        address indexed sender,\\n        address indexed recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        uint256 paid0,\\n        uint256 paid1\\n    );\\n\\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\\n    /// just before a mint/swap/burn.\\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\\n    event IncreaseObservationCardinalityNext(\\n        uint16 observationCardinalityNextOld,\\n        uint16 observationCardinalityNextNew\\n    );\\n\\n    /// @notice Emitted when the protocol fee is changed by the pool\\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\\n\\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\\n    /// @param sender The address that collects the protocol fees\\n    /// @param recipient The address that receives the collected protocol fees\\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that never changes\\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\\ninterface IUniswapV3PoolImmutables {\\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\\n    /// @return The contract address\\n    function factory() external view returns (address);\\n\\n    /// @notice The first of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token0() external view returns (address);\\n\\n    /// @notice The second of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token1() external view returns (address);\\n\\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\\n    /// @return The fee\\n    function fee() external view returns (uint24);\\n\\n    /// @notice The pool tick spacing\\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\\n    /// This value is an int24 to avoid casting even though it is always positive.\\n    /// @return The tick spacing\\n    function tickSpacing() external view returns (int24);\\n\\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\\n    /// @return The max amount of liquidity per tick\\n    function maxLiquidityPerTick() external view returns (uint128);\\n}\\n\",\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissioned pool actions\\n/// @notice Contains pool methods that may only be called by the factory owner\\ninterface IUniswapV3PoolOwnerActions {\\n    /// @notice Set the denominator of the protocol's % share of the fees\\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\\n\\n    /// @notice Collect the protocol fee accrued to the pool\\n    /// @param recipient The address to which collected protocol fees should be sent\\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\\n    /// @return amount0 The protocol fee collected in token0\\n    /// @return amount1 The protocol fee collected in token1\\n    function collectProtocol(\\n        address recipient,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that can change\\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\\n/// per transaction\\ninterface IUniswapV3PoolState {\\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\\n    /// when accessed externally.\\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\\n    /// boundary.\\n    /// observationIndex The index of the last oracle observation that was written,\\n    /// observationCardinality The current maximum number of observations stored in the pool,\\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\\n    /// feeProtocol The protocol fee for both tokens of the pool.\\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\\n    /// unlocked Whether the pool is currently locked to reentrancy\\n    function slot0()\\n        external\\n        view\\n        returns (\\n            uint160 sqrtPriceX96,\\n            int24 tick,\\n            uint16 observationIndex,\\n            uint16 observationCardinality,\\n            uint16 observationCardinalityNext,\\n            uint8 feeProtocol,\\n            bool unlocked\\n        );\\n\\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal0X128() external view returns (uint256);\\n\\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal1X128() external view returns (uint256);\\n\\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\\n    /// @dev Protocol fees will never exceed uint128 max in either token\\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\\n\\n    /// @notice The currently in range liquidity available to the pool\\n    /// @dev This value has no relationship to the total liquidity across all ticks\\n    function liquidity() external view returns (uint128);\\n\\n    /// @notice Look up information about a specific tick in the pool\\n    /// @param tick The tick to look up\\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\\n    /// tick upper,\\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\\n    /// a specific position.\\n    function ticks(int24 tick)\\n        external\\n        view\\n        returns (\\n            uint128 liquidityGross,\\n            int128 liquidityNet,\\n            uint256 feeGrowthOutside0X128,\\n            uint256 feeGrowthOutside1X128,\\n            int56 tickCumulativeOutside,\\n            uint160 secondsPerLiquidityOutsideX128,\\n            uint32 secondsOutside,\\n            bool initialized\\n        );\\n\\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\\n\\n    /// @notice Returns the information about a position by the position's key\\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\\n    /// @return _liquidity The amount of liquidity in the position,\\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\\n    function positions(bytes32 key)\\n        external\\n        view\\n        returns (\\n            uint128 _liquidity,\\n            uint256 feeGrowthInside0LastX128,\\n            uint256 feeGrowthInside1LastX128,\\n            uint128 tokensOwed0,\\n            uint128 tokensOwed1\\n        );\\n\\n    /// @notice Returns data about a specific observation index\\n    /// @param index The element of the observations array to fetch\\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\\n    /// ago, rather than at a specific index in the array.\\n    /// @return blockTimestamp The timestamp of the observation,\\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\\n    function observations(uint256 index)\\n        external\\n        view\\n        returns (\\n            uint32 blockTimestamp,\\n            int56 tickCumulative,\\n            uint160 secondsPerLiquidityCumulativeX128,\\n            bool initialized\\n        );\\n}\\n\",\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"Burn(address,int24,int24,uint128,uint256,uint256)":{"notice":"Emitted when a position's liquidity is removed"},"Collect(address,address,int24,int24,uint128,uint128)":{"notice":"Emitted when fees are collected by the owner of a position"},"CollectProtocol(address,address,uint128,uint128)":{"notice":"Emitted when the collected protocol fees are withdrawn by the factory owner"},"Flash(address,address,uint256,uint256,uint256,uint256)":{"notice":"Emitted by the pool for any flashes of token0/token1"},"IncreaseObservationCardinalityNext(uint16,uint16)":{"notice":"Emitted by the pool for increases to the number of observations that can be stored"},"Initialize(uint160,int24)":{"notice":"Emitted exactly once by a pool when #initialize is first called on the pool"},"Mint(address,address,int24,int24,uint128,uint256,uint256)":{"notice":"Emitted when liquidity is minted for a given position"},"SetFeeProtocol(uint8,uint8,uint8,uint8)":{"notice":"Emitted when the protocol fee is changed by the pool"},"Swap(address,address,int256,int256,uint160,uint128,int24)":{"notice":"Emitted by the pool for any swaps between token0 and token1"}},"kind":"user","methods":{"burn(int24,int24,uint128)":{"notice":"Burn liquidity from the sender and account tokens owed for the liquidity to the position"},"collect(address,int24,int24,uint128,uint128)":{"notice":"Collects tokens owed to a position"},"collectProtocol(address,uint128,uint128)":{"notice":"Collect the protocol fee accrued to the pool"},"factory()":{"notice":"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"},"fee()":{"notice":"The pool's fee in hundredths of a bip, i.e. 1e-6"},"feeGrowthGlobal0X128()":{"notice":"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"},"feeGrowthGlobal1X128()":{"notice":"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"},"flash(address,uint256,uint256,bytes)":{"notice":"Receive token0 and/or token1 and pay it back, plus a fee, in the callback"},"increaseObservationCardinalityNext(uint16)":{"notice":"Increase the maximum number of price and liquidity observations that this pool will store"},"initialize(uint160)":{"notice":"Sets the initial price for the pool"},"liquidity()":{"notice":"The currently in range liquidity available to the pool"},"maxLiquidityPerTick()":{"notice":"The maximum amount of position liquidity that can use any tick in the range"},"mint(address,int24,int24,uint128,bytes)":{"notice":"Adds liquidity for the given recipient/tickLower/tickUpper position"},"observations(uint256)":{"notice":"Returns data about a specific observation index"},"observe(uint32[])":{"notice":"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"},"positions(bytes32)":{"notice":"Returns the information about a position by the position's key"},"protocolFees()":{"notice":"The amounts of token0 and token1 that are owed to the protocol"},"setFeeProtocol(uint8,uint8)":{"notice":"Set the denominator of the protocol's % share of the fees"},"slot0()":{"notice":"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."},"snapshotCumulativesInside(int24,int24)":{"notice":"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"},"swap(address,bool,int256,uint160,bytes)":{"notice":"Swap token0 for token1, or token1 for token0"},"tickBitmap(int16)":{"notice":"Returns 256 packed tick initialized boolean values. See TickBitmap for more information"},"tickSpacing()":{"notice":"The pool tick spacing"},"ticks(int24)":{"notice":"Look up information about a specific tick in the pool"},"token0()":{"notice":"The first of the two tokens of the pool, sorted by address"},"token1()":{"notice":"The second of the two tokens of the pool, sorted by address"}},"notice":"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification","version":1}}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol":{"IUniswapV3PoolActions":{"abi":[{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collect","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"}],"name":"increaseObservationCardinalityNext","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[{"internalType":"int256","name":"amount0","type":"int256"},{"internalType":"int256","name":"amount1","type":"int256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"burn(int24,int24,uint128)":{"details":"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect","params":{"amount":"How much liquidity to burn","tickLower":"The lower tick of the position for which to burn liquidity","tickUpper":"The upper tick of the position for which to burn liquidity"},"returns":{"amount0":"The amount of token0 sent to the recipient","amount1":"The amount of token1 sent to the recipient"}},"collect(address,int24,int24,uint128,uint128)":{"details":"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.","params":{"amount0Requested":"How much token0 should be withdrawn from the fees owed","amount1Requested":"How much token1 should be withdrawn from the fees owed","recipient":"The address which should receive the fees collected","tickLower":"The lower tick of the position for which to collect fees","tickUpper":"The upper tick of the position for which to collect fees"},"returns":{"amount0":"The amount of fees collected in token0","amount1":"The amount of fees collected in token1"}},"flash(address,uint256,uint256,bytes)":{"details":"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback","params":{"amount0":"The amount of token0 to send","amount1":"The amount of token1 to send","data":"Any data to be passed through to the callback","recipient":"The address which will receive the token0 and token1 amounts"}},"increaseObservationCardinalityNext(uint16)":{"details":"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.","params":{"observationCardinalityNext":"The desired minimum number of observations for the pool to store"}},"initialize(uint160)":{"details":"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value","params":{"sqrtPriceX96":"the initial sqrt price of the pool as a Q64.96"}},"mint(address,int24,int24,uint128,bytes)":{"details":"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.","params":{"amount":"The amount of liquidity to mint","data":"Any data that should be passed through to the callback","recipient":"The address for which the liquidity will be created","tickLower":"The lower tick of the position in which to add liquidity","tickUpper":"The upper tick of the position in which to add liquidity"},"returns":{"amount0":"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback","amount1":"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"}},"swap(address,bool,int256,uint160,bytes)":{"details":"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback","params":{"amountSpecified":"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)","data":"Any data to be passed through to the callback","recipient":"The address to receive the output of the swap","sqrtPriceLimitX96":"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap","zeroForOne":"The direction of the swap, true for token0 to token1, false for token1 to token0"},"returns":{"amount0":"The delta of the balance of token0 of the pool, exact when negative, minimum when positive","amount1":"The delta of the balance of token1 of the pool, exact when negative, minimum when positive"}}},"title":"Permissionless pool actions","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"burn(int24,int24,uint128)":"a34123a7","collect(address,int24,int24,uint128,uint128)":"4f1eb3d8","flash(address,uint256,uint256,bytes)":"490e6cbc","increaseObservationCardinalityNext(uint16)":"32148f67","initialize(uint160)":"f637731d","mint(address,int24,int24,uint128,bytes)":"3c8a7d8d","swap(address,bool,int256,uint160,bytes)":"128acb08"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":1},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissionless pool actions\\n/// @notice Contains pool methods that can be called by anyone\\ninterface IUniswapV3PoolActions {\\n    /// @notice Sets the initial price for the pool\\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\\n    function initialize(uint160 sqrtPriceX96) external;\\n\\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\\n    /// @param recipient The address for which the liquidity will be created\\n    /// @param tickLower The lower tick of the position in which to add liquidity\\n    /// @param tickUpper The upper tick of the position in which to add liquidity\\n    /// @param amount The amount of liquidity to mint\\n    /// @param data Any data that should be passed through to the callback\\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    function mint(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount,\\n        bytes calldata data\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Collects tokens owed to a position\\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\\n    /// @param recipient The address which should receive the fees collected\\n    /// @param tickLower The lower tick of the position for which to collect fees\\n    /// @param tickUpper The upper tick of the position for which to collect fees\\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\\n    /// @return amount0 The amount of fees collected in token0\\n    /// @return amount1 The amount of fees collected in token1\\n    function collect(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n\\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\\n    /// @dev Fees must be collected separately via a call to #collect\\n    /// @param tickLower The lower tick of the position for which to burn liquidity\\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\\n    /// @param amount How much liquidity to burn\\n    /// @return amount0 The amount of token0 sent to the recipient\\n    /// @return amount1 The amount of token1 sent to the recipient\\n    function burn(\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Swap token0 for token1, or token1 for token0\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\\n    /// @param recipient The address to receive the output of the swap\\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\\n    /// @param data Any data to be passed through to the callback\\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\\n    function swap(\\n        address recipient,\\n        bool zeroForOne,\\n        int256 amountSpecified,\\n        uint160 sqrtPriceLimitX96,\\n        bytes calldata data\\n    ) external returns (int256 amount0, int256 amount1);\\n\\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\\n    /// @param recipient The address which will receive the token0 and token1 amounts\\n    /// @param amount0 The amount of token0 to send\\n    /// @param amount1 The amount of token1 to send\\n    /// @param data Any data to be passed through to the callback\\n    function flash(\\n        address recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        bytes calldata data\\n    ) external;\\n\\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\\n    /// the input observationCardinalityNext.\\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\\n}\\n\",\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"burn(int24,int24,uint128)":{"notice":"Burn liquidity from the sender and account tokens owed for the liquidity to the position"},"collect(address,int24,int24,uint128,uint128)":{"notice":"Collects tokens owed to a position"},"flash(address,uint256,uint256,bytes)":{"notice":"Receive token0 and/or token1 and pay it back, plus a fee, in the callback"},"increaseObservationCardinalityNext(uint16)":{"notice":"Increase the maximum number of price and liquidity observations that this pool will store"},"initialize(uint160)":{"notice":"Sets the initial price for the pool"},"mint(address,int24,int24,uint128,bytes)":{"notice":"Adds liquidity for the given recipient/tickLower/tickUpper position"},"swap(address,bool,int256,uint160,bytes)":{"notice":"Swap token0 for token1, or token1 for token0"}},"notice":"Contains pool methods that can be called by anyone","version":1}}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol":{"IUniswapV3PoolDerivedState":{"abi":[{"inputs":[{"internalType":"uint32[]","name":"secondsAgos","type":"uint32[]"}],"name":"observe","outputs":[{"internalType":"int56[]","name":"tickCumulatives","type":"int56[]"},{"internalType":"uint160[]","name":"secondsPerLiquidityCumulativeX128s","type":"uint160[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"name":"snapshotCumulativesInside","outputs":[{"internalType":"int56","name":"tickCumulativeInside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityInsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsInside","type":"uint32"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"observe(uint32[])":{"details":"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.","params":{"secondsAgos":"From how long ago each cumulative tick and liquidity value should be returned"},"returns":{"secondsPerLiquidityCumulativeX128s":"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp","tickCumulatives":"Cumulative tick values as of each `secondsAgos` from the current block timestamp"}},"snapshotCumulativesInside(int24,int24)":{"details":"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.","params":{"tickLower":"The lower tick of the range","tickUpper":"The upper tick of the range"},"returns":{"secondsInside":"The snapshot of seconds per liquidity for the range","secondsPerLiquidityInsideX128":"The snapshot of seconds per liquidity for the range","tickCumulativeInside":"The snapshot of the tick accumulator for the range"}}},"title":"Pool state that is not stored","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"observe(uint32[])":"883bdbfd","snapshotCumulativesInside(int24,int24)":"a38807f2"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":1},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that is not stored\\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\\n/// blockchain. The functions here may have variable gas costs.\\ninterface IUniswapV3PoolDerivedState {\\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\\n    /// you must call it with secondsAgos = [3600, 0].\\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\\n    /// timestamp\\n    function observe(uint32[] calldata secondsAgos)\\n        external\\n        view\\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\\n\\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\\n    /// snapshot is taken and the second snapshot is taken.\\n    /// @param tickLower The lower tick of the range\\n    /// @param tickUpper The upper tick of the range\\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\\n        external\\n        view\\n        returns (\\n            int56 tickCumulativeInside,\\n            uint160 secondsPerLiquidityInsideX128,\\n            uint32 secondsInside\\n        );\\n}\\n\",\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"observe(uint32[])":{"notice":"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"},"snapshotCumulativesInside(int24,int24)":{"notice":"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"}},"notice":"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.","version":1}}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol":{"IUniswapV3PoolEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"Collect","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"CollectProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid1","type":"uint256"}],"name":"Flash","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextOld","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextNew","type":"uint16"}],"name":"IncreaseObservationCardinalityNext","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Initialize","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"feeProtocol0Old","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol1Old","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol0New","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol1New","type":"uint8"}],"name":"SetFeeProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"int256","name":"amount0","type":"int256"},{"indexed":false,"internalType":"int256","name":"amount1","type":"int256"},{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Swap","type":"event"}],"devdoc":{"events":{"Burn(address,int24,int24,uint128,uint256,uint256)":{"details":"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect","params":{"amount":"The amount of liquidity to remove","amount0":"The amount of token0 withdrawn","amount1":"The amount of token1 withdrawn","owner":"The owner of the position for which liquidity is removed","tickLower":"The lower tick of the position","tickUpper":"The upper tick of the position"}},"Collect(address,address,int24,int24,uint128,uint128)":{"details":"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees","params":{"amount0":"The amount of token0 fees collected","amount1":"The amount of token1 fees collected","owner":"The owner of the position for which fees are collected","tickLower":"The lower tick of the position","tickUpper":"The upper tick of the position"}},"CollectProtocol(address,address,uint128,uint128)":{"params":{"amount0":"The amount of token1 protocol fees that is withdrawn","recipient":"The address that receives the collected protocol fees","sender":"The address that collects the protocol fees"}},"Flash(address,address,uint256,uint256,uint256,uint256)":{"params":{"amount0":"The amount of token0 that was flashed","amount1":"The amount of token1 that was flashed","paid0":"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee","paid1":"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee","recipient":"The address that received the tokens from flash","sender":"The address that initiated the swap call, and that received the callback"}},"IncreaseObservationCardinalityNext(uint16,uint16)":{"details":"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.","params":{"observationCardinalityNextNew":"The updated value of the next observation cardinality","observationCardinalityNextOld":"The previous value of the next observation cardinality"}},"Initialize(uint160,int24)":{"details":"Mint/Burn/Swap cannot be emitted by the pool before Initialize","params":{"sqrtPriceX96":"The initial sqrt price of the pool, as a Q64.96","tick":"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"}},"Mint(address,address,int24,int24,uint128,uint256,uint256)":{"params":{"amount":"The amount of liquidity minted to the position range","amount0":"How much token0 was required for the minted liquidity","amount1":"How much token1 was required for the minted liquidity","owner":"The owner of the position and recipient of any minted liquidity","sender":"The address that minted the liquidity","tickLower":"The lower tick of the position","tickUpper":"The upper tick of the position"}},"SetFeeProtocol(uint8,uint8,uint8,uint8)":{"params":{"feeProtocol0New":"The updated value of the token0 protocol fee","feeProtocol0Old":"The previous value of the token0 protocol fee","feeProtocol1New":"The updated value of the token1 protocol fee","feeProtocol1Old":"The previous value of the token1 protocol fee"}},"Swap(address,address,int256,int256,uint160,uint128,int24)":{"params":{"amount0":"The delta of the token0 balance of the pool","amount1":"The delta of the token1 balance of the pool","liquidity":"The liquidity of the pool after the swap","recipient":"The address that received the output of the swap","sender":"The address that initiated the swap call, and that received the callback","sqrtPriceX96":"The sqrt(price) of the pool after the swap, as a Q64.96","tick":"The log base 1.0001 of price of the pool after the swap"}}},"kind":"dev","methods":{},"title":"Events emitted by a pool","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":1},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Events emitted by a pool\\n/// @notice Contains all events emitted by the pool\\ninterface IUniswapV3PoolEvents {\\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\\n\\n    /// @notice Emitted when liquidity is minted for a given position\\n    /// @param sender The address that minted the liquidity\\n    /// @param owner The owner of the position and recipient of any minted liquidity\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity minted to the position range\\n    /// @param amount0 How much token0 was required for the minted liquidity\\n    /// @param amount1 How much token1 was required for the minted liquidity\\n    event Mint(\\n        address sender,\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted when fees are collected by the owner of a position\\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\\n    /// @param owner The owner of the position for which fees are collected\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount0 The amount of token0 fees collected\\n    /// @param amount1 The amount of token1 fees collected\\n    event Collect(\\n        address indexed owner,\\n        address recipient,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount0,\\n        uint128 amount1\\n    );\\n\\n    /// @notice Emitted when a position's liquidity is removed\\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\\n    /// @param owner The owner of the position for which liquidity is removed\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity to remove\\n    /// @param amount0 The amount of token0 withdrawn\\n    /// @param amount1 The amount of token1 withdrawn\\n    event Burn(\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted by the pool for any swaps between token0 and token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the output of the swap\\n    /// @param amount0 The delta of the token0 balance of the pool\\n    /// @param amount1 The delta of the token1 balance of the pool\\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\\n    /// @param liquidity The liquidity of the pool after the swap\\n    /// @param tick The log base 1.0001 of price of the pool after the swap\\n    event Swap(\\n        address indexed sender,\\n        address indexed recipient,\\n        int256 amount0,\\n        int256 amount1,\\n        uint160 sqrtPriceX96,\\n        uint128 liquidity,\\n        int24 tick\\n    );\\n\\n    /// @notice Emitted by the pool for any flashes of token0/token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the tokens from flash\\n    /// @param amount0 The amount of token0 that was flashed\\n    /// @param amount1 The amount of token1 that was flashed\\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\\n    event Flash(\\n        address indexed sender,\\n        address indexed recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        uint256 paid0,\\n        uint256 paid1\\n    );\\n\\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\\n    /// just before a mint/swap/burn.\\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\\n    event IncreaseObservationCardinalityNext(\\n        uint16 observationCardinalityNextOld,\\n        uint16 observationCardinalityNextNew\\n    );\\n\\n    /// @notice Emitted when the protocol fee is changed by the pool\\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\\n\\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\\n    /// @param sender The address that collects the protocol fees\\n    /// @param recipient The address that receives the collected protocol fees\\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"Burn(address,int24,int24,uint128,uint256,uint256)":{"notice":"Emitted when a position's liquidity is removed"},"Collect(address,address,int24,int24,uint128,uint128)":{"notice":"Emitted when fees are collected by the owner of a position"},"CollectProtocol(address,address,uint128,uint128)":{"notice":"Emitted when the collected protocol fees are withdrawn by the factory owner"},"Flash(address,address,uint256,uint256,uint256,uint256)":{"notice":"Emitted by the pool for any flashes of token0/token1"},"IncreaseObservationCardinalityNext(uint16,uint16)":{"notice":"Emitted by the pool for increases to the number of observations that can be stored"},"Initialize(uint160,int24)":{"notice":"Emitted exactly once by a pool when #initialize is first called on the pool"},"Mint(address,address,int24,int24,uint128,uint256,uint256)":{"notice":"Emitted when liquidity is minted for a given position"},"SetFeeProtocol(uint8,uint8,uint8,uint8)":{"notice":"Emitted when the protocol fee is changed by the pool"},"Swap(address,address,int256,int256,uint160,uint128,int24)":{"notice":"Emitted by the pool for any swaps between token0 and token1"}},"kind":"user","methods":{},"notice":"Contains all events emitted by the pool","version":1}}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol":{"IUniswapV3PoolImmutables":{"abi":[{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxLiquidityPerTick","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"factory()":{"returns":{"_0":"The contract address"}},"fee()":{"returns":{"_0":"The fee"}},"maxLiquidityPerTick()":{"details":"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool","returns":{"_0":"The max amount of liquidity per tick"}},"tickSpacing()":{"details":"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.","returns":{"_0":"The tick spacing"}},"token0()":{"returns":{"_0":"The token contract address"}},"token1()":{"returns":{"_0":"The token contract address"}}},"title":"Pool state that never changes","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"factory()":"c45a0155","fee()":"ddca3f43","maxLiquidityPerTick()":"70cf754a","tickSpacing()":"d0c93a7c","token0()":"0dfe1681","token1()":"d21220a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":1},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that never changes\\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\\ninterface IUniswapV3PoolImmutables {\\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\\n    /// @return The contract address\\n    function factory() external view returns (address);\\n\\n    /// @notice The first of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token0() external view returns (address);\\n\\n    /// @notice The second of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token1() external view returns (address);\\n\\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\\n    /// @return The fee\\n    function fee() external view returns (uint24);\\n\\n    /// @notice The pool tick spacing\\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\\n    /// This value is an int24 to avoid casting even though it is always positive.\\n    /// @return The tick spacing\\n    function tickSpacing() external view returns (int24);\\n\\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\\n    /// @return The max amount of liquidity per tick\\n    function maxLiquidityPerTick() external view returns (uint128);\\n}\\n\",\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"factory()":{"notice":"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"},"fee()":{"notice":"The pool's fee in hundredths of a bip, i.e. 1e-6"},"maxLiquidityPerTick()":{"notice":"The maximum amount of position liquidity that can use any tick in the range"},"tickSpacing()":{"notice":"The pool tick spacing"},"token0()":{"notice":"The first of the two tokens of the pool, sorted by address"},"token1()":{"notice":"The second of the two tokens of the pool, sorted by address"}},"notice":"These parameters are fixed for a pool forever, i.e., the methods will always return the same values","version":1}}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol":{"IUniswapV3PoolOwnerActions":{"abi":[{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collectProtocol","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"feeProtocol0","type":"uint8"},{"internalType":"uint8","name":"feeProtocol1","type":"uint8"}],"name":"setFeeProtocol","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"collectProtocol(address,uint128,uint128)":{"params":{"amount0Requested":"The maximum amount of token0 to send, can be 0 to collect fees in only token1","amount1Requested":"The maximum amount of token1 to send, can be 0 to collect fees in only token0","recipient":"The address to which collected protocol fees should be sent"},"returns":{"amount0":"The protocol fee collected in token0","amount1":"The protocol fee collected in token1"}},"setFeeProtocol(uint8,uint8)":{"params":{"feeProtocol0":"new protocol fee for token0 of the pool","feeProtocol1":"new protocol fee for token1 of the pool"}}},"title":"Permissioned pool actions","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"collectProtocol(address,uint128,uint128)":"85b66729","setFeeProtocol(uint8,uint8)":"8206a4d1"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":1},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissioned pool actions\\n/// @notice Contains pool methods that may only be called by the factory owner\\ninterface IUniswapV3PoolOwnerActions {\\n    /// @notice Set the denominator of the protocol's % share of the fees\\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\\n\\n    /// @notice Collect the protocol fee accrued to the pool\\n    /// @param recipient The address to which collected protocol fees should be sent\\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\\n    /// @return amount0 The protocol fee collected in token0\\n    /// @return amount1 The protocol fee collected in token1\\n    function collectProtocol(\\n        address recipient,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"collectProtocol(address,uint128,uint128)":{"notice":"Collect the protocol fee accrued to the pool"},"setFeeProtocol(uint8,uint8)":{"notice":"Set the denominator of the protocol's % share of the fees"}},"notice":"Contains pool methods that may only be called by the factory owner","version":1}}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol":{"IUniswapV3PoolState":{"abi":[{"inputs":[],"name":"feeGrowthGlobal0X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeGrowthGlobal1X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"observations","outputs":[{"internalType":"uint32","name":"blockTimestamp","type":"uint32"},{"internalType":"int56","name":"tickCumulative","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityCumulativeX128","type":"uint160"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"name":"positions","outputs":[{"internalType":"uint128","name":"_liquidity","type":"uint128"},{"internalType":"uint256","name":"feeGrowthInside0LastX128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthInside1LastX128","type":"uint256"},{"internalType":"uint128","name":"tokensOwed0","type":"uint128"},{"internalType":"uint128","name":"tokensOwed1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFees","outputs":[{"internalType":"uint128","name":"token0","type":"uint128"},{"internalType":"uint128","name":"token1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"slot0","outputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"uint16","name":"observationIndex","type":"uint16"},{"internalType":"uint16","name":"observationCardinality","type":"uint16"},{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"},{"internalType":"uint8","name":"feeProtocol","type":"uint8"},{"internalType":"bool","name":"unlocked","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int16","name":"wordPosition","type":"int16"}],"name":"tickBitmap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tick","type":"int24"}],"name":"ticks","outputs":[{"internalType":"uint128","name":"liquidityGross","type":"uint128"},{"internalType":"int128","name":"liquidityNet","type":"int128"},{"internalType":"uint256","name":"feeGrowthOutside0X128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthOutside1X128","type":"uint256"},{"internalType":"int56","name":"tickCumulativeOutside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityOutsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsOutside","type":"uint32"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"feeGrowthGlobal0X128()":{"details":"This value can overflow the uint256"},"feeGrowthGlobal1X128()":{"details":"This value can overflow the uint256"},"liquidity()":{"details":"This value has no relationship to the total liquidity across all ticks"},"observations(uint256)":{"details":"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.","params":{"index":"The element of the observations array to fetch"},"returns":{"blockTimestamp":"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"}},"positions(bytes32)":{"params":{"key":"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"},"returns":{"_liquidity":"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"}},"protocolFees()":{"details":"Protocol fees will never exceed uint128 max in either token"},"slot0()":{"returns":{"sqrtPriceX96":"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"}},"ticks(int24)":{"params":{"tick":"The tick to look up"},"returns":{"liquidityGross":"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."}}},"title":"Pool state that can change","version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"feeGrowthGlobal0X128()":"f3058399","feeGrowthGlobal1X128()":"46141319","liquidity()":"1a686502","observations(uint256)":"252c09d7","positions(bytes32)":"514ea4bf","protocolFees()":"1ad8b03b","slot0()":"3850c7bd","tickBitmap(int16)":"5339c296","ticks(int24)":"f30dba93"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":1},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that can change\\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\\n/// per transaction\\ninterface IUniswapV3PoolState {\\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\\n    /// when accessed externally.\\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\\n    /// boundary.\\n    /// observationIndex The index of the last oracle observation that was written,\\n    /// observationCardinality The current maximum number of observations stored in the pool,\\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\\n    /// feeProtocol The protocol fee for both tokens of the pool.\\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\\n    /// unlocked Whether the pool is currently locked to reentrancy\\n    function slot0()\\n        external\\n        view\\n        returns (\\n            uint160 sqrtPriceX96,\\n            int24 tick,\\n            uint16 observationIndex,\\n            uint16 observationCardinality,\\n            uint16 observationCardinalityNext,\\n            uint8 feeProtocol,\\n            bool unlocked\\n        );\\n\\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal0X128() external view returns (uint256);\\n\\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal1X128() external view returns (uint256);\\n\\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\\n    /// @dev Protocol fees will never exceed uint128 max in either token\\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\\n\\n    /// @notice The currently in range liquidity available to the pool\\n    /// @dev This value has no relationship to the total liquidity across all ticks\\n    function liquidity() external view returns (uint128);\\n\\n    /// @notice Look up information about a specific tick in the pool\\n    /// @param tick The tick to look up\\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\\n    /// tick upper,\\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\\n    /// a specific position.\\n    function ticks(int24 tick)\\n        external\\n        view\\n        returns (\\n            uint128 liquidityGross,\\n            int128 liquidityNet,\\n            uint256 feeGrowthOutside0X128,\\n            uint256 feeGrowthOutside1X128,\\n            int56 tickCumulativeOutside,\\n            uint160 secondsPerLiquidityOutsideX128,\\n            uint32 secondsOutside,\\n            bool initialized\\n        );\\n\\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\\n\\n    /// @notice Returns the information about a position by the position's key\\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\\n    /// @return _liquidity The amount of liquidity in the position,\\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\\n    function positions(bytes32 key)\\n        external\\n        view\\n        returns (\\n            uint128 _liquidity,\\n            uint256 feeGrowthInside0LastX128,\\n            uint256 feeGrowthInside1LastX128,\\n            uint128 tokensOwed0,\\n            uint128 tokensOwed1\\n        );\\n\\n    /// @notice Returns data about a specific observation index\\n    /// @param index The element of the observations array to fetch\\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\\n    /// ago, rather than at a specific index in the array.\\n    /// @return blockTimestamp The timestamp of the observation,\\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\\n    function observations(uint256 index)\\n        external\\n        view\\n        returns (\\n            uint32 blockTimestamp,\\n            int56 tickCumulative,\\n            uint160 secondsPerLiquidityCumulativeX128,\\n            bool initialized\\n        );\\n}\\n\",\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"feeGrowthGlobal0X128()":{"notice":"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"},"feeGrowthGlobal1X128()":{"notice":"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"},"liquidity()":{"notice":"The currently in range liquidity available to the pool"},"observations(uint256)":{"notice":"Returns data about a specific observation index"},"positions(bytes32)":{"notice":"Returns the information about a position by the position's key"},"protocolFees()":{"notice":"The amounts of token0 and token1 that are owed to the protocol"},"slot0()":{"notice":"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."},"tickBitmap(int16)":{"notice":"Returns 256 packed tick initialized boolean values. See TickBitmap for more information"},"ticks(int24)":{"notice":"Look up information about a specific tick in the pool"}},"notice":"These methods compose the pool's state, and can change with any frequency including multiple times per transaction","version":1}}},"contracts/Authorizable.sol":{"Authorizable":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"authorize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"authorized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"deauthorize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"isAuthorized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"authorize(address)":{"details":"Privileged function authorize an address","params":{"who":"the address to authorize"}},"constructor":{"details":"We set the deployer to the owner"},"deauthorize(address)":{"details":"Privileged function to de authorize an address","params":{"who":"The address to remove authorization from"}},"isAuthorized(address)":{"details":"Returns true if an address is authorized","params":{"who":"the address to check"},"returns":{"_0":"true if authorized false if not"}},"setOwner(address)":{"details":"Function to change owner","params":{"who":"The new owner address"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_459":{"entryPoint":null,"id":459,"parameterSlots":0,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b50600080546001600160a01b03191633179055610311806100326000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806313af40351461006757806327c97fa51461007c5780638da5cb5b1461008f578063b6a5d7de146100b8578063b9181611146100cb578063fe9fbb80146100fb575b600080fd5b61007a610075366004610251565b610127565b005b61007a61008a366004610251565b61017c565b6000546100a2906001600160a01b031681565b6040516100af9190610289565b60405180910390f35b61007a6100c6366004610251565b6101c7565b6100ee6100d9366004610251565b60016020526000908152604090205460ff1681565b6040516100af919061029f565b6100ee610109366004610251565b6001600160a01b031660009081526001602052604090205460ff1690565b6000546001600160a01b0316331461015a5760405162461bcd60e51b8152600401610151906102ad565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146101a65760405162461bcd60e51b8152600401610151906102ad565b6001600160a01b03166000908152600160205260409020805460ff19169055565b6000546001600160a01b031633146101f15760405162461bcd60e51b8152600401610151906102ad565b61021c816001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b50565b60006001600160a01b0382165b92915050565b61023b8161021f565b811461021c57600080fd5b803561022c81610232565b60006020828403121561026657610266600080fd5b60006102728484610246565b949350505050565b6102838161021f565b82525050565b6020810161022c828461027a565b801515610283565b6020810161022c8284610297565b6020808252810161022c81601081526f29b2b73232b9103737ba1037bbb732b960811b60208201526040019056fea2646970667358221220a5bb505295f968b809a377b87c6282884067b9f6259faa197776e6d216e6b90164736f6c634300080a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH2 0x311 DUP1 PUSH2 0x32 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x27C97FA5 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0xB6A5D7DE EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0xB9181611 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xFE9FBB80 EQ PUSH2 0xFB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x127 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7A PUSH2 0x8A CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x17C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xA2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0xEE PUSH2 0xD9 CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x29F JUMP JUMPDEST PUSH2 0xEE PUSH2 0x109 CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151 SWAP1 PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151 SWAP1 PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151 SWAP1 PUSH2 0x2AD JUMP JUMPDEST PUSH2 0x21C DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23B DUP2 PUSH2 0x21F JUMP JUMPDEST DUP2 EQ PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x22C DUP2 PUSH2 0x232 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x266 JUMPI PUSH2 0x266 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x272 DUP5 DUP5 PUSH2 0x246 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x283 DUP2 PUSH2 0x21F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x22C DUP3 DUP5 PUSH2 0x27A JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x283 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x22C DUP3 DUP5 PUSH2 0x297 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x22C DUP2 PUSH1 0x10 DUP2 MSTORE PUSH16 0x29B2B73232B9103737BA1037BBB732B9 PUSH1 0x81 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xBB POP MSTORE SWAP6 0xF9 PUSH9 0xB809A377B87C628288 BLOCKHASH PUSH8 0xB9F6259FAA197776 0xE6 0xD2 AND 0xE6 0xB9 ADD PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"65:1729:7:-:0;;;389:49;;;;;;;;;-1:-1:-1;413:5:7;:18;;-1:-1:-1;;;;;;413:18:7;421:10;413:18;;;65:1729;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_authorize_552":{"entryPoint":null,"id":552,"parameterSlots":1,"returnSlots":0},"@authorize_511":{"entryPoint":455,"id":511,"parameterSlots":1,"returnSlots":0},"@authorized_449":{"entryPoint":null,"id":449,"parameterSlots":0,"returnSlots":0},"@deauthorize_526":{"entryPoint":380,"id":526,"parameterSlots":1,"returnSlots":0},"@isAuthorized_498":{"entryPoint":null,"id":498,"parameterSlots":1,"returnSlots":1},"@owner_445":{"entryPoint":null,"id":445,"parameterSlots":0,"returnSlots":0},"@setOwner_539":{"entryPoint":295,"id":539,"parameterSlots":1,"returnSlots":0},"abi_decode_t_address":{"entryPoint":582,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":593,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":634,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":663,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3_to_t_string_memory_ptr_fromStack":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":649,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":671,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":685,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":543,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":562,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3096:13","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:13","statements":[{"nodeType":"YulAssignment","src":"57:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:13"},"nodeType":"YulFunctionCall","src":"67:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:13","type":""}],"src":"7:75:13"},{"body":{"nodeType":"YulBlock","src":"177:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:13"},"nodeType":"YulFunctionCall","src":"187:12:13"},"nodeType":"YulExpressionStatement","src":"187:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:13"},{"body":{"nodeType":"YulBlock","src":"300:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:13"},"nodeType":"YulFunctionCall","src":"310:12:13"},"nodeType":"YulExpressionStatement","src":"310:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:13"},{"body":{"nodeType":"YulBlock","src":"379:81:13","statements":[{"nodeType":"YulAssignment","src":"389:65:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:13"},"nodeType":"YulFunctionCall","src":"400:54:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:13"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:13","type":""}],"src":"334:126:13"},{"body":{"nodeType":"YulBlock","src":"511:51:13","statements":[{"nodeType":"YulAssignment","src":"521:35:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:13"},"nodeType":"YulFunctionCall","src":"532:24:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:13"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:13","type":""}],"src":"466:96:13"},{"body":{"nodeType":"YulBlock","src":"611:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:13"},"nodeType":"YulFunctionCall","src":"670:12:13"},"nodeType":"YulExpressionStatement","src":"670:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:13"},"nodeType":"YulFunctionCall","src":"641:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:13"},"nodeType":"YulFunctionCall","src":"631:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:13"},"nodeType":"YulFunctionCall","src":"624:43:13"},"nodeType":"YulIf","src":"621:63:13"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:13","type":""}],"src":"568:122:13"},{"body":{"nodeType":"YulBlock","src":"748:87:13","statements":[{"nodeType":"YulAssignment","src":"758:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:13"},"nodeType":"YulFunctionCall","src":"767:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:13"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:13"},"nodeType":"YulFunctionCall","src":"796:33:13"},"nodeType":"YulExpressionStatement","src":"796:33:13"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:13","type":""}],"src":"696:139:13"},{"body":{"nodeType":"YulBlock","src":"907:263:13","statements":[{"body":{"nodeType":"YulBlock","src":"953:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"955:77:13"},"nodeType":"YulFunctionCall","src":"955:79:13"},"nodeType":"YulExpressionStatement","src":"955:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"928:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"937:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"924:3:13"},"nodeType":"YulFunctionCall","src":"924:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"949:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"920:3:13"},"nodeType":"YulFunctionCall","src":"920:32:13"},"nodeType":"YulIf","src":"917:119:13"},{"nodeType":"YulBlock","src":"1046:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1061:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1075:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1065:6:13","type":""}]},{"nodeType":"YulAssignment","src":"1090:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1125:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1121:3:13"},"nodeType":"YulFunctionCall","src":"1121:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1145:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1100:20:13"},"nodeType":"YulFunctionCall","src":"1100:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1090:6:13"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"877:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"888:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"900:6:13","type":""}],"src":"841:329:13"},{"body":{"nodeType":"YulBlock","src":"1241:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1258:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1281:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1263:17:13"},"nodeType":"YulFunctionCall","src":"1263:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1251:6:13"},"nodeType":"YulFunctionCall","src":"1251:37:13"},"nodeType":"YulExpressionStatement","src":"1251:37:13"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1229:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1236:3:13","type":""}],"src":"1176:118:13"},{"body":{"nodeType":"YulBlock","src":"1398:124:13","statements":[{"nodeType":"YulAssignment","src":"1408:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1420:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1431:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1416:3:13"},"nodeType":"YulFunctionCall","src":"1416:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1408:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1488:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1501:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1512:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1497:3:13"},"nodeType":"YulFunctionCall","src":"1497:17:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1444:43:13"},"nodeType":"YulFunctionCall","src":"1444:71:13"},"nodeType":"YulExpressionStatement","src":"1444:71:13"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1370:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1382:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1393:4:13","type":""}],"src":"1300:222:13"},{"body":{"nodeType":"YulBlock","src":"1570:48:13","statements":[{"nodeType":"YulAssignment","src":"1580:32:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1605:5:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1598:6:13"},"nodeType":"YulFunctionCall","src":"1598:13:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1591:6:13"},"nodeType":"YulFunctionCall","src":"1591:21:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1580:7:13"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1552:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1562:7:13","type":""}],"src":"1528:90:13"},{"body":{"nodeType":"YulBlock","src":"1683:50:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1700:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1720:5:13"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1705:14:13"},"nodeType":"YulFunctionCall","src":"1705:21:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1693:6:13"},"nodeType":"YulFunctionCall","src":"1693:34:13"},"nodeType":"YulExpressionStatement","src":"1693:34:13"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1671:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1678:3:13","type":""}],"src":"1624:109:13"},{"body":{"nodeType":"YulBlock","src":"1831:118:13","statements":[{"nodeType":"YulAssignment","src":"1841:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1853:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1864:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1849:3:13"},"nodeType":"YulFunctionCall","src":"1849:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1841:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1915:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1928:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1939:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1924:3:13"},"nodeType":"YulFunctionCall","src":"1924:17:13"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1877:37:13"},"nodeType":"YulFunctionCall","src":"1877:65:13"},"nodeType":"YulExpressionStatement","src":"1877:65:13"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1803:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1815:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1826:4:13","type":""}],"src":"1739:210:13"},{"body":{"nodeType":"YulBlock","src":"2051:73:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2068:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"2073:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2061:6:13"},"nodeType":"YulFunctionCall","src":"2061:19:13"},"nodeType":"YulExpressionStatement","src":"2061:19:13"},{"nodeType":"YulAssignment","src":"2089:29:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2108:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"2113:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2104:3:13"},"nodeType":"YulFunctionCall","src":"2104:14:13"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2089:11:13"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2023:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"2028:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2039:11:13","type":""}],"src":"1955:169:13"},{"body":{"nodeType":"YulBlock","src":"2236:60:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2258:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2266:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2254:3:13"},"nodeType":"YulFunctionCall","src":"2254:14:13"},{"hexValue":"53656e646572206e6f74206f776e6572","kind":"string","nodeType":"YulLiteral","src":"2270:18:13","type":"","value":"Sender not owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2247:6:13"},"nodeType":"YulFunctionCall","src":"2247:42:13"},"nodeType":"YulExpressionStatement","src":"2247:42:13"}]},"name":"store_literal_in_memory_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2228:6:13","type":""}],"src":"2130:166:13"},{"body":{"nodeType":"YulBlock","src":"2448:220:13","statements":[{"nodeType":"YulAssignment","src":"2458:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2524:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"2529:2:13","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2465:58:13"},"nodeType":"YulFunctionCall","src":"2465:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2458:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2630:3:13"}],"functionName":{"name":"store_literal_in_memory_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3","nodeType":"YulIdentifier","src":"2541:88:13"},"nodeType":"YulFunctionCall","src":"2541:93:13"},"nodeType":"YulExpressionStatement","src":"2541:93:13"},{"nodeType":"YulAssignment","src":"2643:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2654:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"2659:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2650:3:13"},"nodeType":"YulFunctionCall","src":"2650:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2643:3:13"}]}]},"name":"abi_encode_t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2436:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2444:3:13","type":""}],"src":"2302:366:13"},{"body":{"nodeType":"YulBlock","src":"2845:248:13","statements":[{"nodeType":"YulAssignment","src":"2855:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2867:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2878:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2863:3:13"},"nodeType":"YulFunctionCall","src":"2863:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2855:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2902:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"2913:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2898:3:13"},"nodeType":"YulFunctionCall","src":"2898:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2921:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"2927:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2917:3:13"},"nodeType":"YulFunctionCall","src":"2917:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2891:6:13"},"nodeType":"YulFunctionCall","src":"2891:47:13"},"nodeType":"YulExpressionStatement","src":"2891:47:13"},{"nodeType":"YulAssignment","src":"2947:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3081:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2955:124:13"},"nodeType":"YulFunctionCall","src":"2955:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2947:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2825:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2840:4:13","type":""}],"src":"2674:419:13"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender not owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100625760003560e01c806313af40351461006757806327c97fa51461007c5780638da5cb5b1461008f578063b6a5d7de146100b8578063b9181611146100cb578063fe9fbb80146100fb575b600080fd5b61007a610075366004610251565b610127565b005b61007a61008a366004610251565b61017c565b6000546100a2906001600160a01b031681565b6040516100af9190610289565b60405180910390f35b61007a6100c6366004610251565b6101c7565b6100ee6100d9366004610251565b60016020526000908152604090205460ff1681565b6040516100af919061029f565b6100ee610109366004610251565b6001600160a01b031660009081526001602052604090205460ff1690565b6000546001600160a01b0316331461015a5760405162461bcd60e51b8152600401610151906102ad565b60405180910390fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000546001600160a01b031633146101a65760405162461bcd60e51b8152600401610151906102ad565b6001600160a01b03166000908152600160205260409020805460ff19169055565b6000546001600160a01b031633146101f15760405162461bcd60e51b8152600401610151906102ad565b61021c816001600160a01b03166000908152600160208190526040909120805460ff19169091179055565b50565b60006001600160a01b0382165b92915050565b61023b8161021f565b811461021c57600080fd5b803561022c81610232565b60006020828403121561026657610266600080fd5b60006102728484610246565b949350505050565b6102838161021f565b82525050565b6020810161022c828461027a565b801515610283565b6020810161022c8284610297565b6020808252810161022c81601081526f29b2b73232b9103737ba1037bbb732b960811b60208201526040019056fea2646970667358221220a5bb505295f968b809a377b87c6282884067b9f6259faa197776e6d216e6b90164736f6c634300080a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x27C97FA5 EQ PUSH2 0x7C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x8F JUMPI DUP1 PUSH4 0xB6A5D7DE EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0xB9181611 EQ PUSH2 0xCB JUMPI DUP1 PUSH4 0xFE9FBB80 EQ PUSH2 0xFB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7A PUSH2 0x75 CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x127 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x7A PUSH2 0x8A CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x17C JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH2 0xA2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x289 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7A PUSH2 0xC6 CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH2 0x1C7 JUMP JUMPDEST PUSH2 0xEE PUSH2 0xD9 CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAF SWAP2 SWAP1 PUSH2 0x29F JUMP JUMPDEST PUSH2 0xEE PUSH2 0x109 CALLDATASIZE PUSH1 0x4 PUSH2 0x251 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x15A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151 SWAP1 PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1A6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151 SWAP1 PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1F1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x151 SWAP1 PUSH2 0x2AD JUMP JUMPDEST PUSH2 0x21C DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x23B DUP2 PUSH2 0x21F JUMP JUMPDEST DUP2 EQ PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x22C DUP2 PUSH2 0x232 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x266 JUMPI PUSH2 0x266 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x272 DUP5 DUP5 PUSH2 0x246 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x283 DUP2 PUSH2 0x21F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x22C DUP3 DUP5 PUSH2 0x27A JUMP JUMPDEST DUP1 ISZERO ISZERO PUSH2 0x283 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x22C DUP3 DUP5 PUSH2 0x297 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x22C DUP2 PUSH1 0x10 DUP2 MSTORE PUSH16 0x29B2B73232B9103737BA1037BBB732B9 PUSH1 0x81 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xBB POP MSTORE SWAP6 0xF9 PUSH9 0xB809A377B87C628288 BLOCKHASH PUSH8 0xB9F6259FAA197776 0xE6 0xD2 AND 0xE6 0xB9 ADD PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"65:1729:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1526:76;;;;;;:::i;:::-;;:::i;:::-;;1348:93;;;;;;:::i;:::-;;:::i;207:20::-;;;;;-1:-1:-1;;;;;207:20:7;;;;;;;;;;:::i;:::-;;;;;;;;1139:83;;;;;;:::i;:::-;;:::i;294:42::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;934:101::-;;;;;;:::i;:::-;-1:-1:-1;;;;;1013:15:7;990:4;1013:15;;;:10;:15;;;;;;;;;934:101;1526:76;562:5;;-1:-1:-1;;;;;562:5:7;548:10;:19;540:48;;;;-1:-1:-1;;;540:48:7;;;;;;;:::i;:::-;;;;;;;;;1584:5:::1;:11:::0;;-1:-1:-1;;;;;;1584:11:7::1;-1:-1:-1::0;;;;;1584:11:7;;;::::1;::::0;;;::::1;::::0;;1526:76::o;1348:93::-;562:5;;-1:-1:-1;;;;;562:5:7;548:10;:19;540:48;;;;-1:-1:-1;;;540:48:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;1411:15:7::1;1429:5;1411:15:::0;;;:10:::1;:15;::::0;;;;:23;;-1:-1:-1;;1411:23:7::1;::::0;;1348:93::o;1139:83::-;562:5;;-1:-1:-1;;;;;562:5:7;548:10;:19;540:48;;;;-1:-1:-1;;;540:48:7;;;;;;;:::i;:::-;1200:15:::1;1211:3;-1:-1:-1::0;;;;;1763:15:7;;;;;1781:4;1763:15;;;;;;;;:22;;-1:-1:-1;;1763:22:7;;;;;;1711:81;1200:15:::1;1139:83:::0;:::o;466:96:13:-;503:7;-1:-1:-1;;;;;400:54:13;;532:24;521:35;466:96;-1:-1:-1;;466:96:13:o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;696:139;767:20;;796:33;767:20;796:33;:::i;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;65:1729:7;;;955:79:13;1075:1;1100:53;1145:7;1125:9;1100:53;:::i;:::-;1090:63;841:329;-1:-1:-1;;;;841:329:13:o;1176:118::-;1263:24;1281:5;1263:24;:::i;:::-;1258:3;1251:37;1176:118;;:::o;1300:222::-;1431:2;1416:18;;1444:71;1420:9;1488:6;1444:71;:::i;1624:109::-;1598:13;;1591:21;1705;1528:90;1739:210;1864:2;1849:18;;1877:65;1853:9;1915:6;1877:65;:::i;2674:419::-;2878:2;2891:47;;;2863:18;;2955:131;2863:18;2529:2;2061:19;;-1:-1:-1;;;2113:4:13;2104:14;;2247:42;2650:12;;;2302:366"},"gasEstimates":{"creation":{"codeDepositCost":"157000","executionCost":"21037","totalCost":"178037"},"external":{"authorize(address)":"infinite","authorized(address)":"infinite","deauthorize(address)":"infinite","isAuthorized(address)":"infinite","owner()":"infinite","setOwner(address)":"infinite"},"internal":{"_authorize(address)":"infinite"}},"methodIdentifiers":{"authorize(address)":"b6a5d7de","authorized(address)":"b9181611","deauthorize(address)":"27c97fa5","isAuthorized(address)":"fe9fbb80","owner()":"8da5cb5b","setOwner(address)":"13af4035"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"authorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"deauthorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"authorize(address)\":{\"details\":\"Privileged function authorize an address\",\"params\":{\"who\":\"the address to authorize\"}},\"constructor\":{\"details\":\"We set the deployer to the owner\"},\"deauthorize(address)\":{\"details\":\"Privileged function to de authorize an address\",\"params\":{\"who\":\"The address to remove authorization from\"}},\"isAuthorized(address)\":{\"details\":\"Returns true if an address is authorized\",\"params\":{\"who\":\"the address to check\"},\"returns\":{\"_0\":\"true if authorized false if not\"}},\"setOwner(address)\":{\"details\":\"Function to change owner\",\"params\":{\"who\":\"The new owner address\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Authorizable.sol\":\"Authorizable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/Authorizable.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity >=0.7.0;\\n\\ncontract Authorizable {\\n    // This contract allows a flexible authorization scheme\\n\\n    // The owner who can change authorization status\\n    address public owner;\\n    // A mapping from an address to its authorization status\\n    mapping(address => bool) public authorized;\\n\\n    /// @dev We set the deployer to the owner\\n    constructor() {\\n        owner = msg.sender;\\n    }\\n\\n    /// @dev This modifier checks if the msg.sender is the owner\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Sender not owner\\\");\\n        _;\\n    }\\n\\n    /// @dev This modifier checks if an address is authorized\\n    modifier onlyAuthorized() {\\n        require(isAuthorized(msg.sender), \\\"Sender not Authorized\\\");\\n        _;\\n    }\\n\\n    /// @dev Returns true if an address is authorized\\n    /// @param who the address to check\\n    /// @return true if authorized false if not\\n    function isAuthorized(address who) public view returns (bool) {\\n        return authorized[who];\\n    }\\n\\n    /// @dev Privileged function authorize an address\\n    /// @param who the address to authorize\\n    function authorize(address who) external onlyOwner {\\n        _authorize(who);\\n    }\\n\\n    /// @dev Privileged function to de authorize an address\\n    /// @param who The address to remove authorization from\\n    function deauthorize(address who) external onlyOwner {\\n        authorized[who] = false;\\n    }\\n\\n    /// @dev Function to change owner\\n    /// @param who The new owner address\\n    function setOwner(address who) public onlyOwner {\\n        owner = who;\\n    }\\n\\n    /// @dev Inheritable function which authorizes someone\\n    /// @param who the address to authorize\\n    function _authorize(address who) internal {\\n        authorized[who] = true;\\n    }\\n}\",\"keccak256\":\"0xa5eb77918ce2f4c8a980f8720c8d8d4b09ae47d43be25b70cc06be4935a1edab\",\"license\":\"Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":445,"contract":"contracts/Authorizable.sol:Authorizable","label":"owner","offset":0,"slot":"0","type":"t_address"},{"astId":449,"contract":"contracts/Authorizable.sol:Authorizable","label":"authorized","offset":0,"slot":"1","type":"t_mapping(t_address,t_bool)"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/ERC20Permit.sol":{"ERC20Permit":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"params":{"account":"The account which will be approve to transfer tokens","amount":"The approval amount, if set to uint256.max the allowance does not go down on transfers."},"returns":{"_0":"returns true for compatibility with the ERC20 standard"}},"constructor":{"details":"decimals default to 18 and must be reset by an inheriting contract for      non standard decimal values","params":{"name_":"the value 'name' will be set to","symbol_":"the value 'symbol' will be set to"}},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"The signature for this function follows EIP 712 standard and should be generated with the      eth_signTypedData JSON RPC call instead of the eth_sign JSON RPC call. If using out of date      parity signing libraries the v component may need to be adjusted. Also it is very rare but possible      for v to be other values, those values are not supported.","params":{"deadline":"the timestamp which the signature must be submitted by to be valid","owner":"the owner of the account which is having the new approval set","r":"The r component of the ECDSA signature","s":"The s component of the ECDSA signature","spender":"the address which will be allowed to spend owner's tokens","v":"Extra ECDSA data which allows public key recovery from signature assumed to be 27 or 28","value":"the new allowance value"}},"transfer(address,uint256)":{"details":"transfers to this contract address or 0 will fail","params":{"amount":"The amount user token to send","recipient":"The address which will be credited with the tokens"},"returns":{"_0":"returns true on success, reverts on failure so cannot return false."}},"transferFrom(address,address,uint256)":{"details":"will fail transfers which send funds to this contract or 0","params":{"amount":"the number of tokens to send","recipient":"The destination of the ERC20 tokens","spender":"The source of the ERC20 tokens"},"returns":{"_0":"returns true on success and reverts on failure"}}},"stateVariables":{"DOMAIN_SEPARATOR":{"details":"Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}."},"nonces":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","PERMIT_TYPEHASH()":"30adf81f","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"params\":{\"account\":\"The account which will be approve to transfer tokens\",\"amount\":\"The approval amount, if set to uint256.max the allowance does not go down on transfers.\"},\"returns\":{\"_0\":\"returns true for compatibility with the ERC20 standard\"}},\"constructor\":{\"details\":\"decimals default to 18 and must be reset by an inheriting contract for      non standard decimal values\",\"params\":{\"name_\":\"the value 'name' will be set to\",\"symbol_\":\"the value 'symbol' will be set to\"}},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The signature for this function follows EIP 712 standard and should be generated with the      eth_signTypedData JSON RPC call instead of the eth_sign JSON RPC call. If using out of date      parity signing libraries the v component may need to be adjusted. Also it is very rare but possible      for v to be other values, those values are not supported.\",\"params\":{\"deadline\":\"the timestamp which the signature must be submitted by to be valid\",\"owner\":\"the owner of the account which is having the new approval set\",\"r\":\"The r component of the ECDSA signature\",\"s\":\"The s component of the ECDSA signature\",\"spender\":\"the address which will be allowed to spend owner's tokens\",\"v\":\"Extra ECDSA data which allows public key recovery from signature assumed to be 27 or 28\",\"value\":\"the new allowance value\"}},\"transfer(address,uint256)\":{\"details\":\"transfers to this contract address or 0 will fail\",\"params\":{\"amount\":\"The amount user token to send\",\"recipient\":\"The address which will be credited with the tokens\"},\"returns\":{\"_0\":\"returns true on success, reverts on failure so cannot return false.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"will fail transfers which send funds to this contract or 0\",\"params\":{\"amount\":\"the number of tokens to send\",\"recipient\":\"The destination of the ERC20 tokens\",\"spender\":\"The source of the ERC20 tokens\"},\"returns\":{\"_0\":\"returns true on success and reverts on failure\"}}},\"stateVariables\":{\"DOMAIN_SEPARATOR\":{\"details\":\"Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}.\"},\"nonces\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"This function allows a user to approve an account which can transfer         tokens on their behalf.\"},\"constructor\":{\"notice\":\"Initializes the erc20 contract\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"This function allows a caller who is not the owner of an account to execute the functionality of 'approve' with the owners signature.\"},\"transfer(address,uint256)\":{\"notice\":\"Allows a token owner to send tokens to another address\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers an amount of erc20 from a spender to a receipt\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20Permit.sol\":\"ERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/ERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\n// Copied from https://github.com/delvtech/elf-contracts/blob/a6cb960896301b7562ced70a8b221f3cc964ea0a/contracts/libraries/ERC20Permit.sol\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"./IERC20Permit.sol\\\";\\n\\n// This default erc20 library is designed for max efficiency and security.\\n// WARNING: By default it does not include totalSupply which breaks the ERC20 standard\\n//          to use a fully standard compliant ERC20 use 'ERC20PermitWithSupply\\\"\\nabstract contract ERC20Permit is IERC20Permit {\\n    // --- ERC20 Data ---\\n    // The name of the erc20 token\\n    string public name;\\n    // The symbol of the erc20 token\\n    string public override symbol;\\n    // The decimals of the erc20 token, should default to 18 for new tokens\\n    uint8 public override decimals;\\n\\n    // A mapping which tracks user token balances\\n    mapping(address => uint256) public override balanceOf;\\n    // A mapping which tracks which addresses a user allows to move their tokens\\n    mapping(address => mapping(address => uint256)) public override allowance;\\n    // A mapping which tracks the permit signature nonces for users\\n    mapping(address => uint256) public override nonces;\\n\\n    // --- EIP712 niceties ---\\n    // solhint-disable-next-line var-name-mixedcase\\n    bytes32 public override DOMAIN_SEPARATOR;\\n    // bytes32 public constant PERMIT_TYPEHASH = keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n    bytes32 public constant PERMIT_TYPEHASH =\\n        0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\\n\\n    /// @notice Initializes the erc20 contract\\n    /// @param name_ the value 'name' will be set to\\n    /// @param symbol_ the value 'symbol' will be set to\\n    /// @dev decimals default to 18 and must be reset by an inheriting contract for\\n    ///      non standard decimal values\\n    constructor(string memory name_, string memory symbol_) {\\n        // Set the state variables\\n        name = name_;\\n        symbol = symbol_;\\n        decimals = 18;\\n\\n        // By setting these addresses to 0 attempting to execute a transfer to\\n        // either of them will revert. This is a gas efficient way to prevent\\n        // a common user mistake where they transfer to the token address.\\n        // These values are not considered 'real' tokens and so are not included\\n        // in 'total supply' which only contains minted tokens.\\n        balanceOf[address(0)] = type(uint256).max;\\n        balanceOf[address(this)] = type(uint256).max;\\n\\n        // Optional extra state manipulation\\n        _extraConstruction();\\n\\n        // Computes the EIP 712 domain separator which prevents user signed messages for\\n        // this contract to be replayed in other contracts.\\n        // https://eips.ethereum.org/EIPS/eip-712\\n        DOMAIN_SEPARATOR = keccak256(\\n            abi.encode(\\n                keccak256(\\n                    \\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"\\n                ),\\n                keccak256(bytes(name)),\\n                keccak256(bytes(\\\"1\\\")),\\n                block.chainid,\\n                address(this)\\n            )\\n        );\\n    }\\n\\n    /// @notice An optional override function to execute and change state before immutable assignment\\n    function _extraConstruction() internal virtual {}\\n\\n    // --- Token ---\\n    /// @notice Allows a token owner to send tokens to another address\\n    /// @param recipient The address which will be credited with the tokens\\n    /// @param amount The amount user token to send\\n    /// @return returns true on success, reverts on failure so cannot return false.\\n    /// @dev transfers to this contract address or 0 will fail\\n    function transfer(\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        // We forward this call to 'transferFrom'\\n        return transferFrom(msg.sender, recipient, amount);\\n    }\\n\\n    /// @notice Transfers an amount of erc20 from a spender to a receipt\\n    /// @param spender The source of the ERC20 tokens\\n    /// @param recipient The destination of the ERC20 tokens\\n    /// @param amount the number of tokens to send\\n    /// @return returns true on success and reverts on failure\\n    /// @dev will fail transfers which send funds to this contract or 0\\n    function transferFrom(\\n        address spender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        // Load balance and allowance\\n        uint256 balance = balanceOf[spender];\\n        require(balance >= amount, \\\"ERC20: insufficient-balance\\\");\\n        // We potentially have to change allowances\\n        if (spender != msg.sender) {\\n            // Loading the allowance in the if block prevents vanilla transfers\\n            // from paying for the sload.\\n            uint256 allowed = allowance[spender][msg.sender];\\n            // If the allowance is max we do not reduce it\\n            // Note - This means that max allowances will be more gas efficient\\n            // by not requiring a sstore on 'transferFrom'\\n            if (allowed != type(uint256).max) {\\n                require(allowed >= amount, \\\"ERC20: insufficient-allowance\\\");\\n                allowance[spender][msg.sender] = allowed - amount;\\n            }\\n        }\\n        // Update the balances\\n        balanceOf[spender] = balance - amount;\\n        // Note - In the constructor we initialize the 'balanceOf' of address 0 and\\n        //        the token address to uint256.max and so in 8.0 transfers to those\\n        //        addresses revert on this step.\\n        balanceOf[recipient] = balanceOf[recipient] + amount;\\n        // Emit the needed event\\n        emit Transfer(spender, recipient, amount);\\n        // Return that this call succeeded\\n        return true;\\n    }\\n\\n    /// @notice This internal minting function allows inheriting contracts\\n    ///         to mint tokens in the way they wish.\\n    /// @param account the address which will receive the token.\\n    /// @param amount the amount of token which they will receive\\n    /// @dev This function is virtual so that it can be overridden, if you\\n    ///      are reviewing this contract for security you should ensure to\\n    ///      check for overrides\\n    function _mint(address account, uint256 amount) internal virtual {\\n        // Add tokens to the account\\n        balanceOf[account] = balanceOf[account] + amount;\\n        // Emit an event to track the minting\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /// @notice This internal burning function allows inheriting contracts to\\n    ///         burn tokens in the way they see fit.\\n    /// @param account the account to remove tokens from\\n    /// @param amount  the amount of tokens to remove\\n    /// @dev This function is virtual so that it can be overridden, if you\\n    ///      are reviewing this contract for security you should ensure to\\n    ///      check for overrides\\n    function _burn(address account, uint256 amount) internal virtual {\\n        // Reduce the balance of the account\\n        balanceOf[account] = balanceOf[account] - amount;\\n        // Emit an event tracking transfers\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /// @notice This function allows a user to approve an account which can transfer\\n    ///         tokens on their behalf.\\n    /// @param account The account which will be approve to transfer tokens\\n    /// @param amount The approval amount, if set to uint256.max the allowance does not go down on transfers.\\n    /// @return returns true for compatibility with the ERC20 standard\\n    function approve(\\n        address account,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        // Set the senders allowance for account to amount\\n        allowance[msg.sender][account] = amount;\\n        // Emit an event to track approvals\\n        emit Approval(msg.sender, account, amount);\\n        return true;\\n    }\\n\\n    /// @notice This function allows a caller who is not the owner of an account to execute the functionality of 'approve' with the owners signature.\\n    /// @param owner the owner of the account which is having the new approval set\\n    /// @param spender the address which will be allowed to spend owner's tokens\\n    /// @param value the new allowance value\\n    /// @param deadline the timestamp which the signature must be submitted by to be valid\\n    /// @param v Extra ECDSA data which allows public key recovery from signature assumed to be 27 or 28\\n    /// @param r The r component of the ECDSA signature\\n    /// @param s The s component of the ECDSA signature\\n    /// @dev The signature for this function follows EIP 712 standard and should be generated with the\\n    ///      eth_signTypedData JSON RPC call instead of the eth_sign JSON RPC call. If using out of date\\n    ///      parity signing libraries the v component may need to be adjusted. Also it is very rare but possible\\n    ///      for v to be other values, those values are not supported.\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external override {\\n        // The EIP 712 digest for this function\\n        bytes32 digest = keccak256(\\n            abi.encodePacked(\\n                \\\"\\\\x19\\\\x01\\\",\\n                DOMAIN_SEPARATOR,\\n                keccak256(\\n                    abi.encode(\\n                        PERMIT_TYPEHASH,\\n                        owner,\\n                        spender,\\n                        value,\\n                        nonces[owner],\\n                        deadline\\n                    )\\n                )\\n            )\\n        );\\n        // Require that the owner is not zero\\n        require(owner != address(0), \\\"ERC20: invalid-address-0\\\");\\n        // Require that we have a valid signature from the owner\\n        require(owner == ecrecover(digest, v, r, s), \\\"ERC20: invalid-permit\\\");\\n        // Require that the signature is not expired\\n        require(\\n            deadline == 0 || block.timestamp <= deadline,\\n            \\\"ERC20: permit-expired\\\"\\n        );\\n        // Format the signature to the default format\\n        require(\\n            uint256(s) <=\\n                0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0,\\n            \\\"ERC20: invalid signature 's' value\\\"\\n        );\\n        // Increment the signature nonce to prevent replay\\n        nonces[owner]++;\\n        // Set the allowance to the new value\\n        allowance[owner][spender] = value;\\n        // Emit an approval event to be able to track this happening\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    /// @notice Internal function which allows inheriting contract to set custom decimals\\n    /// @param decimals_ the new decimal value\\n    function _setupDecimals(uint8 decimals_) internal {\\n        // Set the decimals\\n        decimals = decimals_;\\n    }\\n}\",\"keccak256\":\"0xe3ecdc39b3eaf301d9af6e40d2f20273e089a5e51e7c1b18f5f771da2343eedd\",\"license\":\"Apache-2.0\"},\"contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.3;\\n\\ninterface IERC20 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    // Note this is non standard but nearly all ERC20 have exposed decimal functions\\n    function decimals() external view returns (uint8);\\n\\n    function transfer(\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\",\"keccak256\":\"0xf33d0362011774ccf7d6db862131ce7539c78d96beb6ffc7ad81580e1623fce7\",\"license\":\"Apache-2.0\"},\"contracts/IERC20Permit.sol\":{\"content\":\"// Forked from openzepplin\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit is IERC20 {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over `owner`'s tokens,\\n     * given `owner`'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\",\"keccak256\":\"0x1521813d267ce22cd87d494d97495d2d7cd070e56fe7b2e05c25a8b0d586e560\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":560,"contract":"contracts/ERC20Permit.sol:ERC20Permit","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":563,"contract":"contracts/ERC20Permit.sol:ERC20Permit","label":"symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":566,"contract":"contracts/ERC20Permit.sol:ERC20Permit","label":"decimals","offset":0,"slot":"2","type":"t_uint8"},{"astId":571,"contract":"contracts/ERC20Permit.sol:ERC20Permit","label":"balanceOf","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":578,"contract":"contracts/ERC20Permit.sol:ERC20Permit","label":"allowance","offset":0,"slot":"4","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":583,"contract":"contracts/ERC20Permit.sol:ERC20Permit","label":"nonces","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":586,"contract":"contracts/ERC20Permit.sol:ERC20Permit","label":"DOMAIN_SEPARATOR","offset":0,"slot":"6","type":"t_bytes32"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"approve(address,uint256)":{"notice":"This function allows a user to approve an account which can transfer         tokens on their behalf."},"constructor":{"notice":"Initializes the erc20 contract"},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"notice":"This function allows a caller who is not the owner of an account to execute the functionality of 'approve' with the owners signature."},"transfer(address,uint256)":{"notice":"Allows a token owner to send tokens to another address"},"transferFrom(address,address,uint256)":{"notice":"Transfers an amount of erc20 from a spender to a receipt"}},"version":1}}},"contracts/ERC20PermitWithMint.sol":{"ERC20PermitWithMint":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"authorize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"authorized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"deauthorize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"isAuthorized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"params":{"account":"The account which will be approve to transfer tokens","amount":"The approval amount, if set to uint256.max the allowance does not go down on transfers."},"returns":{"_0":"returns true for compatibility with the ERC20 standard"}},"authorize(address)":{"details":"Privileged function authorize an address","params":{"who":"the address to authorize"}},"burn(address,uint256)":{"params":{"account":"the account to burn from","amount":"the amount of token to burn"}},"constructor":{"params":{"name_":"the value 'name' will be set to","owner_":"address which has the power to mint","symbol_":"the value 'symbol' will be set to"}},"deauthorize(address)":{"details":"Privileged function to de authorize an address","params":{"who":"The address to remove authorization from"}},"isAuthorized(address)":{"details":"Returns true if an address is authorized","params":{"who":"the address to check"},"returns":{"_0":"true if authorized false if not"}},"mint(address,uint256)":{"params":{"account":"the account to addd tokens to","amount":"the amount of tokens to add"}},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"The signature for this function follows EIP 712 standard and should be generated with the      eth_signTypedData JSON RPC call instead of the eth_sign JSON RPC call. If using out of date      parity signing libraries the v component may need to be adjusted. Also it is very rare but possible      for v to be other values, those values are not supported.","params":{"deadline":"the timestamp which the signature must be submitted by to be valid","owner":"the owner of the account which is having the new approval set","r":"The r component of the ECDSA signature","s":"The s component of the ECDSA signature","spender":"the address which will be allowed to spend owner's tokens","v":"Extra ECDSA data which allows public key recovery from signature assumed to be 27 or 28","value":"the new allowance value"}},"setOwner(address)":{"details":"Function to change owner","params":{"who":"The new owner address"}},"transfer(address,uint256)":{"details":"transfers to this contract address or 0 will fail","params":{"amount":"The amount user token to send","recipient":"The address which will be credited with the tokens"},"returns":{"_0":"returns true on success, reverts on failure so cannot return false."}},"transferFrom(address,address,uint256)":{"details":"will fail transfers which send funds to this contract or 0","params":{"amount":"the number of tokens to send","recipient":"The destination of the ERC20 tokens","spender":"The source of the ERC20 tokens"},"returns":{"_0":"returns true on success and reverts on failure"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","PERMIT_TYPEHASH()":"30adf81f","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","authorize(address)":"b6a5d7de","authorized(address)":"b9181611","balanceOf(address)":"70a08231","burn(address,uint256)":"9dc29fac","deauthorize(address)":"27c97fa5","decimals()":"313ce567","isAuthorized(address)":"fe9fbb80","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","setOwner(address)":"13af4035","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"authorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"deauthorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"params\":{\"account\":\"The account which will be approve to transfer tokens\",\"amount\":\"The approval amount, if set to uint256.max the allowance does not go down on transfers.\"},\"returns\":{\"_0\":\"returns true for compatibility with the ERC20 standard\"}},\"authorize(address)\":{\"details\":\"Privileged function authorize an address\",\"params\":{\"who\":\"the address to authorize\"}},\"burn(address,uint256)\":{\"params\":{\"account\":\"the account to burn from\",\"amount\":\"the amount of token to burn\"}},\"constructor\":{\"params\":{\"name_\":\"the value 'name' will be set to\",\"owner_\":\"address which has the power to mint\",\"symbol_\":\"the value 'symbol' will be set to\"}},\"deauthorize(address)\":{\"details\":\"Privileged function to de authorize an address\",\"params\":{\"who\":\"The address to remove authorization from\"}},\"isAuthorized(address)\":{\"details\":\"Returns true if an address is authorized\",\"params\":{\"who\":\"the address to check\"},\"returns\":{\"_0\":\"true if authorized false if not\"}},\"mint(address,uint256)\":{\"params\":{\"account\":\"the account to addd tokens to\",\"amount\":\"the amount of tokens to add\"}},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The signature for this function follows EIP 712 standard and should be generated with the      eth_signTypedData JSON RPC call instead of the eth_sign JSON RPC call. If using out of date      parity signing libraries the v component may need to be adjusted. Also it is very rare but possible      for v to be other values, those values are not supported.\",\"params\":{\"deadline\":\"the timestamp which the signature must be submitted by to be valid\",\"owner\":\"the owner of the account which is having the new approval set\",\"r\":\"The r component of the ECDSA signature\",\"s\":\"The s component of the ECDSA signature\",\"spender\":\"the address which will be allowed to spend owner's tokens\",\"v\":\"Extra ECDSA data which allows public key recovery from signature assumed to be 27 or 28\",\"value\":\"the new allowance value\"}},\"setOwner(address)\":{\"details\":\"Function to change owner\",\"params\":{\"who\":\"The new owner address\"}},\"transfer(address,uint256)\":{\"details\":\"transfers to this contract address or 0 will fail\",\"params\":{\"amount\":\"The amount user token to send\",\"recipient\":\"The address which will be credited with the tokens\"},\"returns\":{\"_0\":\"returns true on success, reverts on failure so cannot return false.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"will fail transfers which send funds to this contract or 0\",\"params\":{\"amount\":\"the number of tokens to send\",\"recipient\":\"The destination of the ERC20 tokens\",\"spender\":\"The source of the ERC20 tokens\"},\"returns\":{\"_0\":\"returns true on success and reverts on failure\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"This function allows a user to approve an account which can transfer         tokens on their behalf.\"},\"burn(address,uint256)\":{\"notice\":\"Allows the governance to burn\"},\"constructor\":{\"notice\":\"Initializes the erc20 contract\"},\"mint(address,uint256)\":{\"notice\":\"Allows the governance to mint\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"This function allows a caller who is not the owner of an account to execute the functionality of 'approve' with the owners signature.\"},\"transfer(address,uint256)\":{\"notice\":\"Allows a token owner to send tokens to another address\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers an amount of erc20 from a spender to a receipt\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20PermitWithMint.sol\":\"ERC20PermitWithMint\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/Authorizable.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity >=0.7.0;\\n\\ncontract Authorizable {\\n    // This contract allows a flexible authorization scheme\\n\\n    // The owner who can change authorization status\\n    address public owner;\\n    // A mapping from an address to its authorization status\\n    mapping(address => bool) public authorized;\\n\\n    /// @dev We set the deployer to the owner\\n    constructor() {\\n        owner = msg.sender;\\n    }\\n\\n    /// @dev This modifier checks if the msg.sender is the owner\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Sender not owner\\\");\\n        _;\\n    }\\n\\n    /// @dev This modifier checks if an address is authorized\\n    modifier onlyAuthorized() {\\n        require(isAuthorized(msg.sender), \\\"Sender not Authorized\\\");\\n        _;\\n    }\\n\\n    /// @dev Returns true if an address is authorized\\n    /// @param who the address to check\\n    /// @return true if authorized false if not\\n    function isAuthorized(address who) public view returns (bool) {\\n        return authorized[who];\\n    }\\n\\n    /// @dev Privileged function authorize an address\\n    /// @param who the address to authorize\\n    function authorize(address who) external onlyOwner {\\n        _authorize(who);\\n    }\\n\\n    /// @dev Privileged function to de authorize an address\\n    /// @param who The address to remove authorization from\\n    function deauthorize(address who) external onlyOwner {\\n        authorized[who] = false;\\n    }\\n\\n    /// @dev Function to change owner\\n    /// @param who The new owner address\\n    function setOwner(address who) public onlyOwner {\\n        owner = who;\\n    }\\n\\n    /// @dev Inheritable function which authorizes someone\\n    /// @param who the address to authorize\\n    function _authorize(address who) internal {\\n        authorized[who] = true;\\n    }\\n}\",\"keccak256\":\"0xa5eb77918ce2f4c8a980f8720c8d8d4b09ae47d43be25b70cc06be4935a1edab\",\"license\":\"Apache-2.0\"},\"contracts/ERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\n// Copied from https://github.com/delvtech/elf-contracts/blob/a6cb960896301b7562ced70a8b221f3cc964ea0a/contracts/libraries/ERC20Permit.sol\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"./IERC20Permit.sol\\\";\\n\\n// This default erc20 library is designed for max efficiency and security.\\n// WARNING: By default it does not include totalSupply which breaks the ERC20 standard\\n//          to use a fully standard compliant ERC20 use 'ERC20PermitWithSupply\\\"\\nabstract contract ERC20Permit is IERC20Permit {\\n    // --- ERC20 Data ---\\n    // The name of the erc20 token\\n    string public name;\\n    // The symbol of the erc20 token\\n    string public override symbol;\\n    // The decimals of the erc20 token, should default to 18 for new tokens\\n    uint8 public override decimals;\\n\\n    // A mapping which tracks user token balances\\n    mapping(address => uint256) public override balanceOf;\\n    // A mapping which tracks which addresses a user allows to move their tokens\\n    mapping(address => mapping(address => uint256)) public override allowance;\\n    // A mapping which tracks the permit signature nonces for users\\n    mapping(address => uint256) public override nonces;\\n\\n    // --- EIP712 niceties ---\\n    // solhint-disable-next-line var-name-mixedcase\\n    bytes32 public override DOMAIN_SEPARATOR;\\n    // bytes32 public constant PERMIT_TYPEHASH = keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n    bytes32 public constant PERMIT_TYPEHASH =\\n        0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\\n\\n    /// @notice Initializes the erc20 contract\\n    /// @param name_ the value 'name' will be set to\\n    /// @param symbol_ the value 'symbol' will be set to\\n    /// @dev decimals default to 18 and must be reset by an inheriting contract for\\n    ///      non standard decimal values\\n    constructor(string memory name_, string memory symbol_) {\\n        // Set the state variables\\n        name = name_;\\n        symbol = symbol_;\\n        decimals = 18;\\n\\n        // By setting these addresses to 0 attempting to execute a transfer to\\n        // either of them will revert. This is a gas efficient way to prevent\\n        // a common user mistake where they transfer to the token address.\\n        // These values are not considered 'real' tokens and so are not included\\n        // in 'total supply' which only contains minted tokens.\\n        balanceOf[address(0)] = type(uint256).max;\\n        balanceOf[address(this)] = type(uint256).max;\\n\\n        // Optional extra state manipulation\\n        _extraConstruction();\\n\\n        // Computes the EIP 712 domain separator which prevents user signed messages for\\n        // this contract to be replayed in other contracts.\\n        // https://eips.ethereum.org/EIPS/eip-712\\n        DOMAIN_SEPARATOR = keccak256(\\n            abi.encode(\\n                keccak256(\\n                    \\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"\\n                ),\\n                keccak256(bytes(name)),\\n                keccak256(bytes(\\\"1\\\")),\\n                block.chainid,\\n                address(this)\\n            )\\n        );\\n    }\\n\\n    /// @notice An optional override function to execute and change state before immutable assignment\\n    function _extraConstruction() internal virtual {}\\n\\n    // --- Token ---\\n    /// @notice Allows a token owner to send tokens to another address\\n    /// @param recipient The address which will be credited with the tokens\\n    /// @param amount The amount user token to send\\n    /// @return returns true on success, reverts on failure so cannot return false.\\n    /// @dev transfers to this contract address or 0 will fail\\n    function transfer(\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        // We forward this call to 'transferFrom'\\n        return transferFrom(msg.sender, recipient, amount);\\n    }\\n\\n    /// @notice Transfers an amount of erc20 from a spender to a receipt\\n    /// @param spender The source of the ERC20 tokens\\n    /// @param recipient The destination of the ERC20 tokens\\n    /// @param amount the number of tokens to send\\n    /// @return returns true on success and reverts on failure\\n    /// @dev will fail transfers which send funds to this contract or 0\\n    function transferFrom(\\n        address spender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        // Load balance and allowance\\n        uint256 balance = balanceOf[spender];\\n        require(balance >= amount, \\\"ERC20: insufficient-balance\\\");\\n        // We potentially have to change allowances\\n        if (spender != msg.sender) {\\n            // Loading the allowance in the if block prevents vanilla transfers\\n            // from paying for the sload.\\n            uint256 allowed = allowance[spender][msg.sender];\\n            // If the allowance is max we do not reduce it\\n            // Note - This means that max allowances will be more gas efficient\\n            // by not requiring a sstore on 'transferFrom'\\n            if (allowed != type(uint256).max) {\\n                require(allowed >= amount, \\\"ERC20: insufficient-allowance\\\");\\n                allowance[spender][msg.sender] = allowed - amount;\\n            }\\n        }\\n        // Update the balances\\n        balanceOf[spender] = balance - amount;\\n        // Note - In the constructor we initialize the 'balanceOf' of address 0 and\\n        //        the token address to uint256.max and so in 8.0 transfers to those\\n        //        addresses revert on this step.\\n        balanceOf[recipient] = balanceOf[recipient] + amount;\\n        // Emit the needed event\\n        emit Transfer(spender, recipient, amount);\\n        // Return that this call succeeded\\n        return true;\\n    }\\n\\n    /// @notice This internal minting function allows inheriting contracts\\n    ///         to mint tokens in the way they wish.\\n    /// @param account the address which will receive the token.\\n    /// @param amount the amount of token which they will receive\\n    /// @dev This function is virtual so that it can be overridden, if you\\n    ///      are reviewing this contract for security you should ensure to\\n    ///      check for overrides\\n    function _mint(address account, uint256 amount) internal virtual {\\n        // Add tokens to the account\\n        balanceOf[account] = balanceOf[account] + amount;\\n        // Emit an event to track the minting\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /// @notice This internal burning function allows inheriting contracts to\\n    ///         burn tokens in the way they see fit.\\n    /// @param account the account to remove tokens from\\n    /// @param amount  the amount of tokens to remove\\n    /// @dev This function is virtual so that it can be overridden, if you\\n    ///      are reviewing this contract for security you should ensure to\\n    ///      check for overrides\\n    function _burn(address account, uint256 amount) internal virtual {\\n        // Reduce the balance of the account\\n        balanceOf[account] = balanceOf[account] - amount;\\n        // Emit an event tracking transfers\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /// @notice This function allows a user to approve an account which can transfer\\n    ///         tokens on their behalf.\\n    /// @param account The account which will be approve to transfer tokens\\n    /// @param amount The approval amount, if set to uint256.max the allowance does not go down on transfers.\\n    /// @return returns true for compatibility with the ERC20 standard\\n    function approve(\\n        address account,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        // Set the senders allowance for account to amount\\n        allowance[msg.sender][account] = amount;\\n        // Emit an event to track approvals\\n        emit Approval(msg.sender, account, amount);\\n        return true;\\n    }\\n\\n    /// @notice This function allows a caller who is not the owner of an account to execute the functionality of 'approve' with the owners signature.\\n    /// @param owner the owner of the account which is having the new approval set\\n    /// @param spender the address which will be allowed to spend owner's tokens\\n    /// @param value the new allowance value\\n    /// @param deadline the timestamp which the signature must be submitted by to be valid\\n    /// @param v Extra ECDSA data which allows public key recovery from signature assumed to be 27 or 28\\n    /// @param r The r component of the ECDSA signature\\n    /// @param s The s component of the ECDSA signature\\n    /// @dev The signature for this function follows EIP 712 standard and should be generated with the\\n    ///      eth_signTypedData JSON RPC call instead of the eth_sign JSON RPC call. If using out of date\\n    ///      parity signing libraries the v component may need to be adjusted. Also it is very rare but possible\\n    ///      for v to be other values, those values are not supported.\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external override {\\n        // The EIP 712 digest for this function\\n        bytes32 digest = keccak256(\\n            abi.encodePacked(\\n                \\\"\\\\x19\\\\x01\\\",\\n                DOMAIN_SEPARATOR,\\n                keccak256(\\n                    abi.encode(\\n                        PERMIT_TYPEHASH,\\n                        owner,\\n                        spender,\\n                        value,\\n                        nonces[owner],\\n                        deadline\\n                    )\\n                )\\n            )\\n        );\\n        // Require that the owner is not zero\\n        require(owner != address(0), \\\"ERC20: invalid-address-0\\\");\\n        // Require that we have a valid signature from the owner\\n        require(owner == ecrecover(digest, v, r, s), \\\"ERC20: invalid-permit\\\");\\n        // Require that the signature is not expired\\n        require(\\n            deadline == 0 || block.timestamp <= deadline,\\n            \\\"ERC20: permit-expired\\\"\\n        );\\n        // Format the signature to the default format\\n        require(\\n            uint256(s) <=\\n                0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0,\\n            \\\"ERC20: invalid signature 's' value\\\"\\n        );\\n        // Increment the signature nonce to prevent replay\\n        nonces[owner]++;\\n        // Set the allowance to the new value\\n        allowance[owner][spender] = value;\\n        // Emit an approval event to be able to track this happening\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    /// @notice Internal function which allows inheriting contract to set custom decimals\\n    /// @param decimals_ the new decimal value\\n    function _setupDecimals(uint8 decimals_) internal {\\n        // Set the decimals\\n        decimals = decimals_;\\n    }\\n}\",\"keccak256\":\"0xe3ecdc39b3eaf301d9af6e40d2f20273e089a5e51e7c1b18f5f771da2343eedd\",\"license\":\"Apache-2.0\"},\"contracts/ERC20PermitWithMint.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\n// Largely based on https://github.com/delvtech/elf-contracts/blob/a6cb960896301b7562ced70a8b221f3cc964ea0a/contracts/libraries/ERC20PermitWithSupply.sol\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"./ERC20Permit.sol\\\";\\nimport \\\"./Authorizable.sol\\\";\\n\\n// This contract adds total supply and minting to the generic erc20\\nabstract contract ERC20PermitWithMint is ERC20Permit, Authorizable {\\n    /// @notice Initializes the erc20 contract\\n    /// @param name_ the value 'name' will be set to\\n    /// @param symbol_ the value 'symbol' will be set to\\n    /// @param owner_ address which has the power to mint\\n    constructor(\\n        string memory name_,\\n        string memory symbol_,\\n        address owner_\\n    ) ERC20Permit(name_, symbol_) {\\n        setOwner(owner_);\\n    }\\n\\n    // The stored totalSupply, it equals all tokens minted - all tokens burned\\n    uint256 public totalSupply;\\n\\n    /// @notice Allows the governance to mint\\n    /// @param account the account to addd tokens to\\n    /// @param amount the amount of tokens to add\\n    function mint(address account, uint256 amount) external onlyOwner {\\n        _mint(account, amount);\\n    }\\n\\n    /// @notice This function overrides the ERC20Permit Library's _mint and causes it\\n    ///          to track total supply.\\n    /// @param account the account to addd tokens to\\n    /// @param amount the amount of tokens to add\\n    function _mint(address account, uint256 amount) internal override {\\n        // Increase account balance\\n        balanceOf[account] = balanceOf[account] + amount;\\n        // Increase total supply\\n        totalSupply += amount;\\n        // Emit a transfer from zero to emulate a mint\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /// @notice Allows the governance to burn\\n    /// @param account the account to burn from\\n    /// @param amount the amount of token to burn\\n    function burn(address account, uint256 amount) external onlyOwner {\\n        _burn(account, amount);\\n    }\\n\\n    /// @notice This function overrides the ERC20Permit Library's _burn to decrement total supply\\n    /// @param account the account to burn from\\n    /// @param amount the amount of token to burn\\n    function _burn(address account, uint256 amount) internal override {\\n        // Decrease user balance\\n        uint256 currentBalance = balanceOf[account];\\n        // This logic prevents a reversion if the _burn is frontrun\\n        if (currentBalance < amount) {\\n            balanceOf[account] = 0;\\n        } else {\\n            balanceOf[account] = currentBalance - amount;\\n        }\\n        // Decrease total supply\\n        totalSupply -= amount;\\n        // Emit an event tracking the burn\\n        emit Transfer(account, address(0), amount);\\n    }\\n}\",\"keccak256\":\"0xd0ca44654901b287872a88ea5d614163af4eeda8ea61e9b82a287a95c96a785c\",\"license\":\"Apache-2.0\"},\"contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.3;\\n\\ninterface IERC20 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    // Note this is non standard but nearly all ERC20 have exposed decimal functions\\n    function decimals() external view returns (uint8);\\n\\n    function transfer(\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\",\"keccak256\":\"0xf33d0362011774ccf7d6db862131ce7539c78d96beb6ffc7ad81580e1623fce7\",\"license\":\"Apache-2.0\"},\"contracts/IERC20Permit.sol\":{\"content\":\"// Forked from openzepplin\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit is IERC20 {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over `owner`'s tokens,\\n     * given `owner`'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\",\"keccak256\":\"0x1521813d267ce22cd87d494d97495d2d7cd070e56fe7b2e05c25a8b0d586e560\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":560,"contract":"contracts/ERC20PermitWithMint.sol:ERC20PermitWithMint","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":563,"contract":"contracts/ERC20PermitWithMint.sol:ERC20PermitWithMint","label":"symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":566,"contract":"contracts/ERC20PermitWithMint.sol:ERC20PermitWithMint","label":"decimals","offset":0,"slot":"2","type":"t_uint8"},{"astId":571,"contract":"contracts/ERC20PermitWithMint.sol:ERC20PermitWithMint","label":"balanceOf","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":578,"contract":"contracts/ERC20PermitWithMint.sol:ERC20PermitWithMint","label":"allowance","offset":0,"slot":"4","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":583,"contract":"contracts/ERC20PermitWithMint.sol:ERC20PermitWithMint","label":"nonces","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":586,"contract":"contracts/ERC20PermitWithMint.sol:ERC20PermitWithMint","label":"DOMAIN_SEPARATOR","offset":0,"slot":"6","type":"t_bytes32"},{"astId":445,"contract":"contracts/ERC20PermitWithMint.sol:ERC20PermitWithMint","label":"owner","offset":0,"slot":"7","type":"t_address"},{"astId":449,"contract":"contracts/ERC20PermitWithMint.sol:ERC20PermitWithMint","label":"authorized","offset":0,"slot":"8","type":"t_mapping(t_address,t_bool)"},{"astId":1020,"contract":"contracts/ERC20PermitWithMint.sol:ERC20PermitWithMint","label":"totalSupply","offset":0,"slot":"9","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"approve(address,uint256)":{"notice":"This function allows a user to approve an account which can transfer         tokens on their behalf."},"burn(address,uint256)":{"notice":"Allows the governance to burn"},"constructor":{"notice":"Initializes the erc20 contract"},"mint(address,uint256)":{"notice":"Allows the governance to mint"},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"notice":"This function allows a caller who is not the owner of an account to execute the functionality of 'approve' with the owners signature."},"transfer(address,uint256)":{"notice":"Allows a token owner to send tokens to another address"},"transferFrom(address,address,uint256)":{"notice":"Transfers an amount of erc20 from a spender to a receipt"}},"version":1}}},"contracts/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.3;\\n\\ninterface IERC20 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    // Note this is non standard but nearly all ERC20 have exposed decimal functions\\n    function decimals() external view returns (uint8);\\n\\n    function transfer(\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\",\"keccak256\":\"0xf33d0362011774ccf7d6db862131ce7539c78d96beb6ffc7ad81580e1623fce7\",\"license\":\"Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/IERC20Permit.sol":{"IERC20Permit":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.","kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"details":"Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}."},"nonces(address)":{"details":"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"Sets `value` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]."}},"version":1},"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","nonces(address)":"7ecebe00","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","symbol()":"95d89b41","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over `owner`'s tokens, given `owner`'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section].\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":1},\"remappings\":[]},\"sources\":{\"contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.3;\\n\\ninterface IERC20 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    // Note this is non standard but nearly all ERC20 have exposed decimal functions\\n    function decimals() external view returns (uint8);\\n\\n    function transfer(\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\",\"keccak256\":\"0xf33d0362011774ccf7d6db862131ce7539c78d96beb6ffc7ad81580e1623fce7\",\"license\":\"Apache-2.0\"},\"contracts/IERC20Permit.sol\":{\"content\":\"// Forked from openzepplin\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit is IERC20 {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over `owner`'s tokens,\\n     * given `owner`'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\",\"keccak256\":\"0x1521813d267ce22cd87d494d97495d2d7cd070e56fe7b2e05c25a8b0d586e560\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/mockHog.sol":{"MockHog":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"},{"internalType":"address","name":"owner_","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"address","name":"","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"authorize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"authorized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"deauthorize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"isAuthorized","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"nonces","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"source","type":"address"},{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"setAllowance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"setBalance","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"who","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"approve(address,uint256)":{"params":{"account":"The account which will be approve to transfer tokens","amount":"The approval amount, if set to uint256.max the allowance does not go down on transfers."},"returns":{"_0":"returns true for compatibility with the ERC20 standard"}},"authorize(address)":{"details":"Privileged function authorize an address","params":{"who":"the address to authorize"}},"burn(address,uint256)":{"params":{"account":"the account to burn from","amount":"the amount of token to burn"}},"deauthorize(address)":{"details":"Privileged function to de authorize an address","params":{"who":"The address to remove authorization from"}},"isAuthorized(address)":{"details":"Returns true if an address is authorized","params":{"who":"the address to check"},"returns":{"_0":"true if authorized false if not"}},"mint(address,uint256)":{"params":{"account":"the account to addd tokens to","amount":"the amount of tokens to add"}},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"details":"The signature for this function follows EIP 712 standard and should be generated with the      eth_signTypedData JSON RPC call instead of the eth_sign JSON RPC call. If using out of date      parity signing libraries the v component may need to be adjusted. Also it is very rare but possible      for v to be other values, those values are not supported.","params":{"deadline":"the timestamp which the signature must be submitted by to be valid","owner":"the owner of the account which is having the new approval set","r":"The r component of the ECDSA signature","s":"The s component of the ECDSA signature","spender":"the address which will be allowed to spend owner's tokens","v":"Extra ECDSA data which allows public key recovery from signature assumed to be 27 or 28","value":"the new allowance value"}},"setOwner(address)":{"details":"Function to change owner","params":{"who":"The new owner address"}},"transfer(address,uint256)":{"details":"transfers to this contract address or 0 will fail","params":{"amount":"The amount user token to send","recipient":"The address which will be credited with the tokens"},"returns":{"_0":"returns true on success, reverts on failure so cannot return false."}},"transferFrom(address,address,uint256)":{"details":"will fail transfers which send funds to this contract or 0","params":{"amount":"the number of tokens to send","recipient":"The destination of the ERC20 tokens","spender":"The source of the ERC20 tokens"},"returns":{"_0":"returns true on success and reverts on failure"}}},"version":1},"evm":{"bytecode":{"functionDebugData":{"@_1018":{"entryPoint":null,"id":1018,"parameterSlots":3,"returnSlots":0},"@_1274":{"entryPoint":null,"id":1274,"parameterSlots":3,"returnSlots":0},"@_459":{"entryPoint":null,"id":459,"parameterSlots":0,"returnSlots":0},"@_668":{"entryPoint":null,"id":668,"parameterSlots":2,"returnSlots":0},"@_extraConstruction_673":{"entryPoint":null,"id":673,"parameterSlots":0,"returnSlots":0},"@setOwner_539":{"entryPoint":375,"id":539,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":841,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address_fromMemory":{"entryPoint":1007,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":914,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory":{"entryPoint":1020,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":1381,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":1373,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":1234,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3_to_t_string_memory_ptr_fromStack":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":1352,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed":{"entryPoint":1392,"id":null,"parameterSlots":6,"returnSlots":1},"abi_encode_tuple_t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":1478,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_memory":{"entryPoint":711,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":742,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_bytes_storage_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":962,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":790,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1185,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":661,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":1163,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":639,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":629,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":981,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:8571:13","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:13","statements":[{"nodeType":"YulAssignment","src":"57:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:13"},"nodeType":"YulFunctionCall","src":"67:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:13","type":""}],"src":"7:75:13"},{"body":{"nodeType":"YulBlock","src":"177:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:13"},"nodeType":"YulFunctionCall","src":"187:12:13"},"nodeType":"YulExpressionStatement","src":"187:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:13"},{"body":{"nodeType":"YulBlock","src":"300:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:13"},"nodeType":"YulFunctionCall","src":"310:12:13"},"nodeType":"YulExpressionStatement","src":"310:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:13"},{"body":{"nodeType":"YulBlock","src":"423:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:13"},"nodeType":"YulFunctionCall","src":"433:12:13"},"nodeType":"YulExpressionStatement","src":"433:12:13"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:13"},{"body":{"nodeType":"YulBlock","src":"546:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:13"},"nodeType":"YulFunctionCall","src":"556:12:13"},"nodeType":"YulExpressionStatement","src":"556:12:13"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:13"},{"body":{"nodeType":"YulBlock","src":"628:54:13","statements":[{"nodeType":"YulAssignment","src":"638:38:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:13"},"nodeType":"YulFunctionCall","src":"652:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:13"},"nodeType":"YulFunctionCall","src":"668:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:13"},"nodeType":"YulFunctionCall","src":"648:28:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:13"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:13","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:13","type":""}],"src":"580:102:13"},{"body":{"nodeType":"YulBlock","src":"716:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:13"},"nodeType":"YulFunctionCall","src":"726:88:13"},"nodeType":"YulExpressionStatement","src":"726:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:13","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:13"},"nodeType":"YulFunctionCall","src":"823:15:13"},"nodeType":"YulExpressionStatement","src":"823:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:13"},"nodeType":"YulFunctionCall","src":"847:15:13"},"nodeType":"YulExpressionStatement","src":"847:15:13"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:13"},{"body":{"nodeType":"YulBlock","src":"917:238:13","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:13","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:13"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:13"},"nodeType":"YulFunctionCall","src":"957:27:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:13"},"nodeType":"YulFunctionCall","src":"945:40:13"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:13"},"nodeType":"YulFunctionCall","src":"1098:18:13"},"nodeType":"YulExpressionStatement","src":"1098:18:13"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:13"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:13"},"nodeType":"YulFunctionCall","src":"1036:34:13"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:13"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:13"},"nodeType":"YulFunctionCall","src":"1072:22:13"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:13"},"nodeType":"YulFunctionCall","src":"1033:62:13"},"nodeType":"YulIf","src":"1030:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:13","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:13"},"nodeType":"YulFunctionCall","src":"1127:22:13"},"nodeType":"YulExpressionStatement","src":"1127:22:13"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:13","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:13","type":""}],"src":"874:281:13"},{"body":{"nodeType":"YulBlock","src":"1202:88:13","statements":[{"nodeType":"YulAssignment","src":"1212:30:13","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:13"},"nodeType":"YulFunctionCall","src":"1222:20:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:13"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:13"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:13"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:13"},"nodeType":"YulFunctionCall","src":"1251:33:13"},"nodeType":"YulExpressionStatement","src":"1251:33:13"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:13","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:13","type":""}],"src":"1161:129:13"},{"body":{"nodeType":"YulBlock","src":"1363:241:13","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:13"},"nodeType":"YulFunctionCall","src":"1470:18:13"},"nodeType":"YulExpressionStatement","src":"1470:18:13"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:13"},"nodeType":"YulFunctionCall","src":"1437:30:13"},"nodeType":"YulIf","src":"1434:56:13"},{"nodeType":"YulAssignment","src":"1500:37:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:13"},"nodeType":"YulFunctionCall","src":"1508:29:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:13"}]},{"nodeType":"YulAssignment","src":"1574:23:13","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:13"},"nodeType":"YulFunctionCall","src":"1582:15:13"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:13"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:13","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:13","type":""}],"src":"1296:308:13"},{"body":{"nodeType":"YulBlock","src":"1659:258:13","statements":[{"nodeType":"YulVariableDeclaration","src":"1669:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"1678:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1673:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"1738:63:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1763:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"1768:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1759:3:13"},"nodeType":"YulFunctionCall","src":"1759:11:13"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1782:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"1787:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1778:3:13"},"nodeType":"YulFunctionCall","src":"1778:11:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1772:5:13"},"nodeType":"YulFunctionCall","src":"1772:18:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:13"},"nodeType":"YulFunctionCall","src":"1752:39:13"},"nodeType":"YulExpressionStatement","src":"1752:39:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1699:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"1702:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1696:2:13"},"nodeType":"YulFunctionCall","src":"1696:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1710:19:13","statements":[{"nodeType":"YulAssignment","src":"1712:15:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1721:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"1724:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1717:3:13"},"nodeType":"YulFunctionCall","src":"1717:10:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"1692:3:13","statements":[]},"src":"1688:113:13"},{"body":{"nodeType":"YulBlock","src":"1835:76:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1885:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1881:3:13"},"nodeType":"YulFunctionCall","src":"1881:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"1899:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1874:6:13"},"nodeType":"YulFunctionCall","src":"1874:27:13"},"nodeType":"YulExpressionStatement","src":"1874:27:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1816:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"1819:6:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1813:2:13"},"nodeType":"YulFunctionCall","src":"1813:13:13"},"nodeType":"YulIf","src":"1810:101:13"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1641:3:13","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1646:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"1651:6:13","type":""}],"src":"1610:307:13"},{"body":{"nodeType":"YulBlock","src":"2018:326:13","statements":[{"nodeType":"YulAssignment","src":"2028:75:13","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2095:6:13"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2053:41:13"},"nodeType":"YulFunctionCall","src":"2053:49:13"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2037:15:13"},"nodeType":"YulFunctionCall","src":"2037:66:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2028:5:13"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2119:5:13"},{"name":"length","nodeType":"YulIdentifier","src":"2126:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2112:6:13"},"nodeType":"YulFunctionCall","src":"2112:21:13"},"nodeType":"YulExpressionStatement","src":"2112:21:13"},{"nodeType":"YulVariableDeclaration","src":"2142:27:13","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2157:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"2164:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:13"},"nodeType":"YulFunctionCall","src":"2153:16:13"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2146:3:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"2207:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2209:77:13"},"nodeType":"YulFunctionCall","src":"2209:79:13"},"nodeType":"YulExpressionStatement","src":"2209:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2188:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"2193:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2184:3:13"},"nodeType":"YulFunctionCall","src":"2184:16:13"},{"name":"end","nodeType":"YulIdentifier","src":"2202:3:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2181:2:13"},"nodeType":"YulFunctionCall","src":"2181:25:13"},"nodeType":"YulIf","src":"2178:112:13"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2321:3:13"},{"name":"dst","nodeType":"YulIdentifier","src":"2326:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"2331:6:13"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2299:21:13"},"nodeType":"YulFunctionCall","src":"2299:39:13"},"nodeType":"YulExpressionStatement","src":"2299:39:13"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1991:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"1996:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2004:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2012:5:13","type":""}],"src":"1923:421:13"},{"body":{"nodeType":"YulBlock","src":"2437:282:13","statements":[{"body":{"nodeType":"YulBlock","src":"2486:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2488:77:13"},"nodeType":"YulFunctionCall","src":"2488:79:13"},"nodeType":"YulExpressionStatement","src":"2488:79:13"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2465:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2473:4:13","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:13"},"nodeType":"YulFunctionCall","src":"2461:17:13"},{"name":"end","nodeType":"YulIdentifier","src":"2480:3:13"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2457:3:13"},"nodeType":"YulFunctionCall","src":"2457:27:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2450:6:13"},"nodeType":"YulFunctionCall","src":"2450:35:13"},"nodeType":"YulIf","src":"2447:122:13"},{"nodeType":"YulVariableDeclaration","src":"2578:27:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2598:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2592:5:13"},"nodeType":"YulFunctionCall","src":"2592:13:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2582:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2614:99:13","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2686:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"2694:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:13"},"nodeType":"YulFunctionCall","src":"2682:17:13"},{"name":"length","nodeType":"YulIdentifier","src":"2701:6:13"},{"name":"end","nodeType":"YulIdentifier","src":"2709:3:13"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2623:58:13"},"nodeType":"YulFunctionCall","src":"2623:90:13"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2614:5:13"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2415:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2423:3:13","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2431:5:13","type":""}],"src":"2364:355:13"},{"body":{"nodeType":"YulBlock","src":"2770:81:13","statements":[{"nodeType":"YulAssignment","src":"2780:65:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2795:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"2802:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2791:3:13"},"nodeType":"YulFunctionCall","src":"2791:54:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2780:7:13"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2752:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2762:7:13","type":""}],"src":"2725:126:13"},{"body":{"nodeType":"YulBlock","src":"2902:51:13","statements":[{"nodeType":"YulAssignment","src":"2912:35:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2941:5:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"2923:17:13"},"nodeType":"YulFunctionCall","src":"2923:24:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2912:7:13"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2884:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2894:7:13","type":""}],"src":"2857:96:13"},{"body":{"nodeType":"YulBlock","src":"3002:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"3059:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3068:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3071:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3061:6:13"},"nodeType":"YulFunctionCall","src":"3061:12:13"},"nodeType":"YulExpressionStatement","src":"3061:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3025:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3050:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"3032:17:13"},"nodeType":"YulFunctionCall","src":"3032:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3022:2:13"},"nodeType":"YulFunctionCall","src":"3022:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3015:6:13"},"nodeType":"YulFunctionCall","src":"3015:43:13"},"nodeType":"YulIf","src":"3012:63:13"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2995:5:13","type":""}],"src":"2959:122:13"},{"body":{"nodeType":"YulBlock","src":"3150:80:13","statements":[{"nodeType":"YulAssignment","src":"3160:22:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3175:6:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3169:5:13"},"nodeType":"YulFunctionCall","src":"3169:13:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"3160:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3218:5:13"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3191:26:13"},"nodeType":"YulFunctionCall","src":"3191:33:13"},"nodeType":"YulExpressionStatement","src":"3191:33:13"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"3128:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"3136:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"3144:5:13","type":""}],"src":"3087:143:13"},{"body":{"nodeType":"YulBlock","src":"3367:878:13","statements":[{"body":{"nodeType":"YulBlock","src":"3413:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3415:77:13"},"nodeType":"YulFunctionCall","src":"3415:79:13"},"nodeType":"YulExpressionStatement","src":"3415:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3388:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"3397:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3384:3:13"},"nodeType":"YulFunctionCall","src":"3384:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"3409:2:13","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3380:3:13"},"nodeType":"YulFunctionCall","src":"3380:32:13"},"nodeType":"YulIf","src":"3377:119:13"},{"nodeType":"YulBlock","src":"3506:291:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3521:38:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3545:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3556:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3541:3:13"},"nodeType":"YulFunctionCall","src":"3541:17:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3535:5:13"},"nodeType":"YulFunctionCall","src":"3535:24:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3525:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3606:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3608:77:13"},"nodeType":"YulFunctionCall","src":"3608:79:13"},"nodeType":"YulExpressionStatement","src":"3608:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3578:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3586:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3575:2:13"},"nodeType":"YulFunctionCall","src":"3575:30:13"},"nodeType":"YulIf","src":"3572:117:13"},{"nodeType":"YulAssignment","src":"3703:84:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3759:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"3770:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3755:3:13"},"nodeType":"YulFunctionCall","src":"3755:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3779:7:13"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3713:41:13"},"nodeType":"YulFunctionCall","src":"3713:74:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3703:6:13"}]}]},{"nodeType":"YulBlock","src":"3807:292:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3822:39:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3846:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3857:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3842:3:13"},"nodeType":"YulFunctionCall","src":"3842:18:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3836:5:13"},"nodeType":"YulFunctionCall","src":"3836:25:13"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3826:6:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"3908:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3910:77:13"},"nodeType":"YulFunctionCall","src":"3910:79:13"},"nodeType":"YulExpressionStatement","src":"3910:79:13"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3880:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"3888:18:13","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3877:2:13"},"nodeType":"YulFunctionCall","src":"3877:30:13"},"nodeType":"YulIf","src":"3874:117:13"},{"nodeType":"YulAssignment","src":"4005:84:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4061:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4072:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4057:3:13"},"nodeType":"YulFunctionCall","src":"4057:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4081:7:13"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"4015:41:13"},"nodeType":"YulFunctionCall","src":"4015:74:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4005:6:13"}]}]},{"nodeType":"YulBlock","src":"4109:129:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4124:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"4138:2:13","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4128:6:13","type":""}]},{"nodeType":"YulAssignment","src":"4154:74:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4200:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4211:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4196:3:13"},"nodeType":"YulFunctionCall","src":"4196:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4220:7:13"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"4164:31:13"},"nodeType":"YulFunctionCall","src":"4164:64:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4154:6:13"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3321:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3332:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3344:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3352:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3360:6:13","type":""}],"src":"3236:1009:13"},{"body":{"nodeType":"YulBlock","src":"4279:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4296:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4299:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4289:6:13"},"nodeType":"YulFunctionCall","src":"4289:88:13"},"nodeType":"YulExpressionStatement","src":"4289:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4393:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4396:4:13","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4386:6:13"},"nodeType":"YulFunctionCall","src":"4386:15:13"},"nodeType":"YulExpressionStatement","src":"4386:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4417:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4420:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4410:6:13"},"nodeType":"YulFunctionCall","src":"4410:15:13"},"nodeType":"YulExpressionStatement","src":"4410:15:13"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"4251:180:13"},{"body":{"nodeType":"YulBlock","src":"4488:269:13","statements":[{"nodeType":"YulAssignment","src":"4498:22:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4512:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"4518:1:13","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4508:3:13"},"nodeType":"YulFunctionCall","src":"4508:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4498:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"4529:38:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"4559:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"4565:1:13","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4555:3:13"},"nodeType":"YulFunctionCall","src":"4555:12:13"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"4533:18:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"4606:51:13","statements":[{"nodeType":"YulAssignment","src":"4620:27:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4634:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4642:4:13","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4630:3:13"},"nodeType":"YulFunctionCall","src":"4630:17:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"4620:6:13"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4586:18:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4579:6:13"},"nodeType":"YulFunctionCall","src":"4579:26:13"},"nodeType":"YulIf","src":"4576:81:13"},{"body":{"nodeType":"YulBlock","src":"4709:42:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4723:16:13"},"nodeType":"YulFunctionCall","src":"4723:18:13"},"nodeType":"YulExpressionStatement","src":"4723:18:13"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4673:18:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4696:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"4704:2:13","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4693:2:13"},"nodeType":"YulFunctionCall","src":"4693:14:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4670:2:13"},"nodeType":"YulFunctionCall","src":"4670:38:13"},"nodeType":"YulIf","src":"4667:84:13"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"4472:4:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"4481:6:13","type":""}],"src":"4437:320:13"},{"body":{"nodeType":"YulBlock","src":"4876:34:13","statements":[{"nodeType":"YulAssignment","src":"4886:18:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"4901:3:13"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"4886:11:13"}]}]},"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"4848:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"4853:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"4864:11:13","type":""}],"src":"4763:147:13"},{"body":{"nodeType":"YulBlock","src":"4973:87:13","statements":[{"nodeType":"YulAssignment","src":"4983:11:13","value":{"name":"ptr","nodeType":"YulIdentifier","src":"4991:3:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"4983:4:13"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5011:1:13","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"5014:3:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5004:6:13"},"nodeType":"YulFunctionCall","src":"5004:14:13"},"nodeType":"YulExpressionStatement","src":"5004:14:13"},{"nodeType":"YulAssignment","src":"5027:26:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5045:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5048:4:13","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"5035:9:13"},"nodeType":"YulFunctionCall","src":"5035:18:13"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"5027:4:13"}]}]},"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"4960:3:13","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"4968:4:13","type":""}],"src":"4916:144:13"},{"body":{"nodeType":"YulBlock","src":"5197:740:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5207:29:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5230:5:13"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5224:5:13"},"nodeType":"YulFunctionCall","src":"5224:12:13"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"5211:9:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5245:50:13","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"5285:9:13"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"5259:25:13"},"nodeType":"YulFunctionCall","src":"5259:36:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5249:6:13","type":""}]},{"nodeType":"YulAssignment","src":"5304:95:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5387:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"5392:6:13"}],"functionName":{"name":"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"5311:75:13"},"nodeType":"YulFunctionCall","src":"5311:88:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"5304:3:13"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"5448:130:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5501:3:13"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"5510:9:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5525:4:13","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"5521:3:13"},"nodeType":"YulFunctionCall","src":"5521:9:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5506:3:13"},"nodeType":"YulFunctionCall","src":"5506:25:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5494:6:13"},"nodeType":"YulFunctionCall","src":"5494:38:13"},"nodeType":"YulExpressionStatement","src":"5494:38:13"},{"nodeType":"YulAssignment","src":"5545:23:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5556:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"5561:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5552:3:13"},"nodeType":"YulFunctionCall","src":"5552:16:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5545:3:13"}]}]},"nodeType":"YulCase","src":"5441:137:13","value":{"kind":"number","nodeType":"YulLiteral","src":"5446:1:13","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"5594:337:13","statements":[{"nodeType":"YulVariableDeclaration","src":"5639:56:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5689:5:13"}],"functionName":{"name":"array_dataslot_t_bytes_storage_ptr","nodeType":"YulIdentifier","src":"5654:34:13"},"nodeType":"YulFunctionCall","src":"5654:41:13"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"5643:7:13","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5708:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"5717:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"5712:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"5775:110:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5804:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"5809:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5800:3:13"},"nodeType":"YulFunctionCall","src":"5800:11:13"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"5819:7:13"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"5813:5:13"},"nodeType":"YulFunctionCall","src":"5813:14:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5793:6:13"},"nodeType":"YulFunctionCall","src":"5793:35:13"},"nodeType":"YulExpressionStatement","src":"5793:35:13"},{"nodeType":"YulAssignment","src":"5845:26:13","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"5860:7:13"},{"kind":"number","nodeType":"YulLiteral","src":"5869:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5856:3:13"},"nodeType":"YulFunctionCall","src":"5856:15:13"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"5845:7:13"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5742:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"5745:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"5739:2:13"},"nodeType":"YulFunctionCall","src":"5739:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"5753:21:13","statements":[{"nodeType":"YulAssignment","src":"5755:17:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"5764:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"5767:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5760:3:13"},"nodeType":"YulFunctionCall","src":"5760:12:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"5755:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"5735:3:13","statements":[]},"src":"5731:154:13"},{"nodeType":"YulAssignment","src":"5898:23:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5909:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"5914:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5905:3:13"},"nodeType":"YulFunctionCall","src":"5905:16:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"5898:3:13"}]}]},"nodeType":"YulCase","src":"5587:344:13","value":{"kind":"number","nodeType":"YulLiteral","src":"5592:1:13","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"5419:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5430:1:13","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5415:3:13"},"nodeType":"YulFunctionCall","src":"5415:17:13"},"nodeType":"YulSwitch","src":"5408:523:13"}]},"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5178:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5185:3:13","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"5193:3:13","type":""}],"src":"5088:849:13"},{"body":{"nodeType":"YulBlock","src":"6078:138:13","statements":[{"nodeType":"YulAssignment","src":"6089:101:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6177:6:13"},{"name":"pos","nodeType":"YulIdentifier","src":"6186:3:13"}],"functionName":{"name":"abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"6096:80:13"},"nodeType":"YulFunctionCall","src":"6096:94:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"6089:3:13"}]},{"nodeType":"YulAssignment","src":"6200:10:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"6207:3:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6200:3:13"}]}]},"name":"abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"6057:3:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6063:6:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6074:3:13","type":""}],"src":"5943:273:13"},{"body":{"nodeType":"YulBlock","src":"6267:32:13","statements":[{"nodeType":"YulAssignment","src":"6277:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"6288:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6277:7:13"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6249:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6259:7:13","type":""}],"src":"6222:77:13"},{"body":{"nodeType":"YulBlock","src":"6370:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6387:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6410:5:13"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"6392:17:13"},"nodeType":"YulFunctionCall","src":"6392:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6380:6:13"},"nodeType":"YulFunctionCall","src":"6380:37:13"},"nodeType":"YulExpressionStatement","src":"6380:37:13"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6358:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6365:3:13","type":""}],"src":"6305:118:13"},{"body":{"nodeType":"YulBlock","src":"6474:32:13","statements":[{"nodeType":"YulAssignment","src":"6484:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"6495:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"6484:7:13"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6456:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"6466:7:13","type":""}],"src":"6429:77:13"},{"body":{"nodeType":"YulBlock","src":"6577:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6594:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6617:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6599:17:13"},"nodeType":"YulFunctionCall","src":"6599:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6587:6:13"},"nodeType":"YulFunctionCall","src":"6587:37:13"},"nodeType":"YulExpressionStatement","src":"6587:37:13"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6565:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6572:3:13","type":""}],"src":"6512:118:13"},{"body":{"nodeType":"YulBlock","src":"6701:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6718:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6741:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6723:17:13"},"nodeType":"YulFunctionCall","src":"6723:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6711:6:13"},"nodeType":"YulFunctionCall","src":"6711:37:13"},"nodeType":"YulExpressionStatement","src":"6711:37:13"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6689:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6696:3:13","type":""}],"src":"6636:118:13"},{"body":{"nodeType":"YulBlock","src":"6970:454:13","statements":[{"nodeType":"YulAssignment","src":"6980:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6992:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7003:3:13","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6988:3:13"},"nodeType":"YulFunctionCall","src":"6988:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6980:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7061:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7074:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7085:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7070:3:13"},"nodeType":"YulFunctionCall","src":"7070:17:13"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"7017:43:13"},"nodeType":"YulFunctionCall","src":"7017:71:13"},"nodeType":"YulExpressionStatement","src":"7017:71:13"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7142:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7155:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7166:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7151:3:13"},"nodeType":"YulFunctionCall","src":"7151:18:13"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"7098:43:13"},"nodeType":"YulFunctionCall","src":"7098:72:13"},"nodeType":"YulExpressionStatement","src":"7098:72:13"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7224:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7237:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7248:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7233:3:13"},"nodeType":"YulFunctionCall","src":"7233:18:13"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"7180:43:13"},"nodeType":"YulFunctionCall","src":"7180:72:13"},"nodeType":"YulExpressionStatement","src":"7180:72:13"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"7306:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7319:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7330:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7315:3:13"},"nodeType":"YulFunctionCall","src":"7315:18:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"7262:43:13"},"nodeType":"YulFunctionCall","src":"7262:72:13"},"nodeType":"YulExpressionStatement","src":"7262:72:13"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"7388:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7401:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"7412:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7397:3:13"},"nodeType":"YulFunctionCall","src":"7397:19:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7344:43:13"},"nodeType":"YulFunctionCall","src":"7344:73:13"},"nodeType":"YulExpressionStatement","src":"7344:73:13"}]},"name":"abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6910:9:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6922:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6930:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6938:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6946:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6954:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6965:4:13","type":""}],"src":"6760:664:13"},{"body":{"nodeType":"YulBlock","src":"7526:73:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7543:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"7548:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7536:6:13"},"nodeType":"YulFunctionCall","src":"7536:19:13"},"nodeType":"YulExpressionStatement","src":"7536:19:13"},{"nodeType":"YulAssignment","src":"7564:29:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7583:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"7588:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7579:3:13"},"nodeType":"YulFunctionCall","src":"7579:14:13"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"7564:11:13"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7498:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"7503:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"7514:11:13","type":""}],"src":"7430:169:13"},{"body":{"nodeType":"YulBlock","src":"7711:60:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7733:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"7741:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7729:3:13"},"nodeType":"YulFunctionCall","src":"7729:14:13"},{"hexValue":"53656e646572206e6f74206f776e6572","kind":"string","nodeType":"YulLiteral","src":"7745:18:13","type":"","value":"Sender not owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7722:6:13"},"nodeType":"YulFunctionCall","src":"7722:42:13"},"nodeType":"YulExpressionStatement","src":"7722:42:13"}]},"name":"store_literal_in_memory_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7703:6:13","type":""}],"src":"7605:166:13"},{"body":{"nodeType":"YulBlock","src":"7923:220:13","statements":[{"nodeType":"YulAssignment","src":"7933:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7999:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"8004:2:13","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7940:58:13"},"nodeType":"YulFunctionCall","src":"7940:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7933:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8105:3:13"}],"functionName":{"name":"store_literal_in_memory_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3","nodeType":"YulIdentifier","src":"8016:88:13"},"nodeType":"YulFunctionCall","src":"8016:93:13"},"nodeType":"YulExpressionStatement","src":"8016:93:13"},{"nodeType":"YulAssignment","src":"8118:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8129:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"8134:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8125:3:13"},"nodeType":"YulFunctionCall","src":"8125:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8118:3:13"}]}]},"name":"abi_encode_t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7911:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7919:3:13","type":""}],"src":"7777:366:13"},{"body":{"nodeType":"YulBlock","src":"8320:248:13","statements":[{"nodeType":"YulAssignment","src":"8330:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8342:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8353:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8338:3:13"},"nodeType":"YulFunctionCall","src":"8338:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8330:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8377:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"8388:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8373:3:13"},"nodeType":"YulFunctionCall","src":"8373:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8396:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"8402:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8392:3:13"},"nodeType":"YulFunctionCall","src":"8392:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8366:6:13"},"nodeType":"YulFunctionCall","src":"8366:47:13"},"nodeType":"YulExpressionStatement","src":"8366:47:13"},{"nodeType":"YulAssignment","src":"8422:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8556:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8430:124:13"},"nodeType":"YulFunctionCall","src":"8430:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8422:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8300:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8315:4:13","type":""}],"src":"8149:419:13"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_address_fromMemory(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function array_dataslot_t_bytes_storage_ptr(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    // bytes -> bytes\n    function abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, length)\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_bytes_storage_ptr(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, length)\n        }\n    }\n\n    function abi_encode_tuple_packed_t_bytes_storage_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_storage_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__to_t_bytes32_t_bytes32_t_bytes32_t_uint256_t_address__fromStack_reversed(headStart , value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 160)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender not owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040516200170b3803806200170b8339810160408190526200003491620003fc565b8282828282816000908051906020019062000051929190620001cf565b50805162000067906001906020840190620001cf565b506002805460ff1916601217905560036020526000197f3617319a054d772f909f7c479a2cebe5066e836a939412e32403c99029b92eff81905530600090815260409020557f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000de919062000548565b60408051918290038220828201825260018352603160f81b60209384015290516200013193927fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc691469130910162000570565b60408051601f1981840301815291905280516020909101206006555050600780546001600160a01b031916331790556200016b8162000177565b505050505050620005f5565b6007546001600160a01b03163314620001ad5760405162461bcd60e51b8152600401620001a490620005c6565b60405180910390fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b828054620001dd90620004a1565b90600052602060002090601f0160209004810192826200020157600085556200024c565b82601f106200021c57805160ff19168380011785556200024c565b828001600101855582156200024c579182015b828111156200024c5782518255916020019190600101906200022f565b506200025a9291506200025e565b5090565b5b808211156200025a57600081556001016200025f565b601f01601f191690565b634e487b7160e01b600052604160045260246000fd5b620002a08262000275565b81018181106001600160401b0382111715620002c057620002c06200027f565b6040525050565b6000620002d360405190565b9050620002e1828262000295565b919050565b60006001600160401b038211156200030257620003026200027f565b6200030d8262000275565b60200192915050565b60005b838110156200033357818101518382015260200162000319565b8381111562000343576000848401525b50505050565b6000620003606200035a84620002e6565b620002c7565b9050828152602081018484840111156200037d576200037d600080fd5b6200038a84828562000316565b509392505050565b600082601f830112620003a857620003a8600080fd5b8151620003ba84826020860162000349565b949350505050565b60006001600160a01b0382165b92915050565b620003e081620003c2565b8114620003ec57600080fd5b50565b8051620003cf81620003d5565b600080600060608486031215620004165762000416600080fd5b83516001600160401b03811115620004315762000431600080fd5b6200043f8682870162000392565b93505060208401516001600160401b03811115620004605762000460600080fd5b6200046e8682870162000392565b92505060406200048186828701620003ef565b9150509250925092565b634e487b7160e01b600052602260045260246000fd5b600281046001821680620004b657607f821691505b60208210811415620004cc57620004cc6200048b565b50919050565b60008154620004e181620004a1565b600182168015620004fb57600181146200050d576200053f565b60ff198316865281860193506200053f565b60008581526020902060005b83811015620005375781548882015260019091019060200162000519565b838801955050505b50505092915050565b6000620005568284620004d2565b9392505050565b805b82525050565b6200055f81620003c2565b60a081016200058082886200055d565b6200058f60208301876200055d565b6200059e60408301866200055d565b620005ad60608301856200055d565b620005bc608083018462000565565b9695505050505050565b60208082528101620003cf81601081526f29b2b73232b9103737ba1037bbb732b960811b602082015260400190565b61110680620006056000396000f3fe608060405234801561001057600080fd5b506004361061011d5760003560e01c806306fdde0314610122578063095ea7b31461014057806313af40351461016057806318160ddd1461017557806323b872dd1461018b57806327c97fa51461019e57806330adf81f146101b1578063313ce567146101c65780633644e515146101e057806340c10f19146101e957806370a08231146101fc5780637ecebe001461021c5780638da5cb5b1461023c57806395d89b411461025c5780639dc29fac14610264578063a9059cbb14610277578063b6a5d7de1461028a578063b91816111461029d578063d505accf146102c0578063da46098c146102d3578063dd62ed3e1461030d578063e30443bc14610338578063fe9fbb8014610362575b600080fd5b61012a61038e565b6040516101379190610aff565b60405180910390f35b61015361014e366004610b51565b61041c565b6040516101379190610b98565b61017361016e366004610ba6565b610475565b005b61017e60095481565b6040516101379190610bd5565b610153610199366004610be3565b6104ca565b6101736101ac366004610ba6565b61061e565b61017e60008051602061109183398151915281565b6002546101d39060ff1681565b6040516101379190610c3c565b61017e60065481565b6101736101f7366004610b51565b610669565b61017e61020a366004610ba6565b60036020526000908152604090205481565b61017e61022a366004610ba6565b60056020526000908152604090205481565b60075461024f906001600160a01b031681565b6040516101379190610c53565b61012a6106a1565b610173610272366004610b51565b6106ae565b610153610285366004610b51565b6106e2565b610173610298366004610ba6565b6106f6565b6101536102ab366004610ba6565b60086020526000908152604090205460ff1681565b6101736102ce366004610c75565b61074b565b6101736102e1366004610be3565b6001600160a01b0392831660009081526004602090815260408083209490951682529290925291902055565b61017e61031b366004610d14565b600460209081526000928352604080842090915290825290205481565b610173610346366004610b51565b6001600160a01b03909116600090815260036020526040902055565b610153610370366004610ba6565b6001600160a01b031660009081526008602052604090205460ff1690565b6000805461039b90610d5d565b80601f01602080910402602001604051908101604052809291908181526020018280546103c790610d5d565b80156104145780601f106103e957610100808354040283529160200191610414565b820191906000526020600020905b8154815290600101906020018083116103f757829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290916000805160206110b183398151915290610463908690610bd5565b60405180910390a35060015b92915050565b6007546001600160a01b031633146104a85760405162461bcd60e51b815260040161049f90610db4565b60405180910390fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316600090815260036020526040812054828110156105035760405162461bcd60e51b815260040161049f90610df6565b6001600160a01b0385163314610591576001600160a01b0385166000908152600460209081526040808320338452909152902054600019811461058f57838110156105605760405162461bcd60e51b815260040161049f90610e3a565b61056a8482610e60565b6001600160a01b03871660009081526004602090815260408083203384529091529020555b505b61059b8382610e60565b6001600160a01b0380871660009081526003602052604080822093909355908616815220546105cb908490610e77565b6001600160a01b0380861660008181526003602052604090819020939093559151908716906000805160206110718339815191529061060b908790610bd5565b60405180910390a3506001949350505050565b6007546001600160a01b031633146106485760405162461bcd60e51b815260040161049f90610db4565b6001600160a01b03166000908152600860205260409020805460ff19169055565b6007546001600160a01b031633146106935760405162461bcd60e51b815260040161049f90610db4565b61069d828261095b565b5050565b6001805461039b90610d5d565b6007546001600160a01b031633146106d85760405162461bcd60e51b815260040161049f90610db4565b61069d82826109ea565b60006106ef3384846104ca565b9392505050565b6007546001600160a01b031633146107205760405162461bcd60e51b815260040161049f90610db4565b610748816001600160a01b03166000908152600860205260409020805460ff19166001179055565b50565b6006546001600160a01b038816600090815260056020908152604080832054905192939261079292600080516020611091833981519152928d928d928d92918d9101610e8f565b604051602081830303815290604052805190602001206040516020016107b9929190610ee9565b60408051601f19818403018152919052805160209091012090506001600160a01b0388166107f95760405162461bcd60e51b815260040161049f90610f49565b6001818585856040516000815260200160405260405161081c9493929190610f59565b6020604051602081039080840390855afa15801561083e573d6000803e3d6000fd5b505050602060405103516001600160a01b0316886001600160a01b0316146108785760405162461bcd60e51b815260040161049f90610fc3565b8415806108855750844211155b6108a15760405162461bcd60e51b815260040161049f90610fff565b6fa2a8918ca85bafe22016d0b997e4df60600160ff1b038211156108d75760405162461bcd60e51b815260040161049f9061100f565b6001600160a01b03881660009081526005602052604081208054916108fb83611055565b90915550506001600160a01b038089166000818152600460209081526040808320948c168084529490915290819020899055516000805160206110b183398151915290610949908a90610bd5565b60405180910390a35050505050505050565b6001600160a01b03821660009081526003602052604090205461097f908290610e77565b6001600160a01b038316600090815260036020526040812091909155600980548392906109ad908490610e77565b90915550506040516001600160a01b03831690600090600080516020611071833981519152906109de908590610bd5565b60405180910390a35050565b6001600160a01b03821660009081526003602052604090205481811015610a29576001600160a01b038316600090815260036020526040812055610a4d565b610a338282610e60565b6001600160a01b0384166000908152600360205260409020555b8160096000828254610a5f9190610e60565b90915550506040516000906001600160a01b0385169060008051602061107183398151915290610a90908690610bd5565b60405180910390a3505050565b60005b83811015610ab8578181015183820152602001610aa0565b83811115610ac7576000848401525b50505050565b6000610ad7825190565b808452602084019350610aee818560208601610a9d565b601f01601f19169290920192915050565b602080825281016106ef8184610acd565b60006001600160a01b03821661046f565b610b2a81610b10565b811461074857600080fd5b803561046f81610b21565b80610b2a565b803561046f81610b40565b60008060408385031215610b6757610b67600080fd5b6000610b738585610b35565b9250506020610b8485828601610b46565b9150509250929050565b8015155b82525050565b6020810161046f8284610b8e565b600060208284031215610bbb57610bbb600080fd5b6000610bc78484610b35565b949350505050565b80610b92565b6020810161046f8284610bcf565b600080600060608486031215610bfb57610bfb600080fd5b6000610c078686610b35565b9350506020610c1886828701610b35565b9250506040610c2986828701610b46565b9150509250925092565b60ff8116610b92565b6020810161046f8284610c33565b610b9281610b10565b6020810161046f8284610c4a565b60ff8116610b2a565b803561046f81610c61565b600080600080600080600060e0888a031215610c9357610c93600080fd5b6000610c9f8a8a610b35565b9750506020610cb08a828b01610b35565b9650506040610cc18a828b01610b46565b9550506060610cd28a828b01610b46565b9450506080610ce38a828b01610c6a565b93505060a0610cf48a828b01610b46565b92505060c0610d058a828b01610b46565b91505092959891949750929550565b60008060408385031215610d2a57610d2a600080fd5b6000610d368585610b35565b9250506020610b8485828601610b35565b634e487b7160e01b600052602260045260246000fd5b600281046001821680610d7157607f821691505b60208210811415610d8457610d84610d47565b50919050565b601081526000602082016f29b2b73232b9103737ba1037bbb732b960811b815291505b5060200190565b6020808252810161046f81610d8a565b601b81526000602082017a45524332303a20696e73756666696369656e742d62616c616e636560281b81529150610dad565b6020808252810161046f81610dc4565b601d81526000602082017f45524332303a20696e73756666696369656e742d616c6c6f77616e636500000081529150610dad565b6020808252810161046f81610e06565b634e487b7160e01b600052601160045260246000fd5b600082821015610e7257610e72610e4a565b500390565b60008219821115610e8a57610e8a610e4a565b500190565b60c08101610e9d8289610bcf565b610eaa6020830188610c4a565b610eb76040830187610c4a565b610ec46060830186610bcf565b610ed16080830185610bcf565b610ede60a0830184610bcf565b979650505050505050565b61190160f01b81526002016000610f008285610bcf565b602082019150610f108284610bcf565b5060200192915050565b6018815260006020820177045524332303a20696e76616c69642d616464726573732d360441b81529150610dad565b6020808252810161046f81610f1a565b60808101610f678287610bcf565b610f746020830186610c33565b610f816040830185610bcf565b610f8e6060830184610bcf565b95945050505050565b6015815260006020820174115490cc8c0e881a5b9d985b1a590b5c195c9b5a5d605a1b81529150610dad565b6020808252810161046f81610f97565b6015815260006020820174115490cc8c0e881c195c9b5a5d0b595e1c1a5c9959605a1b81529150610dad565b6020808252810161046f81610fd3565b6020808252810161046f81602281527f45524332303a20696e76616c6964207369676e6174757265202773272076616c602082015261756560f01b604082015260600190565b600060001982141561106957611069610e4a565b506001019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a2646970667358221220394462f28ac639d0355bdfbdb944f25ab55a5dd9b30f8d11d8caf3e0fd23b9ba64736f6c634300080a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x170B CODESIZE SUB DUP1 PUSH3 0x170B DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x3FC JUMP JUMPDEST DUP3 DUP3 DUP3 DUP3 DUP3 DUP2 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x51 SWAP3 SWAP2 SWAP1 PUSH3 0x1CF JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x67 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x1CF JUMP JUMPDEST POP PUSH1 0x2 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 NOT PUSH32 0x3617319A054D772F909F7C479A2CEBE5066E836A939412E32403C99029B92EFF DUP2 SWAP1 SSTORE ADDRESS PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE PUSH32 0x8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F PUSH1 0x0 PUSH1 0x40 MLOAD PUSH3 0xDE SWAP2 SWAP1 PUSH3 0x548 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0x1 DUP4 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE SWAP1 MLOAD PUSH3 0x131 SWAP4 SWAP3 PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 SWAP2 CHAINID SWAP2 ADDRESS SWAP2 ADD PUSH3 0x570 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 PUSH1 0x6 SSTORE POP POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE PUSH3 0x16B DUP2 PUSH3 0x177 JUMP JUMPDEST POP POP POP POP POP POP PUSH3 0x5F5 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH3 0x1AD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x1A4 SWAP1 PUSH3 0x5C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1DD SWAP1 PUSH3 0x4A1 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x201 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x24C JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x21C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x24C JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x24C JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x24C JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x22F JUMP JUMPDEST POP PUSH3 0x25A SWAP3 SWAP2 POP PUSH3 0x25E JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x25A JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x25F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x2A0 DUP3 PUSH3 0x275 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR ISZERO PUSH3 0x2C0 JUMPI PUSH3 0x2C0 PUSH3 0x27F JUMP JUMPDEST PUSH1 0x40 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x2D3 PUSH1 0x40 MLOAD SWAP1 JUMP JUMPDEST SWAP1 POP PUSH3 0x2E1 DUP3 DUP3 PUSH3 0x295 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT ISZERO PUSH3 0x302 JUMPI PUSH3 0x302 PUSH3 0x27F JUMP JUMPDEST PUSH3 0x30D DUP3 PUSH3 0x275 JUMP JUMPDEST PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x333 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x319 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x343 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x360 PUSH3 0x35A DUP5 PUSH3 0x2E6 JUMP JUMPDEST PUSH3 0x2C7 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x37D JUMPI PUSH3 0x37D PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x38A DUP5 DUP3 DUP6 PUSH3 0x316 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x3A8 JUMPI PUSH3 0x3A8 PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH3 0x3BA DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x349 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x3E0 DUP2 PUSH3 0x3C2 JUMP JUMPDEST DUP2 EQ PUSH3 0x3EC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST DUP1 MLOAD PUSH3 0x3CF DUP2 PUSH3 0x3D5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH3 0x416 JUMPI PUSH3 0x416 PUSH1 0x0 DUP1 REVERT JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x431 JUMPI PUSH3 0x431 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x43F DUP7 DUP3 DUP8 ADD PUSH3 0x392 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 DUP5 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH3 0x460 JUMPI PUSH3 0x460 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x46E DUP7 DUP3 DUP8 ADD PUSH3 0x392 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH3 0x481 DUP7 DUP3 DUP8 ADD PUSH3 0x3EF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x4B6 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x4CC JUMPI PUSH3 0x4CC PUSH3 0x48B JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH3 0x4E1 DUP2 PUSH3 0x4A1 JUMP JUMPDEST PUSH1 0x1 DUP3 AND DUP1 ISZERO PUSH3 0x4FB JUMPI PUSH1 0x1 DUP2 EQ PUSH3 0x50D JUMPI PUSH3 0x53F JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 DUP7 ADD SWAP4 POP PUSH3 0x53F JUMP JUMPDEST PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 SWAP1 KECCAK256 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x537 JUMPI DUP2 SLOAD DUP9 DUP3 ADD MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH1 0x20 ADD PUSH3 0x519 JUMP JUMPDEST DUP4 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x556 DUP3 DUP5 PUSH3 0x4D2 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH3 0x55F DUP2 PUSH3 0x3C2 JUMP JUMPDEST PUSH1 0xA0 DUP2 ADD PUSH3 0x580 DUP3 DUP9 PUSH3 0x55D JUMP JUMPDEST PUSH3 0x58F PUSH1 0x20 DUP4 ADD DUP8 PUSH3 0x55D JUMP JUMPDEST PUSH3 0x59E PUSH1 0x40 DUP4 ADD DUP7 PUSH3 0x55D JUMP JUMPDEST PUSH3 0x5AD PUSH1 0x60 DUP4 ADD DUP6 PUSH3 0x55D JUMP JUMPDEST PUSH3 0x5BC PUSH1 0x80 DUP4 ADD DUP5 PUSH3 0x565 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH3 0x3CF DUP2 PUSH1 0x10 DUP2 MSTORE PUSH16 0x29B2B73232B9103737BA1037BBB732B9 PUSH1 0x81 SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST PUSH2 0x1106 DUP1 PUSH3 0x605 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x27C97FA5 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xB6A5D7DE EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xB9181611 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xDA46098C EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xE30443BC EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xFE9FBB80 EQ PUSH2 0x362 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH2 0x38E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0xB51 JUMP JUMPDEST PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xB98 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x475 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17E PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0xBE3 JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0x173 PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST PUSH2 0x17E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1091 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1D3 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST PUSH2 0x17E PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xB51 JUMP JUMPDEST PUSH2 0x669 JUMP JUMPDEST PUSH2 0x17E PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x17E PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x24F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x12A PUSH2 0x6A1 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0xB51 JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST PUSH2 0x153 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0xB51 JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0xC75 JUMP JUMPDEST PUSH2 0x74B JUMP JUMPDEST PUSH2 0x173 PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0x17E PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x346 CALLDATASIZE PUSH1 0x4 PUSH2 0xB51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0x153 PUSH2 0x370 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x39B SWAP1 PUSH2 0xD5D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C7 SWAP1 PUSH2 0xD5D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x414 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x414 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x10B1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x463 SWAP1 DUP7 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP1 PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x503 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP1 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ PUSH2 0x591 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x58F JUMPI DUP4 DUP2 LT ISZERO PUSH2 0x560 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP1 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x56A DUP5 DUP3 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST POP JUMPDEST PUSH2 0x59B DUP4 DUP3 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP7 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x5CB SWAP1 DUP5 SWAP1 PUSH2 0xE77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP8 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1071 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x60B SWAP1 DUP8 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP1 PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x693 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP1 PUSH2 0xDB4 JUMP JUMPDEST PUSH2 0x69D DUP3 DUP3 PUSH2 0x95B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x39B SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP1 PUSH2 0xDB4 JUMP JUMPDEST PUSH2 0x69D DUP3 DUP3 PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6EF CALLER DUP5 DUP5 PUSH2 0x4CA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x720 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP1 PUSH2 0xDB4 JUMP JUMPDEST PUSH2 0x748 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH2 0x792 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1091 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP14 SWAP3 DUP14 SWAP3 DUP14 SWAP3 SWAP2 DUP14 SWAP2 ADD PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7B9 SWAP3 SWAP2 SWAP1 PUSH2 0xEE9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x7F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP1 PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x81C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x83E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x878 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP1 PUSH2 0xFC3 JUMP JUMPDEST DUP5 ISZERO DUP1 PUSH2 0x885 JUMPI POP DUP5 TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x8A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH16 0xA2A8918CA85BAFE22016D0B997E4DF60 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 GT ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x8FB DUP4 PUSH2 0x1055 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP13 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP10 SWAP1 SSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x10B1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x949 SWAP1 DUP11 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x97F SWAP1 DUP3 SWAP1 PUSH2 0xE77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x9AD SWAP1 DUP5 SWAP1 PUSH2 0xE77 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1071 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x9DE SWAP1 DUP6 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA29 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0xA4D JUMP JUMPDEST PUSH2 0xA33 DUP3 DUP3 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA5F SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1071 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xA90 SWAP1 DUP7 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAA0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAC7 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAD7 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH2 0xAEE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x6EF DUP2 DUP5 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x46F JUMP JUMPDEST PUSH2 0xB2A DUP2 PUSH2 0xB10 JUMP JUMPDEST DUP2 EQ PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x46F DUP2 PUSH2 0xB21 JUMP JUMPDEST DUP1 PUSH2 0xB2A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x46F DUP2 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB67 JUMPI PUSH2 0xB67 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB73 DUP6 DUP6 PUSH2 0xB35 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB84 DUP6 DUP3 DUP7 ADD PUSH2 0xB46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x46F DUP3 DUP5 PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBBB JUMPI PUSH2 0xBBB PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBC7 DUP5 DUP5 PUSH2 0xB35 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x46F DUP3 DUP5 PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBFB JUMPI PUSH2 0xBFB PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC07 DUP7 DUP7 PUSH2 0xB35 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC18 DUP7 DUP3 DUP8 ADD PUSH2 0xB35 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC29 DUP7 DUP3 DUP8 ADD PUSH2 0xB46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x46F DUP3 DUP5 PUSH2 0xC33 JUMP JUMPDEST PUSH2 0xB92 DUP2 PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x46F DUP3 DUP5 PUSH2 0xC4A JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH2 0xB2A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x46F DUP2 PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xC93 JUMPI PUSH2 0xC93 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC9F DUP11 DUP11 PUSH2 0xB35 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0xCB0 DUP11 DUP3 DUP12 ADD PUSH2 0xB35 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0xCC1 DUP11 DUP3 DUP12 ADD PUSH2 0xB46 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0xCD2 DUP11 DUP3 DUP12 ADD PUSH2 0xB46 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0xCE3 DUP11 DUP3 DUP12 ADD PUSH2 0xC6A JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0xCF4 DUP11 DUP3 DUP12 ADD PUSH2 0xB46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0xD05 DUP11 DUP3 DUP12 ADD PUSH2 0xB46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD2A JUMPI PUSH2 0xD2A PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD36 DUP6 DUP6 PUSH2 0xB35 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB84 DUP6 DUP3 DUP7 ADD PUSH2 0xB35 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD71 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xD84 JUMPI PUSH2 0xD84 PUSH2 0xD47 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x10 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH16 0x29B2B73232B9103737BA1037BBB732B9 PUSH1 0x81 SHL DUP2 MSTORE SWAP2 POP JUMPDEST POP PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x46F DUP2 PUSH2 0xD8A JUMP JUMPDEST PUSH1 0x1B DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH27 0x45524332303A20696E73756666696369656E742D62616C616E6365 PUSH1 0x28 SHL DUP2 MSTORE SWAP2 POP PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x46F DUP2 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x1D DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH32 0x45524332303A20696E73756666696369656E742D616C6C6F77616E6365000000 DUP2 MSTORE SWAP2 POP PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x46F DUP2 PUSH2 0xE06 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xE72 JUMPI PUSH2 0xE72 PUSH2 0xE4A JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xE8A JUMPI PUSH2 0xE8A PUSH2 0xE4A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD PUSH2 0xE9D DUP3 DUP10 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0xEAA PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0xEB7 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0xEC4 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0xED1 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0xEDE PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xBCF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0xF00 DUP3 DUP6 PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xF10 DUP3 DUP5 PUSH2 0xBCF JUMP JUMPDEST POP PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x18 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH24 0x45524332303A20696E76616C69642D616464726573732D3 PUSH1 0x44 SHL DUP2 MSTORE SWAP2 POP PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x46F DUP2 PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0xF67 DUP3 DUP8 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0xF74 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xC33 JUMP JUMPDEST PUSH2 0xF81 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0xF8E PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xBCF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x15 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH21 0x115490CC8C0E881A5B9D985B1A590B5C195C9B5A5D PUSH1 0x5A SHL DUP2 MSTORE SWAP2 POP PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x46F DUP2 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x15 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH21 0x115490CC8C0E881C195C9B5A5D0B595E1C1A5C9959 PUSH1 0x5A SHL DUP2 MSTORE SWAP2 POP PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x46F DUP2 PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x46F DUP2 PUSH1 0x22 DUP2 MSTORE PUSH32 0x45524332303A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1069 JUMPI PUSH2 0x1069 PUSH2 0xE4A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF PUSH15 0x71EDAE12B1B97F4D1F60370FEF1010 0x5F LOG2 STATICCALL 0xAE ADD 0x26 GT 0x4A AND SWAP13 PUSH5 0x845D6126C9 DUP13 JUMPDEST 0xE1 0xE5 0xEB 0xEC PUSH30 0x5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925A264697066 PUSH20 0x58221220394462F28AC639D0355BDFBDB944F25A 0xB5 GAS 0x5D 0xD9 0xB3 0xF DUP14 GT 0xD8 0xCA RETURN 0xE0 REVERT 0x23 0xB9 0xBA PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"202:474:12:-:0;;;248:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;376:5;383:7;392:6;747:5:9;754:7;1980:5:8;1973:4;:12;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1995:16:8;;;;:6;;:16;;;;;:::i;:::-;-1:-1:-1;2021:8:8;:13;;-1:-1:-1;;2021:13:8;2032:2;2021:13;;;2422:9;:21;;-1:-1:-1;;2422:21:8;:41;;;2491:4;2021:8;2473:24;;;2422:21;2473:24;;:44;2873:133;3040:4;3024:22;;;;;;:::i;:::-;;;;;;;;;;3074:10;;;;;;;;-1:-1:-1;;;3074:10:8;;;;;2845:316;;;;;3064:21;;3103:13;;3142:4;;2845:316;;:::i;:::-;;;;-1:-1:-1;;2845:316:8;;;;;;;;;2822:349;;2845:316;2822:349;;;;2803:16;:368;-1:-1:-1;;413:5:7;:18;;-1:-1:-1;;;;;;413:18:7;421:10;413:18;;;773:16:9::1;782:6:::0;773:8:::1;:16::i;:::-;633:163:::0;;;248:154:12;;;202:474;;1526:76:7;562:5;;-1:-1:-1;;;;;562:5:7;548:10;:19;540:48;;;;-1:-1:-1;;;540:48:7;;;;;;;:::i;:::-;;;;;;;;;1584:5:::1;:11:::0;;-1:-1:-1;;;;;;1584:11:7::1;-1:-1:-1::0;;;;;1584:11:7;;;::::1;::::0;;;::::1;::::0;;1526:76::o;202:474:12:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;202:474:12;;;-1:-1:-1;202:474:12;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;580:102:13;672:2;652:14;-1:-1:-1;;648:28:13;;580:102::o;688:180::-;-1:-1:-1;;;733:1:13;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;-1:-1:-1;;;;;1039:10:13;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1134:2;1127:22;-1:-1:-1;;874:281:13:o;1161:129::-;1195:6;1222:20;73:2;67:9;;7:75;1222:20;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;-1:-1:-1;;;;;1440:6:13;1437:30;1434:56;;;1470:18;;:::i;:::-;1508:29;1530:6;1508:29;:::i;:::-;1592:4;1582:15;;1296:308;-1:-1:-1;;1296:308:13:o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1778:11;;;1772:18;1759:11;;;1752:39;1724:2;1717:10;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;197:1;194;187:12;2209:79;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;197:1;194;187:12;2488:79;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;2364:355;-1:-1:-1;;;;2364:355:13:o;2857:96::-;2894:7;-1:-1:-1;;;;;2791:54:13;;2923:24;2912:35;2857:96;-1:-1:-1;;2857:96:13:o;2959:122::-;3032:24;3050:5;3032:24;:::i;:::-;3025:5;3022:35;3012:63;;3071:1;3068;3061:12;3012:63;2959:122;:::o;3087:143::-;3169:13;;3191:33;3169:13;3191:33;:::i;3236:1009::-;3344:6;3352;3360;3409:2;3397:9;3388:7;3384:23;3380:32;3377:119;;;3415:79;197:1;194;187:12;3415:79;3535:24;;-1:-1:-1;;;;;3575:30:13;;3572:117;;;3608:79;197:1;194;187:12;3608:79;3713:74;3779:7;3770:6;3759:9;3755:22;3713:74;:::i;:::-;3703:84;;3506:291;3857:2;3846:9;3842:18;3836:25;-1:-1:-1;;;;;3880:6:13;3877:30;3874:117;;;3910:79;197:1;194;187:12;3910:79;4015:74;4081:7;4072:6;4061:9;4057:22;4015:74;:::i;:::-;4005:84;;3807:292;4138:2;4164:64;4220:7;4211:6;4200:9;4196:22;4164:64;:::i;:::-;4154:74;;4109:129;3236:1009;;;;;:::o;4251:180::-;-1:-1:-1;;;4296:1:13;4289:88;4396:4;4393:1;4386:15;4420:4;4417:1;4410:15;4437:320;4518:1;4508:12;;4565:1;4555:12;;;4576:81;;4642:4;4634:6;4630:17;4620:27;;4576:81;4704:2;4696:6;4693:14;4673:18;4670:38;4667:84;;;4723:18;;:::i;:::-;4488:269;4437:320;;;:::o;5088:849::-;5193:3;5230:5;5224:12;5259:36;5285:9;5259:36;:::i;:::-;5430:1;5415:17;;5441:137;;;;5592:1;5587:344;;;;5408:523;;5441:137;-1:-1:-1;;5506:25:13;;5494:38;;5552:16;;;;-1:-1:-1;5441:137:13;;5587:344;4968:4;5004:14;;;5048:4;5035:18;;5717:1;5731:154;5745:6;5742:1;5739:13;5731:154;;;5813:14;;5800:11;;;5793:35;5869:1;5856:15;;;;5767:4;5760:12;5731:154;;;5914:6;5909:3;5905:16;5898:23;;5594:337;;5408:523;;5197:740;;5088:849;;;;:::o;5943:273::-;6074:3;6096:94;6186:3;6177:6;6096:94;:::i;:::-;6089:101;5943:273;-1:-1:-1;;;5943:273:13:o;6305:118::-;6410:5;6392:24;6387:3;6380:37;6305:118;;:::o;6636:::-;6723:24;6741:5;6723:24;:::i;6760:664::-;7003:3;6988:19;;7017:71;6992:9;7061:6;7017:71;:::i;:::-;7098:72;7166:2;7155:9;7151:18;7142:6;7098:72;:::i;:::-;7180;7248:2;7237:9;7233:18;7224:6;7180:72;:::i;:::-;7262;7330:2;7319:9;7315:18;7306:6;7262:72;:::i;:::-;7344:73;7412:3;7401:9;7397:19;7388:6;7344:73;:::i;:::-;6760:664;;;;;;;;:::o;8149:419::-;8353:2;8366:47;;;8338:18;;8430:131;8338:18;8004:2;7536:19;;-1:-1:-1;;;7588:4:13;7579:14;;7722:42;8125:12;;;7777:366;8149:419;202:474:12;;;;;;"},"deployedBytecode":{"functionDebugData":{"@DOMAIN_SEPARATOR_586":{"entryPoint":null,"id":586,"parameterSlots":0,"returnSlots":0},"@PERMIT_TYPEHASH_589":{"entryPoint":null,"id":589,"parameterSlots":0,"returnSlots":0},"@_authorize_552":{"entryPoint":null,"id":552,"parameterSlots":1,"returnSlots":0},"@_burn_1134":{"entryPoint":2538,"id":1134,"parameterSlots":2,"returnSlots":0},"@_mint_1069":{"entryPoint":2395,"id":1069,"parameterSlots":2,"returnSlots":0},"@allowance_578":{"entryPoint":null,"id":578,"parameterSlots":0,"returnSlots":0},"@approve_873":{"entryPoint":1052,"id":873,"parameterSlots":2,"returnSlots":1},"@authorize_511":{"entryPoint":1782,"id":511,"parameterSlots":1,"returnSlots":0},"@authorized_449":{"entryPoint":null,"id":449,"parameterSlots":0,"returnSlots":0},"@balanceOf_571":{"entryPoint":null,"id":571,"parameterSlots":0,"returnSlots":0},"@burn_1085":{"entryPoint":1710,"id":1085,"parameterSlots":2,"returnSlots":0},"@deauthorize_526":{"entryPoint":1566,"id":526,"parameterSlots":1,"returnSlots":0},"@decimals_566":{"entryPoint":null,"id":566,"parameterSlots":0,"returnSlots":0},"@isAuthorized_498":{"entryPoint":null,"id":498,"parameterSlots":1,"returnSlots":1},"@mint_1036":{"entryPoint":1641,"id":1036,"parameterSlots":2,"returnSlots":0},"@name_560":{"entryPoint":910,"id":560,"parameterSlots":0,"returnSlots":0},"@nonces_583":{"entryPoint":null,"id":583,"parameterSlots":0,"returnSlots":0},"@owner_445":{"entryPoint":null,"id":445,"parameterSlots":0,"returnSlots":0},"@permit_979":{"entryPoint":1867,"id":979,"parameterSlots":7,"returnSlots":0},"@setAllowance_1306":{"entryPoint":null,"id":1306,"parameterSlots":3,"returnSlots":0},"@setBalance_1288":{"entryPoint":null,"id":1288,"parameterSlots":2,"returnSlots":0},"@setOwner_539":{"entryPoint":1141,"id":539,"parameterSlots":1,"returnSlots":0},"@symbol_563":{"entryPoint":1697,"id":563,"parameterSlots":0,"returnSlots":0},"@totalSupply_1020":{"entryPoint":null,"id":1020,"parameterSlots":0,"returnSlots":0},"@transferFrom_787":{"entryPoint":1226,"id":787,"parameterSlots":3,"returnSlots":1},"@transfer_692":{"entryPoint":1762,"id":692,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2869,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":2886,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint8":{"entryPoint":3178,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":2982,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3348,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3043,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32":{"entryPoint":3189,"id":null,"parameterSlots":2,"returnSlots":7},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":2897,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":3146,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":2958,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2765,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0da582174113c4a8ccabf7379918160fd1cb3abd983e4d1b1f8ef1a08042944e_to_t_string_memory_ptr_fromStack":{"entryPoint":3590,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3_to_t_string_memory_ptr_fromStack":{"entryPoint":3466,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_33c8b2e521d57fe3b657b4684a07c4c398e0034c4b4c28c2e83491c0d3ff9c94_to_t_string_memory_ptr_fromStack":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_63ce1ff982ae44aad094e71f7a32e830e1c192617b027e1604999acc859fb5a0_to_t_string_memory_ptr_fromStack":{"entryPoint":3866,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9651f421c0a91aae0759487dc95a6c27e3685ef1aa8c7b6a9aaff61a6b425f31_to_t_string_memory_ptr_fromStack":{"entryPoint":3991,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_bf0cd640067c3a2c6ea3ebb34ef896c6bfc6649304ad046540a58b1d31406b7f_to_t_string_memory_ptr_fromStack":{"entryPoint":4051,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_cf1bb0c360361ff22414840c5832508d0a49f594e9c1aa6bd1b509b1f4b27b06_to_t_string_memory_ptr_fromStack":{"entryPoint":3524,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3023,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3123,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed":{"entryPoint":3817,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":3155,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":2968,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":3727,"id":null,"parameterSlots":7,"returnSlots":1},"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed":{"entryPoint":3929,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2815,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0da582174113c4a8ccabf7379918160fd1cb3abd983e4d1b1f8ef1a08042944e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3642,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3508,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_33c8b2e521d57fe3b657b4684a07c4c398e0034c4b4c28c2e83491c0d3ff9c94__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4111,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_63ce1ff982ae44aad094e71f7a32e830e1c192617b027e1604999acc859fb5a0__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3913,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9651f421c0a91aae0759487dc95a6c27e3685ef1aa8c7b6a9aaff61a6b425f31__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4035,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_bf0cd640067c3a2c6ea3ebb34ef896c6bfc6649304ad046540a58b1d31406b7f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4095,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_cf1bb0c360361ff22414840c5832508d0a49f594e9c1aa6bd1b509b1f4b27b06__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3574,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3029,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3132,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3703,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":3680,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2832,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":2717,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3421,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":4181,"id":null,"parameterSlots":1,"returnSlots":1},"leftAlign_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3658,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3399,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0da582174113c4a8ccabf7379918160fd1cb3abd983e4d1b1f8ef1a08042944e":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_33c8b2e521d57fe3b657b4684a07c4c398e0034c4b4c28c2e83491c0d3ff9c94":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_63ce1ff982ae44aad094e71f7a32e830e1c192617b027e1604999acc859fb5a0":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9651f421c0a91aae0759487dc95a6c27e3685ef1aa8c7b6a9aaff61a6b425f31":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_bf0cd640067c3a2c6ea3ebb34ef896c6bfc6649304ad046540a58b1d31406b7f":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_cf1bb0c360361ff22414840c5832508d0a49f594e9c1aa6bd1b509b1f4b27b06":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2849,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":null,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2880,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint8":{"entryPoint":3169,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:19597:13","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:13","statements":[{"nodeType":"YulAssignment","src":"77:22:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:13"},"nodeType":"YulFunctionCall","src":"87:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:13"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:13","type":""}],"src":"7:99:13"},{"body":{"nodeType":"YulBlock","src":"208:73:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:13"},"nodeType":"YulFunctionCall","src":"218:19:13"},"nodeType":"YulExpressionStatement","src":"218:19:13"},{"nodeType":"YulAssignment","src":"246:29:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:13"},"nodeType":"YulFunctionCall","src":"261:14:13"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:13"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:13","type":""}],"src":"112:169:13"},{"body":{"nodeType":"YulBlock","src":"336:258:13","statements":[{"nodeType":"YulVariableDeclaration","src":"346:10:13","value":{"kind":"number","nodeType":"YulLiteral","src":"355:1:13","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"350:1:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"415:63:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"440:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"445:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"436:3:13"},"nodeType":"YulFunctionCall","src":"436:11:13"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"459:3:13"},{"name":"i","nodeType":"YulIdentifier","src":"464:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"455:3:13"},"nodeType":"YulFunctionCall","src":"455:11:13"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"449:5:13"},"nodeType":"YulFunctionCall","src":"449:18:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"429:6:13"},"nodeType":"YulFunctionCall","src":"429:39:13"},"nodeType":"YulExpressionStatement","src":"429:39:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"376:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"379:6:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"373:2:13"},"nodeType":"YulFunctionCall","src":"373:13:13"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"387:19:13","statements":[{"nodeType":"YulAssignment","src":"389:15:13","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"398:1:13"},{"kind":"number","nodeType":"YulLiteral","src":"401:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"394:3:13"},"nodeType":"YulFunctionCall","src":"394:10:13"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:13"}]}]},"pre":{"nodeType":"YulBlock","src":"369:3:13","statements":[]},"src":"365:113:13"},{"body":{"nodeType":"YulBlock","src":"512:76:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"562:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"567:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"558:3:13"},"nodeType":"YulFunctionCall","src":"558:16:13"},{"kind":"number","nodeType":"YulLiteral","src":"576:1:13","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"551:6:13"},"nodeType":"YulFunctionCall","src":"551:27:13"},"nodeType":"YulExpressionStatement","src":"551:27:13"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"493:1:13"},{"name":"length","nodeType":"YulIdentifier","src":"496:6:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"490:2:13"},"nodeType":"YulFunctionCall","src":"490:13:13"},"nodeType":"YulIf","src":"487:101:13"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"318:3:13","type":""},{"name":"dst","nodeType":"YulTypedName","src":"323:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"328:6:13","type":""}],"src":"287:307:13"},{"body":{"nodeType":"YulBlock","src":"648:54:13","statements":[{"nodeType":"YulAssignment","src":"658:38:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"683:2:13","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"672:3:13"},"nodeType":"YulFunctionCall","src":"672:14:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"692:2:13","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"688:3:13"},"nodeType":"YulFunctionCall","src":"688:7:13"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"668:3:13"},"nodeType":"YulFunctionCall","src":"668:28:13"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"658:6:13"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"631:5:13","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"641:6:13","type":""}],"src":"600:102:13"},{"body":{"nodeType":"YulBlock","src":"800:272:13","statements":[{"nodeType":"YulVariableDeclaration","src":"810:53:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"857:5:13"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"824:32:13"},"nodeType":"YulFunctionCall","src":"824:39:13"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"814:6:13","type":""}]},{"nodeType":"YulAssignment","src":"872:78:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"938:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"943:6:13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"879:58:13"},"nodeType":"YulFunctionCall","src":"879:71:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"872:3:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"985:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"992:4:13","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"981:3:13"},"nodeType":"YulFunctionCall","src":"981:16:13"},{"name":"pos","nodeType":"YulIdentifier","src":"999:3:13"},{"name":"length","nodeType":"YulIdentifier","src":"1004:6:13"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"959:21:13"},"nodeType":"YulFunctionCall","src":"959:52:13"},"nodeType":"YulExpressionStatement","src":"959:52:13"},{"nodeType":"YulAssignment","src":"1020:46:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1031:3:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1058:6:13"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1036:21:13"},"nodeType":"YulFunctionCall","src":"1036:29:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1027:3:13"},"nodeType":"YulFunctionCall","src":"1027:39:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1020:3:13"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"781:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"788:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"796:3:13","type":""}],"src":"708:364:13"},{"body":{"nodeType":"YulBlock","src":"1196:195:13","statements":[{"nodeType":"YulAssignment","src":"1206:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1218:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1229:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1214:3:13"},"nodeType":"YulFunctionCall","src":"1214:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1206:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1253:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"1264:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1249:3:13"},"nodeType":"YulFunctionCall","src":"1249:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1272:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"1278:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1268:3:13"},"nodeType":"YulFunctionCall","src":"1268:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1242:6:13"},"nodeType":"YulFunctionCall","src":"1242:47:13"},"nodeType":"YulExpressionStatement","src":"1242:47:13"},{"nodeType":"YulAssignment","src":"1298:86:13","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1370:6:13"},{"name":"tail","nodeType":"YulIdentifier","src":"1379:4:13"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1306:63:13"},"nodeType":"YulFunctionCall","src":"1306:78:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1298:4:13"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1168:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1180:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1191:4:13","type":""}],"src":"1078:313:13"},{"body":{"nodeType":"YulBlock","src":"1437:35:13","statements":[{"nodeType":"YulAssignment","src":"1447:19:13","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1463:2:13","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1457:5:13"},"nodeType":"YulFunctionCall","src":"1457:9:13"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1447:6:13"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1430:6:13","type":""}],"src":"1397:75:13"},{"body":{"nodeType":"YulBlock","src":"1567:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1584:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1587:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1577:6:13"},"nodeType":"YulFunctionCall","src":"1577:12:13"},"nodeType":"YulExpressionStatement","src":"1577:12:13"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1478:117:13"},{"body":{"nodeType":"YulBlock","src":"1690:28:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1707:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1710:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1700:6:13"},"nodeType":"YulFunctionCall","src":"1700:12:13"},"nodeType":"YulExpressionStatement","src":"1700:12:13"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1601:117:13"},{"body":{"nodeType":"YulBlock","src":"1769:81:13","statements":[{"nodeType":"YulAssignment","src":"1779:65:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1794:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"1801:42:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1790:3:13"},"nodeType":"YulFunctionCall","src":"1790:54:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1779:7:13"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1751:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1761:7:13","type":""}],"src":"1724:126:13"},{"body":{"nodeType":"YulBlock","src":"1901:51:13","statements":[{"nodeType":"YulAssignment","src":"1911:35:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1940:5:13"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1922:17:13"},"nodeType":"YulFunctionCall","src":"1922:24:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1911:7:13"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1883:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1893:7:13","type":""}],"src":"1856:96:13"},{"body":{"nodeType":"YulBlock","src":"2001:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"2058:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2067:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2070:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2060:6:13"},"nodeType":"YulFunctionCall","src":"2060:12:13"},"nodeType":"YulExpressionStatement","src":"2060:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2024:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2049:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2031:17:13"},"nodeType":"YulFunctionCall","src":"2031:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2021:2:13"},"nodeType":"YulFunctionCall","src":"2021:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2014:6:13"},"nodeType":"YulFunctionCall","src":"2014:43:13"},"nodeType":"YulIf","src":"2011:63:13"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1994:5:13","type":""}],"src":"1958:122:13"},{"body":{"nodeType":"YulBlock","src":"2138:87:13","statements":[{"nodeType":"YulAssignment","src":"2148:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2170:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2157:12:13"},"nodeType":"YulFunctionCall","src":"2157:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2148:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2213:5:13"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2186:26:13"},"nodeType":"YulFunctionCall","src":"2186:33:13"},"nodeType":"YulExpressionStatement","src":"2186:33:13"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2116:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2124:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2132:5:13","type":""}],"src":"2086:139:13"},{"body":{"nodeType":"YulBlock","src":"2276:32:13","statements":[{"nodeType":"YulAssignment","src":"2286:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"2297:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2286:7:13"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2258:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2268:7:13","type":""}],"src":"2231:77:13"},{"body":{"nodeType":"YulBlock","src":"2357:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"2414:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2423:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2426:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2416:6:13"},"nodeType":"YulFunctionCall","src":"2416:12:13"},"nodeType":"YulExpressionStatement","src":"2416:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2380:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2405:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2387:17:13"},"nodeType":"YulFunctionCall","src":"2387:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2377:2:13"},"nodeType":"YulFunctionCall","src":"2377:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2370:6:13"},"nodeType":"YulFunctionCall","src":"2370:43:13"},"nodeType":"YulIf","src":"2367:63:13"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2350:5:13","type":""}],"src":"2314:122:13"},{"body":{"nodeType":"YulBlock","src":"2494:87:13","statements":[{"nodeType":"YulAssignment","src":"2504:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2526:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2513:12:13"},"nodeType":"YulFunctionCall","src":"2513:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2504:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2569:5:13"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2542:26:13"},"nodeType":"YulFunctionCall","src":"2542:33:13"},"nodeType":"YulExpressionStatement","src":"2542:33:13"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2472:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"2480:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2488:5:13","type":""}],"src":"2442:139:13"},{"body":{"nodeType":"YulBlock","src":"2670:391:13","statements":[{"body":{"nodeType":"YulBlock","src":"2716:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2718:77:13"},"nodeType":"YulFunctionCall","src":"2718:79:13"},"nodeType":"YulExpressionStatement","src":"2718:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2691:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"2700:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2687:3:13"},"nodeType":"YulFunctionCall","src":"2687:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"2712:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2683:3:13"},"nodeType":"YulFunctionCall","src":"2683:32:13"},"nodeType":"YulIf","src":"2680:119:13"},{"nodeType":"YulBlock","src":"2809:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2824:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2838:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2828:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2853:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"2899:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:13"},"nodeType":"YulFunctionCall","src":"2884:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2908:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2863:20:13"},"nodeType":"YulFunctionCall","src":"2863:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2853:6:13"}]}]},{"nodeType":"YulBlock","src":"2936:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"2951:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"2965:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2955:6:13","type":""}]},{"nodeType":"YulAssignment","src":"2981:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3016:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"3027:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3012:3:13"},"nodeType":"YulFunctionCall","src":"3012:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3036:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2991:20:13"},"nodeType":"YulFunctionCall","src":"2991:53:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2981:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2632:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2643:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2655:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2663:6:13","type":""}],"src":"2587:474:13"},{"body":{"nodeType":"YulBlock","src":"3109:48:13","statements":[{"nodeType":"YulAssignment","src":"3119:32:13","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3144:5:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3137:6:13"},"nodeType":"YulFunctionCall","src":"3137:13:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3130:6:13"},"nodeType":"YulFunctionCall","src":"3130:21:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3119:7:13"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3091:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3101:7:13","type":""}],"src":"3067:90:13"},{"body":{"nodeType":"YulBlock","src":"3222:50:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3239:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3259:5:13"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3244:14:13"},"nodeType":"YulFunctionCall","src":"3244:21:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3232:6:13"},"nodeType":"YulFunctionCall","src":"3232:34:13"},"nodeType":"YulExpressionStatement","src":"3232:34:13"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3210:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3217:3:13","type":""}],"src":"3163:109:13"},{"body":{"nodeType":"YulBlock","src":"3370:118:13","statements":[{"nodeType":"YulAssignment","src":"3380:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3392:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3403:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3388:3:13"},"nodeType":"YulFunctionCall","src":"3388:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3380:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3454:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3467:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"3478:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3463:3:13"},"nodeType":"YulFunctionCall","src":"3463:17:13"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3416:37:13"},"nodeType":"YulFunctionCall","src":"3416:65:13"},"nodeType":"YulExpressionStatement","src":"3416:65:13"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3342:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3354:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3365:4:13","type":""}],"src":"3278:210:13"},{"body":{"nodeType":"YulBlock","src":"3560:263:13","statements":[{"body":{"nodeType":"YulBlock","src":"3606:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3608:77:13"},"nodeType":"YulFunctionCall","src":"3608:79:13"},"nodeType":"YulExpressionStatement","src":"3608:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3581:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"3590:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3577:3:13"},"nodeType":"YulFunctionCall","src":"3577:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"3602:2:13","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3573:3:13"},"nodeType":"YulFunctionCall","src":"3573:32:13"},"nodeType":"YulIf","src":"3570:119:13"},{"nodeType":"YulBlock","src":"3699:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"3714:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"3728:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3718:6:13","type":""}]},{"nodeType":"YulAssignment","src":"3743:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3778:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"3789:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3774:3:13"},"nodeType":"YulFunctionCall","src":"3774:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3798:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"3753:20:13"},"nodeType":"YulFunctionCall","src":"3753:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3743:6:13"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3530:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3541:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3553:6:13","type":""}],"src":"3494:329:13"},{"body":{"nodeType":"YulBlock","src":"3894:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3911:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3934:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3916:17:13"},"nodeType":"YulFunctionCall","src":"3916:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3904:6:13"},"nodeType":"YulFunctionCall","src":"3904:37:13"},"nodeType":"YulExpressionStatement","src":"3904:37:13"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3882:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3889:3:13","type":""}],"src":"3829:118:13"},{"body":{"nodeType":"YulBlock","src":"4051:124:13","statements":[{"nodeType":"YulAssignment","src":"4061:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4073:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4084:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4069:3:13"},"nodeType":"YulFunctionCall","src":"4069:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4061:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4141:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4154:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"4165:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4150:3:13"},"nodeType":"YulFunctionCall","src":"4150:17:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"4097:43:13"},"nodeType":"YulFunctionCall","src":"4097:71:13"},"nodeType":"YulExpressionStatement","src":"4097:71:13"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4023:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4035:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4046:4:13","type":""}],"src":"3953:222:13"},{"body":{"nodeType":"YulBlock","src":"4281:519:13","statements":[{"body":{"nodeType":"YulBlock","src":"4327:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"4329:77:13"},"nodeType":"YulFunctionCall","src":"4329:79:13"},"nodeType":"YulExpressionStatement","src":"4329:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4302:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"4311:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4298:3:13"},"nodeType":"YulFunctionCall","src":"4298:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"4323:2:13","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4294:3:13"},"nodeType":"YulFunctionCall","src":"4294:32:13"},"nodeType":"YulIf","src":"4291:119:13"},{"nodeType":"YulBlock","src":"4420:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4435:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"4449:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4439:6:13","type":""}]},{"nodeType":"YulAssignment","src":"4464:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4499:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4510:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4495:3:13"},"nodeType":"YulFunctionCall","src":"4495:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4519:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4474:20:13"},"nodeType":"YulFunctionCall","src":"4474:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4464:6:13"}]}]},{"nodeType":"YulBlock","src":"4547:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4562:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"4576:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4566:6:13","type":""}]},{"nodeType":"YulAssignment","src":"4592:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4627:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4638:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4623:3:13"},"nodeType":"YulFunctionCall","src":"4623:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4647:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4602:20:13"},"nodeType":"YulFunctionCall","src":"4602:53:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4592:6:13"}]}]},{"nodeType":"YulBlock","src":"4675:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"4690:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"4704:2:13","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4694:6:13","type":""}]},{"nodeType":"YulAssignment","src":"4720:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4755:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"4766:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4751:3:13"},"nodeType":"YulFunctionCall","src":"4751:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4775:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4730:20:13"},"nodeType":"YulFunctionCall","src":"4730:53:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4720:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4235:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4246:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4258:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4266:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4274:6:13","type":""}],"src":"4181:619:13"},{"body":{"nodeType":"YulBlock","src":"4851:32:13","statements":[{"nodeType":"YulAssignment","src":"4861:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"4872:5:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4861:7:13"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4833:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4843:7:13","type":""}],"src":"4806:77:13"},{"body":{"nodeType":"YulBlock","src":"4954:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4971:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4994:5:13"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"4976:17:13"},"nodeType":"YulFunctionCall","src":"4976:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4964:6:13"},"nodeType":"YulFunctionCall","src":"4964:37:13"},"nodeType":"YulExpressionStatement","src":"4964:37:13"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4942:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4949:3:13","type":""}],"src":"4889:118:13"},{"body":{"nodeType":"YulBlock","src":"5111:124:13","statements":[{"nodeType":"YulAssignment","src":"5121:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5133:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5144:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5129:3:13"},"nodeType":"YulFunctionCall","src":"5129:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5121:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5201:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5214:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5225:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5210:3:13"},"nodeType":"YulFunctionCall","src":"5210:17:13"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"5157:43:13"},"nodeType":"YulFunctionCall","src":"5157:71:13"},"nodeType":"YulExpressionStatement","src":"5157:71:13"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5083:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5095:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5106:4:13","type":""}],"src":"5013:222:13"},{"body":{"nodeType":"YulBlock","src":"5284:43:13","statements":[{"nodeType":"YulAssignment","src":"5294:27:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5309:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"5316:4:13","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5305:3:13"},"nodeType":"YulFunctionCall","src":"5305:16:13"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5294:7:13"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5266:5:13","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5276:7:13","type":""}],"src":"5241:86:13"},{"body":{"nodeType":"YulBlock","src":"5394:51:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5411:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5432:5:13"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"5416:15:13"},"nodeType":"YulFunctionCall","src":"5416:22:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5404:6:13"},"nodeType":"YulFunctionCall","src":"5404:35:13"},"nodeType":"YulExpressionStatement","src":"5404:35:13"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5382:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5389:3:13","type":""}],"src":"5333:112:13"},{"body":{"nodeType":"YulBlock","src":"5545:120:13","statements":[{"nodeType":"YulAssignment","src":"5555:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5567:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5578:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5563:3:13"},"nodeType":"YulFunctionCall","src":"5563:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5555:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5631:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5644:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5655:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5640:3:13"},"nodeType":"YulFunctionCall","src":"5640:17:13"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"5591:39:13"},"nodeType":"YulFunctionCall","src":"5591:67:13"},"nodeType":"YulExpressionStatement","src":"5591:67:13"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5517:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5529:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5540:4:13","type":""}],"src":"5451:214:13"},{"body":{"nodeType":"YulBlock","src":"5736:53:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5753:3:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5776:5:13"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5758:17:13"},"nodeType":"YulFunctionCall","src":"5758:24:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5746:6:13"},"nodeType":"YulFunctionCall","src":"5746:37:13"},"nodeType":"YulExpressionStatement","src":"5746:37:13"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5724:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5731:3:13","type":""}],"src":"5671:118:13"},{"body":{"nodeType":"YulBlock","src":"5893:124:13","statements":[{"nodeType":"YulAssignment","src":"5903:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5915:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"5926:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5911:3:13"},"nodeType":"YulFunctionCall","src":"5911:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5903:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5983:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5996:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"6007:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5992:3:13"},"nodeType":"YulFunctionCall","src":"5992:17:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5939:43:13"},"nodeType":"YulFunctionCall","src":"5939:71:13"},"nodeType":"YulExpressionStatement","src":"5939:71:13"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5865:9:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5877:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5888:4:13","type":""}],"src":"5795:222:13"},{"body":{"nodeType":"YulBlock","src":"6064:77:13","statements":[{"body":{"nodeType":"YulBlock","src":"6119:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6128:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6131:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6121:6:13"},"nodeType":"YulFunctionCall","src":"6121:12:13"},"nodeType":"YulExpressionStatement","src":"6121:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6087:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6110:5:13"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"6094:15:13"},"nodeType":"YulFunctionCall","src":"6094:22:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6084:2:13"},"nodeType":"YulFunctionCall","src":"6084:33:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6077:6:13"},"nodeType":"YulFunctionCall","src":"6077:41:13"},"nodeType":"YulIf","src":"6074:61:13"}]},"name":"validator_revert_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6057:5:13","type":""}],"src":"6023:118:13"},{"body":{"nodeType":"YulBlock","src":"6197:85:13","statements":[{"nodeType":"YulAssignment","src":"6207:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6229:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6216:12:13"},"nodeType":"YulFunctionCall","src":"6216:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6207:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6270:5:13"}],"functionName":{"name":"validator_revert_t_uint8","nodeType":"YulIdentifier","src":"6245:24:13"},"nodeType":"YulFunctionCall","src":"6245:31:13"},"nodeType":"YulExpressionStatement","src":"6245:31:13"}]},"name":"abi_decode_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6175:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"6183:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6191:5:13","type":""}],"src":"6147:135:13"},{"body":{"nodeType":"YulBlock","src":"6331:79:13","statements":[{"body":{"nodeType":"YulBlock","src":"6388:16:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6397:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6400:1:13","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6390:6:13"},"nodeType":"YulFunctionCall","src":"6390:12:13"},"nodeType":"YulExpressionStatement","src":"6390:12:13"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6354:5:13"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6379:5:13"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"6361:17:13"},"nodeType":"YulFunctionCall","src":"6361:24:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6351:2:13"},"nodeType":"YulFunctionCall","src":"6351:35:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6344:6:13"},"nodeType":"YulFunctionCall","src":"6344:43:13"},"nodeType":"YulIf","src":"6341:63:13"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6324:5:13","type":""}],"src":"6288:122:13"},{"body":{"nodeType":"YulBlock","src":"6468:87:13","statements":[{"nodeType":"YulAssignment","src":"6478:29:13","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6500:6:13"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6487:12:13"},"nodeType":"YulFunctionCall","src":"6487:20:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6478:5:13"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6543:5:13"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"6516:26:13"},"nodeType":"YulFunctionCall","src":"6516:33:13"},"nodeType":"YulExpressionStatement","src":"6516:33:13"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6446:6:13","type":""},{"name":"end","nodeType":"YulTypedName","src":"6454:3:13","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6462:5:13","type":""}],"src":"6416:139:13"},{"body":{"nodeType":"YulBlock","src":"6727:1033:13","statements":[{"body":{"nodeType":"YulBlock","src":"6774:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6776:77:13"},"nodeType":"YulFunctionCall","src":"6776:79:13"},"nodeType":"YulExpressionStatement","src":"6776:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6748:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"6757:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6744:3:13"},"nodeType":"YulFunctionCall","src":"6744:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"6769:3:13","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6740:3:13"},"nodeType":"YulFunctionCall","src":"6740:33:13"},"nodeType":"YulIf","src":"6737:120:13"},{"nodeType":"YulBlock","src":"6867:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"6882:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"6896:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6886:6:13","type":""}]},{"nodeType":"YulAssignment","src":"6911:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6946:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"6957:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6942:3:13"},"nodeType":"YulFunctionCall","src":"6942:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6966:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6921:20:13"},"nodeType":"YulFunctionCall","src":"6921:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6911:6:13"}]}]},{"nodeType":"YulBlock","src":"6994:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"7009:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"7023:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7013:6:13","type":""}]},{"nodeType":"YulAssignment","src":"7039:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7074:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"7085:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7070:3:13"},"nodeType":"YulFunctionCall","src":"7070:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7094:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7049:20:13"},"nodeType":"YulFunctionCall","src":"7049:53:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7039:6:13"}]}]},{"nodeType":"YulBlock","src":"7122:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"7137:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"7151:2:13","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7141:6:13","type":""}]},{"nodeType":"YulAssignment","src":"7167:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7202:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"7213:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7198:3:13"},"nodeType":"YulFunctionCall","src":"7198:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7222:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7177:20:13"},"nodeType":"YulFunctionCall","src":"7177:53:13"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7167:6:13"}]}]},{"nodeType":"YulBlock","src":"7250:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"7265:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"7279:2:13","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7269:6:13","type":""}]},{"nodeType":"YulAssignment","src":"7295:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7330:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"7341:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7326:3:13"},"nodeType":"YulFunctionCall","src":"7326:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7350:7:13"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7305:20:13"},"nodeType":"YulFunctionCall","src":"7305:53:13"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"7295:6:13"}]}]},{"nodeType":"YulBlock","src":"7378:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"7393:17:13","value":{"kind":"number","nodeType":"YulLiteral","src":"7407:3:13","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7397:6:13","type":""}]},{"nodeType":"YulAssignment","src":"7424:61:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7457:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"7468:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7453:3:13"},"nodeType":"YulFunctionCall","src":"7453:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7477:7:13"}],"functionName":{"name":"abi_decode_t_uint8","nodeType":"YulIdentifier","src":"7434:18:13"},"nodeType":"YulFunctionCall","src":"7434:51:13"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"7424:6:13"}]}]},{"nodeType":"YulBlock","src":"7505:119:13","statements":[{"nodeType":"YulVariableDeclaration","src":"7520:17:13","value":{"kind":"number","nodeType":"YulLiteral","src":"7534:3:13","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7524:6:13","type":""}]},{"nodeType":"YulAssignment","src":"7551:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7586:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"7597:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7582:3:13"},"nodeType":"YulFunctionCall","src":"7582:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7606:7:13"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7561:20:13"},"nodeType":"YulFunctionCall","src":"7561:53:13"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"7551:6:13"}]}]},{"nodeType":"YulBlock","src":"7634:119:13","statements":[{"nodeType":"YulVariableDeclaration","src":"7649:17:13","value":{"kind":"number","nodeType":"YulLiteral","src":"7663:3:13","type":"","value":"192"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7653:6:13","type":""}]},{"nodeType":"YulAssignment","src":"7680:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7715:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"7726:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7711:3:13"},"nodeType":"YulFunctionCall","src":"7711:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7735:7:13"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"7690:20:13"},"nodeType":"YulFunctionCall","src":"7690:53:13"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"7680:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6649:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6660:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6672:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6680:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6688:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"6696:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"6704:6:13","type":""},{"name":"value5","nodeType":"YulTypedName","src":"6712:6:13","type":""},{"name":"value6","nodeType":"YulTypedName","src":"6720:6:13","type":""}],"src":"6561:1199:13"},{"body":{"nodeType":"YulBlock","src":"7849:391:13","statements":[{"body":{"nodeType":"YulBlock","src":"7895:83:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7897:77:13"},"nodeType":"YulFunctionCall","src":"7897:79:13"},"nodeType":"YulExpressionStatement","src":"7897:79:13"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7870:7:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"7879:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7866:3:13"},"nodeType":"YulFunctionCall","src":"7866:23:13"},{"kind":"number","nodeType":"YulLiteral","src":"7891:2:13","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7862:3:13"},"nodeType":"YulFunctionCall","src":"7862:32:13"},"nodeType":"YulIf","src":"7859:119:13"},{"nodeType":"YulBlock","src":"7988:117:13","statements":[{"nodeType":"YulVariableDeclaration","src":"8003:15:13","value":{"kind":"number","nodeType":"YulLiteral","src":"8017:1:13","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8007:6:13","type":""}]},{"nodeType":"YulAssignment","src":"8032:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8067:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"8078:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8063:3:13"},"nodeType":"YulFunctionCall","src":"8063:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8087:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8042:20:13"},"nodeType":"YulFunctionCall","src":"8042:53:13"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"8032:6:13"}]}]},{"nodeType":"YulBlock","src":"8115:118:13","statements":[{"nodeType":"YulVariableDeclaration","src":"8130:16:13","value":{"kind":"number","nodeType":"YulLiteral","src":"8144:2:13","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"8134:6:13","type":""}]},{"nodeType":"YulAssignment","src":"8160:63:13","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8195:9:13"},{"name":"offset","nodeType":"YulIdentifier","src":"8206:6:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8191:3:13"},"nodeType":"YulFunctionCall","src":"8191:22:13"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"8215:7:13"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"8170:20:13"},"nodeType":"YulFunctionCall","src":"8170:53:13"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"8160:6:13"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7811:9:13","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7822:7:13","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7834:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7842:6:13","type":""}],"src":"7766:474:13"},{"body":{"nodeType":"YulBlock","src":"8274:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8291:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8294:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8284:6:13"},"nodeType":"YulFunctionCall","src":"8284:88:13"},"nodeType":"YulExpressionStatement","src":"8284:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8388:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"8391:4:13","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8381:6:13"},"nodeType":"YulFunctionCall","src":"8381:15:13"},"nodeType":"YulExpressionStatement","src":"8381:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8412:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8415:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8405:6:13"},"nodeType":"YulFunctionCall","src":"8405:15:13"},"nodeType":"YulExpressionStatement","src":"8405:15:13"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"8246:180:13"},{"body":{"nodeType":"YulBlock","src":"8483:269:13","statements":[{"nodeType":"YulAssignment","src":"8493:22:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8507:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"8513:1:13","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"8503:3:13"},"nodeType":"YulFunctionCall","src":"8503:12:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8493:6:13"}]},{"nodeType":"YulVariableDeclaration","src":"8524:38:13","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"8554:4:13"},{"kind":"number","nodeType":"YulLiteral","src":"8560:1:13","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8550:3:13"},"nodeType":"YulFunctionCall","src":"8550:12:13"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"8528:18:13","type":""}]},{"body":{"nodeType":"YulBlock","src":"8601:51:13","statements":[{"nodeType":"YulAssignment","src":"8615:27:13","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8629:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8637:4:13","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8625:3:13"},"nodeType":"YulFunctionCall","src":"8625:17:13"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8615:6:13"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8581:18:13"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"8574:6:13"},"nodeType":"YulFunctionCall","src":"8574:26:13"},"nodeType":"YulIf","src":"8571:81:13"},{"body":{"nodeType":"YulBlock","src":"8704:42:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"8718:16:13"},"nodeType":"YulFunctionCall","src":"8718:18:13"},"nodeType":"YulExpressionStatement","src":"8718:18:13"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"8668:18:13"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8691:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8699:2:13","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8688:2:13"},"nodeType":"YulFunctionCall","src":"8688:14:13"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"8665:2:13"},"nodeType":"YulFunctionCall","src":"8665:38:13"},"nodeType":"YulIf","src":"8662:84:13"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"8467:4:13","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8476:6:13","type":""}],"src":"8432:320:13"},{"body":{"nodeType":"YulBlock","src":"8864:60:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8886:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"8894:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8882:3:13"},"nodeType":"YulFunctionCall","src":"8882:14:13"},{"hexValue":"53656e646572206e6f74206f776e6572","kind":"string","nodeType":"YulLiteral","src":"8898:18:13","type":"","value":"Sender not owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8875:6:13"},"nodeType":"YulFunctionCall","src":"8875:42:13"},"nodeType":"YulExpressionStatement","src":"8875:42:13"}]},"name":"store_literal_in_memory_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8856:6:13","type":""}],"src":"8758:166:13"},{"body":{"nodeType":"YulBlock","src":"9076:220:13","statements":[{"nodeType":"YulAssignment","src":"9086:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9152:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"9157:2:13","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9093:58:13"},"nodeType":"YulFunctionCall","src":"9093:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9086:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9258:3:13"}],"functionName":{"name":"store_literal_in_memory_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3","nodeType":"YulIdentifier","src":"9169:88:13"},"nodeType":"YulFunctionCall","src":"9169:93:13"},"nodeType":"YulExpressionStatement","src":"9169:93:13"},{"nodeType":"YulAssignment","src":"9271:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9282:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"9287:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9278:3:13"},"nodeType":"YulFunctionCall","src":"9278:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9271:3:13"}]}]},"name":"abi_encode_t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9064:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9072:3:13","type":""}],"src":"8930:366:13"},{"body":{"nodeType":"YulBlock","src":"9473:248:13","statements":[{"nodeType":"YulAssignment","src":"9483:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9495:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9506:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9491:3:13"},"nodeType":"YulFunctionCall","src":"9491:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9483:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9530:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"9541:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9526:3:13"},"nodeType":"YulFunctionCall","src":"9526:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9549:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"9555:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9545:3:13"},"nodeType":"YulFunctionCall","src":"9545:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9519:6:13"},"nodeType":"YulFunctionCall","src":"9519:47:13"},"nodeType":"YulExpressionStatement","src":"9519:47:13"},{"nodeType":"YulAssignment","src":"9575:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9709:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9583:124:13"},"nodeType":"YulFunctionCall","src":"9583:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9575:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9453:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9468:4:13","type":""}],"src":"9302:419:13"},{"body":{"nodeType":"YulBlock","src":"9833:71:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9855:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"9863:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9851:3:13"},"nodeType":"YulFunctionCall","src":"9851:14:13"},{"hexValue":"45524332303a20696e73756666696369656e742d62616c616e6365","kind":"string","nodeType":"YulLiteral","src":"9867:29:13","type":"","value":"ERC20: insufficient-balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9844:6:13"},"nodeType":"YulFunctionCall","src":"9844:53:13"},"nodeType":"YulExpressionStatement","src":"9844:53:13"}]},"name":"store_literal_in_memory_cf1bb0c360361ff22414840c5832508d0a49f594e9c1aa6bd1b509b1f4b27b06","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9825:6:13","type":""}],"src":"9727:177:13"},{"body":{"nodeType":"YulBlock","src":"10056:220:13","statements":[{"nodeType":"YulAssignment","src":"10066:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10132:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"10137:2:13","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10073:58:13"},"nodeType":"YulFunctionCall","src":"10073:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10066:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10238:3:13"}],"functionName":{"name":"store_literal_in_memory_cf1bb0c360361ff22414840c5832508d0a49f594e9c1aa6bd1b509b1f4b27b06","nodeType":"YulIdentifier","src":"10149:88:13"},"nodeType":"YulFunctionCall","src":"10149:93:13"},"nodeType":"YulExpressionStatement","src":"10149:93:13"},{"nodeType":"YulAssignment","src":"10251:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10262:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"10267:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10258:3:13"},"nodeType":"YulFunctionCall","src":"10258:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10251:3:13"}]}]},"name":"abi_encode_t_stringliteral_cf1bb0c360361ff22414840c5832508d0a49f594e9c1aa6bd1b509b1f4b27b06_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10044:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10052:3:13","type":""}],"src":"9910:366:13"},{"body":{"nodeType":"YulBlock","src":"10453:248:13","statements":[{"nodeType":"YulAssignment","src":"10463:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10475:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10486:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10471:3:13"},"nodeType":"YulFunctionCall","src":"10471:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10463:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10510:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"10521:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10506:3:13"},"nodeType":"YulFunctionCall","src":"10506:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10529:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"10535:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10525:3:13"},"nodeType":"YulFunctionCall","src":"10525:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10499:6:13"},"nodeType":"YulFunctionCall","src":"10499:47:13"},"nodeType":"YulExpressionStatement","src":"10499:47:13"},{"nodeType":"YulAssignment","src":"10555:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10689:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_cf1bb0c360361ff22414840c5832508d0a49f594e9c1aa6bd1b509b1f4b27b06_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10563:124:13"},"nodeType":"YulFunctionCall","src":"10563:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10555:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_cf1bb0c360361ff22414840c5832508d0a49f594e9c1aa6bd1b509b1f4b27b06__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10433:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10448:4:13","type":""}],"src":"10282:419:13"},{"body":{"nodeType":"YulBlock","src":"10813:73:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10835:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"10843:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10831:3:13"},"nodeType":"YulFunctionCall","src":"10831:14:13"},{"hexValue":"45524332303a20696e73756666696369656e742d616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"10847:31:13","type":"","value":"ERC20: insufficient-allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10824:6:13"},"nodeType":"YulFunctionCall","src":"10824:55:13"},"nodeType":"YulExpressionStatement","src":"10824:55:13"}]},"name":"store_literal_in_memory_0da582174113c4a8ccabf7379918160fd1cb3abd983e4d1b1f8ef1a08042944e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10805:6:13","type":""}],"src":"10707:179:13"},{"body":{"nodeType":"YulBlock","src":"11038:220:13","statements":[{"nodeType":"YulAssignment","src":"11048:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11114:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"11119:2:13","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11055:58:13"},"nodeType":"YulFunctionCall","src":"11055:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11048:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11220:3:13"}],"functionName":{"name":"store_literal_in_memory_0da582174113c4a8ccabf7379918160fd1cb3abd983e4d1b1f8ef1a08042944e","nodeType":"YulIdentifier","src":"11131:88:13"},"nodeType":"YulFunctionCall","src":"11131:93:13"},"nodeType":"YulExpressionStatement","src":"11131:93:13"},{"nodeType":"YulAssignment","src":"11233:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11244:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"11249:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11240:3:13"},"nodeType":"YulFunctionCall","src":"11240:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11233:3:13"}]}]},"name":"abi_encode_t_stringliteral_0da582174113c4a8ccabf7379918160fd1cb3abd983e4d1b1f8ef1a08042944e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11026:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11034:3:13","type":""}],"src":"10892:366:13"},{"body":{"nodeType":"YulBlock","src":"11435:248:13","statements":[{"nodeType":"YulAssignment","src":"11445:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11457:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11468:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11453:3:13"},"nodeType":"YulFunctionCall","src":"11453:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11445:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11492:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"11503:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11488:3:13"},"nodeType":"YulFunctionCall","src":"11488:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11511:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"11517:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11507:3:13"},"nodeType":"YulFunctionCall","src":"11507:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11481:6:13"},"nodeType":"YulFunctionCall","src":"11481:47:13"},"nodeType":"YulExpressionStatement","src":"11481:47:13"},{"nodeType":"YulAssignment","src":"11537:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11671:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_0da582174113c4a8ccabf7379918160fd1cb3abd983e4d1b1f8ef1a08042944e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11545:124:13"},"nodeType":"YulFunctionCall","src":"11545:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11537:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_0da582174113c4a8ccabf7379918160fd1cb3abd983e4d1b1f8ef1a08042944e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11415:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11430:4:13","type":""}],"src":"11264:419:13"},{"body":{"nodeType":"YulBlock","src":"11717:152:13","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11734:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11737:77:13","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11727:6:13"},"nodeType":"YulFunctionCall","src":"11727:88:13"},"nodeType":"YulExpressionStatement","src":"11727:88:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11831:1:13","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"11834:4:13","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11824:6:13"},"nodeType":"YulFunctionCall","src":"11824:15:13"},"nodeType":"YulExpressionStatement","src":"11824:15:13"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"11855:1:13","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"11858:4:13","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"11848:6:13"},"nodeType":"YulFunctionCall","src":"11848:15:13"},"nodeType":"YulExpressionStatement","src":"11848:15:13"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"11689:180:13"},{"body":{"nodeType":"YulBlock","src":"11920:146:13","statements":[{"nodeType":"YulAssignment","src":"11930:25:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"11953:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11935:17:13"},"nodeType":"YulFunctionCall","src":"11935:20:13"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"11930:1:13"}]},{"nodeType":"YulAssignment","src":"11964:25:13","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"11987:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"11969:17:13"},"nodeType":"YulFunctionCall","src":"11969:20:13"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"11964:1:13"}]},{"body":{"nodeType":"YulBlock","src":"12011:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12013:16:13"},"nodeType":"YulFunctionCall","src":"12013:18:13"},"nodeType":"YulExpressionStatement","src":"12013:18:13"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12005:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"12008:1:13"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"12002:2:13"},"nodeType":"YulFunctionCall","src":"12002:8:13"},"nodeType":"YulIf","src":"11999:34:13"},{"nodeType":"YulAssignment","src":"12043:17:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12055:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"12058:1:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12051:3:13"},"nodeType":"YulFunctionCall","src":"12051:9:13"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"12043:4:13"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"11906:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"11909:1:13","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"11915:4:13","type":""}],"src":"11875:191:13"},{"body":{"nodeType":"YulBlock","src":"12116:261:13","statements":[{"nodeType":"YulAssignment","src":"12126:25:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12149:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12131:17:13"},"nodeType":"YulFunctionCall","src":"12131:20:13"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"12126:1:13"}]},{"nodeType":"YulAssignment","src":"12160:25:13","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"12183:1:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"12165:17:13"},"nodeType":"YulFunctionCall","src":"12165:20:13"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"12160:1:13"}]},{"body":{"nodeType":"YulBlock","src":"12323:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"12325:16:13"},"nodeType":"YulFunctionCall","src":"12325:18:13"},"nodeType":"YulExpressionStatement","src":"12325:18:13"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12244:1:13"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"12251:66:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"12319:1:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12247:3:13"},"nodeType":"YulFunctionCall","src":"12247:74:13"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"12241:2:13"},"nodeType":"YulFunctionCall","src":"12241:81:13"},"nodeType":"YulIf","src":"12238:107:13"},{"nodeType":"YulAssignment","src":"12355:16:13","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"12366:1:13"},{"name":"y","nodeType":"YulIdentifier","src":"12369:1:13"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12362:3:13"},"nodeType":"YulFunctionCall","src":"12362:9:13"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"12355:3:13"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"12103:1:13","type":""},{"name":"y","nodeType":"YulTypedName","src":"12106:1:13","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"12112:3:13","type":""}],"src":"12072:305:13"},{"body":{"nodeType":"YulBlock","src":"12621:537:13","statements":[{"nodeType":"YulAssignment","src":"12631:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12643:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12654:3:13","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12639:3:13"},"nodeType":"YulFunctionCall","src":"12639:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12631:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12712:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12725:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12736:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12721:3:13"},"nodeType":"YulFunctionCall","src":"12721:17:13"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"12668:43:13"},"nodeType":"YulFunctionCall","src":"12668:71:13"},"nodeType":"YulExpressionStatement","src":"12668:71:13"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"12793:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12806:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12817:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12802:3:13"},"nodeType":"YulFunctionCall","src":"12802:18:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12749:43:13"},"nodeType":"YulFunctionCall","src":"12749:72:13"},"nodeType":"YulExpressionStatement","src":"12749:72:13"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"12875:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12888:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12899:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12884:3:13"},"nodeType":"YulFunctionCall","src":"12884:18:13"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"12831:43:13"},"nodeType":"YulFunctionCall","src":"12831:72:13"},"nodeType":"YulExpressionStatement","src":"12831:72:13"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"12957:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12970:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"12981:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12966:3:13"},"nodeType":"YulFunctionCall","src":"12966:18:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12913:43:13"},"nodeType":"YulFunctionCall","src":"12913:72:13"},"nodeType":"YulExpressionStatement","src":"12913:72:13"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"13039:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13052:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13063:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13048:3:13"},"nodeType":"YulFunctionCall","src":"13048:19:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"12995:43:13"},"nodeType":"YulFunctionCall","src":"12995:73:13"},"nodeType":"YulExpressionStatement","src":"12995:73:13"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"13122:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13135:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"13146:3:13","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13131:3:13"},"nodeType":"YulFunctionCall","src":"13131:19:13"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"13078:43:13"},"nodeType":"YulFunctionCall","src":"13078:73:13"},"nodeType":"YulExpressionStatement","src":"13078:73:13"}]},"name":"abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12553:9:13","type":""},{"name":"value5","nodeType":"YulTypedName","src":"12565:6:13","type":""},{"name":"value4","nodeType":"YulTypedName","src":"12573:6:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"12581:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"12589:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12597:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12605:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12616:4:13","type":""}],"src":"12383:775:13"},{"body":{"nodeType":"YulBlock","src":"13278:34:13","statements":[{"nodeType":"YulAssignment","src":"13288:18:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"13303:3:13"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13288:11:13"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13250:3:13","type":""},{"name":"length","nodeType":"YulTypedName","src":"13255:6:13","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13266:11:13","type":""}],"src":"13164:148:13"},{"body":{"nodeType":"YulBlock","src":"13424:108:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13446:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"13454:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13442:3:13"},"nodeType":"YulFunctionCall","src":"13442:14:13"},{"kind":"number","nodeType":"YulLiteral","src":"13458:66:13","type":"","value":"0x1901000000000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13435:6:13"},"nodeType":"YulFunctionCall","src":"13435:90:13"},"nodeType":"YulExpressionStatement","src":"13435:90:13"}]},"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13416:6:13","type":""}],"src":"13318:214:13"},{"body":{"nodeType":"YulBlock","src":"13702:236:13","statements":[{"nodeType":"YulAssignment","src":"13712:91:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13796:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"13801:1:13","type":"","value":"2"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"13719:76:13"},"nodeType":"YulFunctionCall","src":"13719:84:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13712:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13901:3:13"}],"functionName":{"name":"store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541","nodeType":"YulIdentifier","src":"13812:88:13"},"nodeType":"YulFunctionCall","src":"13812:93:13"},"nodeType":"YulExpressionStatement","src":"13812:93:13"},{"nodeType":"YulAssignment","src":"13914:18:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13925:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"13930:1:13","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13921:3:13"},"nodeType":"YulFunctionCall","src":"13921:11:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13914:3:13"}]}]},"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13690:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13698:3:13","type":""}],"src":"13538:400:13"},{"body":{"nodeType":"YulBlock","src":"13991:32:13","statements":[{"nodeType":"YulAssignment","src":"14001:16:13","value":{"name":"value","nodeType":"YulIdentifier","src":"14012:5:13"},"variableNames":[{"name":"aligned","nodeType":"YulIdentifier","src":"14001:7:13"}]}]},"name":"leftAlign_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13973:5:13","type":""}],"returnVariables":[{"name":"aligned","nodeType":"YulTypedName","src":"13983:7:13","type":""}],"src":"13944:79:13"},{"body":{"nodeType":"YulBlock","src":"14112:74:13","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14129:3:13"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14172:5:13"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"14154:17:13"},"nodeType":"YulFunctionCall","src":"14154:24:13"}],"functionName":{"name":"leftAlign_t_bytes32","nodeType":"YulIdentifier","src":"14134:19:13"},"nodeType":"YulFunctionCall","src":"14134:45:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14122:6:13"},"nodeType":"YulFunctionCall","src":"14122:58:13"},"nodeType":"YulExpressionStatement","src":"14122:58:13"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14100:5:13","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14107:3:13","type":""}],"src":"14029:157:13"},{"body":{"nodeType":"YulBlock","src":"14437:418:13","statements":[{"nodeType":"YulAssignment","src":"14448:155:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14599:3:13"}],"functionName":{"name":"abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14455:142:13"},"nodeType":"YulFunctionCall","src":"14455:148:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14448:3:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14675:6:13"},{"name":"pos","nodeType":"YulIdentifier","src":"14684:3:13"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14613:61:13"},"nodeType":"YulFunctionCall","src":"14613:75:13"},"nodeType":"YulExpressionStatement","src":"14613:75:13"},{"nodeType":"YulAssignment","src":"14697:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14708:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"14713:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14704:3:13"},"nodeType":"YulFunctionCall","src":"14704:12:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14697:3:13"}]},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"14788:6:13"},{"name":"pos","nodeType":"YulIdentifier","src":"14797:3:13"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"14726:61:13"},"nodeType":"YulFunctionCall","src":"14726:75:13"},"nodeType":"YulExpressionStatement","src":"14726:75:13"},{"nodeType":"YulAssignment","src":"14810:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14821:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"14826:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14817:3:13"},"nodeType":"YulFunctionCall","src":"14817:12:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14810:3:13"}]},{"nodeType":"YulAssignment","src":"14839:10:13","value":{"name":"pos","nodeType":"YulIdentifier","src":"14846:3:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14839:3:13"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14408:3:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"14414:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"14422:6:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14433:3:13","type":""}],"src":"14192:663:13"},{"body":{"nodeType":"YulBlock","src":"14967:68:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14989:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"14997:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14985:3:13"},"nodeType":"YulFunctionCall","src":"14985:14:13"},{"hexValue":"45524332303a20696e76616c69642d616464726573732d30","kind":"string","nodeType":"YulLiteral","src":"15001:26:13","type":"","value":"ERC20: invalid-address-0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14978:6:13"},"nodeType":"YulFunctionCall","src":"14978:50:13"},"nodeType":"YulExpressionStatement","src":"14978:50:13"}]},"name":"store_literal_in_memory_63ce1ff982ae44aad094e71f7a32e830e1c192617b027e1604999acc859fb5a0","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14959:6:13","type":""}],"src":"14861:174:13"},{"body":{"nodeType":"YulBlock","src":"15187:220:13","statements":[{"nodeType":"YulAssignment","src":"15197:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15263:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"15268:2:13","type":"","value":"24"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15204:58:13"},"nodeType":"YulFunctionCall","src":"15204:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15197:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15369:3:13"}],"functionName":{"name":"store_literal_in_memory_63ce1ff982ae44aad094e71f7a32e830e1c192617b027e1604999acc859fb5a0","nodeType":"YulIdentifier","src":"15280:88:13"},"nodeType":"YulFunctionCall","src":"15280:93:13"},"nodeType":"YulExpressionStatement","src":"15280:93:13"},{"nodeType":"YulAssignment","src":"15382:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15393:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"15398:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15389:3:13"},"nodeType":"YulFunctionCall","src":"15389:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15382:3:13"}]}]},"name":"abi_encode_t_stringliteral_63ce1ff982ae44aad094e71f7a32e830e1c192617b027e1604999acc859fb5a0_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15175:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15183:3:13","type":""}],"src":"15041:366:13"},{"body":{"nodeType":"YulBlock","src":"15584:248:13","statements":[{"nodeType":"YulAssignment","src":"15594:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15606:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15617:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15602:3:13"},"nodeType":"YulFunctionCall","src":"15602:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15594:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15641:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"15652:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15637:3:13"},"nodeType":"YulFunctionCall","src":"15637:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15660:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"15666:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15656:3:13"},"nodeType":"YulFunctionCall","src":"15656:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15630:6:13"},"nodeType":"YulFunctionCall","src":"15630:47:13"},"nodeType":"YulExpressionStatement","src":"15630:47:13"},{"nodeType":"YulAssignment","src":"15686:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15820:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_63ce1ff982ae44aad094e71f7a32e830e1c192617b027e1604999acc859fb5a0_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15694:124:13"},"nodeType":"YulFunctionCall","src":"15694:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15686:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_63ce1ff982ae44aad094e71f7a32e830e1c192617b027e1604999acc859fb5a0__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15564:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15579:4:13","type":""}],"src":"15413:419:13"},{"body":{"nodeType":"YulBlock","src":"16016:367:13","statements":[{"nodeType":"YulAssignment","src":"16026:27:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16038:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16049:3:13","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16034:3:13"},"nodeType":"YulFunctionCall","src":"16034:19:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16026:4:13"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16107:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16120:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16131:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16116:3:13"},"nodeType":"YulFunctionCall","src":"16116:17:13"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"16063:43:13"},"nodeType":"YulFunctionCall","src":"16063:71:13"},"nodeType":"YulExpressionStatement","src":"16063:71:13"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"16184:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16197:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16208:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16193:3:13"},"nodeType":"YulFunctionCall","src":"16193:18:13"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"16144:39:13"},"nodeType":"YulFunctionCall","src":"16144:68:13"},"nodeType":"YulExpressionStatement","src":"16144:68:13"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"16266:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16279:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16290:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16275:3:13"},"nodeType":"YulFunctionCall","src":"16275:18:13"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"16222:43:13"},"nodeType":"YulFunctionCall","src":"16222:72:13"},"nodeType":"YulExpressionStatement","src":"16222:72:13"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"16348:6:13"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16361:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"16372:2:13","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16357:3:13"},"nodeType":"YulFunctionCall","src":"16357:18:13"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"16304:43:13"},"nodeType":"YulFunctionCall","src":"16304:72:13"},"nodeType":"YulExpressionStatement","src":"16304:72:13"}]},"name":"abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15964:9:13","type":""},{"name":"value3","nodeType":"YulTypedName","src":"15976:6:13","type":""},{"name":"value2","nodeType":"YulTypedName","src":"15984:6:13","type":""},{"name":"value1","nodeType":"YulTypedName","src":"15992:6:13","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16000:6:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16011:4:13","type":""}],"src":"15838:545:13"},{"body":{"nodeType":"YulBlock","src":"16495:65:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16517:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"16525:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16513:3:13"},"nodeType":"YulFunctionCall","src":"16513:14:13"},{"hexValue":"45524332303a20696e76616c69642d7065726d6974","kind":"string","nodeType":"YulLiteral","src":"16529:23:13","type":"","value":"ERC20: invalid-permit"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16506:6:13"},"nodeType":"YulFunctionCall","src":"16506:47:13"},"nodeType":"YulExpressionStatement","src":"16506:47:13"}]},"name":"store_literal_in_memory_9651f421c0a91aae0759487dc95a6c27e3685ef1aa8c7b6a9aaff61a6b425f31","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16487:6:13","type":""}],"src":"16389:171:13"},{"body":{"nodeType":"YulBlock","src":"16712:220:13","statements":[{"nodeType":"YulAssignment","src":"16722:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16788:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"16793:2:13","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16729:58:13"},"nodeType":"YulFunctionCall","src":"16729:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16722:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16894:3:13"}],"functionName":{"name":"store_literal_in_memory_9651f421c0a91aae0759487dc95a6c27e3685ef1aa8c7b6a9aaff61a6b425f31","nodeType":"YulIdentifier","src":"16805:88:13"},"nodeType":"YulFunctionCall","src":"16805:93:13"},"nodeType":"YulExpressionStatement","src":"16805:93:13"},{"nodeType":"YulAssignment","src":"16907:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16918:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"16923:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16914:3:13"},"nodeType":"YulFunctionCall","src":"16914:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16907:3:13"}]}]},"name":"abi_encode_t_stringliteral_9651f421c0a91aae0759487dc95a6c27e3685ef1aa8c7b6a9aaff61a6b425f31_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16700:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16708:3:13","type":""}],"src":"16566:366:13"},{"body":{"nodeType":"YulBlock","src":"17109:248:13","statements":[{"nodeType":"YulAssignment","src":"17119:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17131:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17142:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17127:3:13"},"nodeType":"YulFunctionCall","src":"17127:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17119:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17166:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"17177:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17162:3:13"},"nodeType":"YulFunctionCall","src":"17162:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17185:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"17191:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17181:3:13"},"nodeType":"YulFunctionCall","src":"17181:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17155:6:13"},"nodeType":"YulFunctionCall","src":"17155:47:13"},"nodeType":"YulExpressionStatement","src":"17155:47:13"},{"nodeType":"YulAssignment","src":"17211:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17345:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_9651f421c0a91aae0759487dc95a6c27e3685ef1aa8c7b6a9aaff61a6b425f31_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17219:124:13"},"nodeType":"YulFunctionCall","src":"17219:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17211:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_9651f421c0a91aae0759487dc95a6c27e3685ef1aa8c7b6a9aaff61a6b425f31__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17089:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17104:4:13","type":""}],"src":"16938:419:13"},{"body":{"nodeType":"YulBlock","src":"17469:65:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17491:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"17499:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17487:3:13"},"nodeType":"YulFunctionCall","src":"17487:14:13"},{"hexValue":"45524332303a207065726d69742d65787069726564","kind":"string","nodeType":"YulLiteral","src":"17503:23:13","type":"","value":"ERC20: permit-expired"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17480:6:13"},"nodeType":"YulFunctionCall","src":"17480:47:13"},"nodeType":"YulExpressionStatement","src":"17480:47:13"}]},"name":"store_literal_in_memory_bf0cd640067c3a2c6ea3ebb34ef896c6bfc6649304ad046540a58b1d31406b7f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17461:6:13","type":""}],"src":"17363:171:13"},{"body":{"nodeType":"YulBlock","src":"17686:220:13","statements":[{"nodeType":"YulAssignment","src":"17696:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17762:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"17767:2:13","type":"","value":"21"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17703:58:13"},"nodeType":"YulFunctionCall","src":"17703:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"17696:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17868:3:13"}],"functionName":{"name":"store_literal_in_memory_bf0cd640067c3a2c6ea3ebb34ef896c6bfc6649304ad046540a58b1d31406b7f","nodeType":"YulIdentifier","src":"17779:88:13"},"nodeType":"YulFunctionCall","src":"17779:93:13"},"nodeType":"YulExpressionStatement","src":"17779:93:13"},{"nodeType":"YulAssignment","src":"17881:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17892:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"17897:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17888:3:13"},"nodeType":"YulFunctionCall","src":"17888:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"17881:3:13"}]}]},"name":"abi_encode_t_stringliteral_bf0cd640067c3a2c6ea3ebb34ef896c6bfc6649304ad046540a58b1d31406b7f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17674:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"17682:3:13","type":""}],"src":"17540:366:13"},{"body":{"nodeType":"YulBlock","src":"18083:248:13","statements":[{"nodeType":"YulAssignment","src":"18093:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18105:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18116:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18101:3:13"},"nodeType":"YulFunctionCall","src":"18101:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18093:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18140:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"18151:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18136:3:13"},"nodeType":"YulFunctionCall","src":"18136:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18159:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"18165:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18155:3:13"},"nodeType":"YulFunctionCall","src":"18155:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18129:6:13"},"nodeType":"YulFunctionCall","src":"18129:47:13"},"nodeType":"YulExpressionStatement","src":"18129:47:13"},{"nodeType":"YulAssignment","src":"18185:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"18319:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_bf0cd640067c3a2c6ea3ebb34ef896c6bfc6649304ad046540a58b1d31406b7f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18193:124:13"},"nodeType":"YulFunctionCall","src":"18193:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"18185:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_bf0cd640067c3a2c6ea3ebb34ef896c6bfc6649304ad046540a58b1d31406b7f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18063:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"18078:4:13","type":""}],"src":"17912:419:13"},{"body":{"nodeType":"YulBlock","src":"18443:115:13","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18465:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"18473:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18461:3:13"},"nodeType":"YulFunctionCall","src":"18461:14:13"},{"hexValue":"45524332303a20696e76616c6964207369676e6174757265202773272076616c","kind":"string","nodeType":"YulLiteral","src":"18477:34:13","type":"","value":"ERC20: invalid signature 's' val"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18454:6:13"},"nodeType":"YulFunctionCall","src":"18454:58:13"},"nodeType":"YulExpressionStatement","src":"18454:58:13"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"18533:6:13"},{"kind":"number","nodeType":"YulLiteral","src":"18541:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18529:3:13"},"nodeType":"YulFunctionCall","src":"18529:15:13"},{"hexValue":"7565","kind":"string","nodeType":"YulLiteral","src":"18546:4:13","type":"","value":"ue"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18522:6:13"},"nodeType":"YulFunctionCall","src":"18522:29:13"},"nodeType":"YulExpressionStatement","src":"18522:29:13"}]},"name":"store_literal_in_memory_33c8b2e521d57fe3b657b4684a07c4c398e0034c4b4c28c2e83491c0d3ff9c94","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"18435:6:13","type":""}],"src":"18337:221:13"},{"body":{"nodeType":"YulBlock","src":"18710:220:13","statements":[{"nodeType":"YulAssignment","src":"18720:74:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18786:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"18791:2:13","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18727:58:13"},"nodeType":"YulFunctionCall","src":"18727:67:13"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18720:3:13"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18892:3:13"}],"functionName":{"name":"store_literal_in_memory_33c8b2e521d57fe3b657b4684a07c4c398e0034c4b4c28c2e83491c0d3ff9c94","nodeType":"YulIdentifier","src":"18803:88:13"},"nodeType":"YulFunctionCall","src":"18803:93:13"},"nodeType":"YulExpressionStatement","src":"18803:93:13"},{"nodeType":"YulAssignment","src":"18905:19:13","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18916:3:13"},{"kind":"number","nodeType":"YulLiteral","src":"18921:2:13","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18912:3:13"},"nodeType":"YulFunctionCall","src":"18912:12:13"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"18905:3:13"}]}]},"name":"abi_encode_t_stringliteral_33c8b2e521d57fe3b657b4684a07c4c398e0034c4b4c28c2e83491c0d3ff9c94_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"18698:3:13","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18706:3:13","type":""}],"src":"18564:366:13"},{"body":{"nodeType":"YulBlock","src":"19107:248:13","statements":[{"nodeType":"YulAssignment","src":"19117:26:13","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19129:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19140:2:13","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19125:3:13"},"nodeType":"YulFunctionCall","src":"19125:18:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19117:4:13"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19164:9:13"},{"kind":"number","nodeType":"YulLiteral","src":"19175:1:13","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19160:3:13"},"nodeType":"YulFunctionCall","src":"19160:17:13"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19183:4:13"},{"name":"headStart","nodeType":"YulIdentifier","src":"19189:9:13"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19179:3:13"},"nodeType":"YulFunctionCall","src":"19179:20:13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19153:6:13"},"nodeType":"YulFunctionCall","src":"19153:47:13"},"nodeType":"YulExpressionStatement","src":"19153:47:13"},{"nodeType":"YulAssignment","src":"19209:139:13","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19343:4:13"}],"functionName":{"name":"abi_encode_t_stringliteral_33c8b2e521d57fe3b657b4684a07c4c398e0034c4b4c28c2e83491c0d3ff9c94_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19217:124:13"},"nodeType":"YulFunctionCall","src":"19217:131:13"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19209:4:13"}]}]},"name":"abi_encode_tuple_t_stringliteral_33c8b2e521d57fe3b657b4684a07c4c398e0034c4b4c28c2e83491c0d3ff9c94__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19087:9:13","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19102:4:13","type":""}],"src":"18936:419:13"},{"body":{"nodeType":"YulBlock","src":"19404:190:13","statements":[{"nodeType":"YulAssignment","src":"19414:33:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19441:5:13"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"19423:17:13"},"nodeType":"YulFunctionCall","src":"19423:24:13"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"19414:5:13"}]},{"body":{"nodeType":"YulBlock","src":"19537:22:13","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"19539:16:13"},"nodeType":"YulFunctionCall","src":"19539:18:13"},"nodeType":"YulExpressionStatement","src":"19539:18:13"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19462:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"19469:66:13","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"19459:2:13"},"nodeType":"YulFunctionCall","src":"19459:77:13"},"nodeType":"YulIf","src":"19456:103:13"},{"nodeType":"YulAssignment","src":"19568:20:13","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19579:5:13"},{"kind":"number","nodeType":"YulLiteral","src":"19586:1:13","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19575:3:13"},"nodeType":"YulFunctionCall","src":"19575:13:13"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"19568:3:13"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19390:5:13","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"19400:3:13","type":""}],"src":"19361:233:13"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint8t_bytes32t_bytes32(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6 {\n        if slt(sub(dataEnd, headStart), 224) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint8(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 192\n\n            value6 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Sender not owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_339b3d1a68856fde71e73bcd8052c5ff4ae810ba3170b1d4b01989497784caf3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_cf1bb0c360361ff22414840c5832508d0a49f594e9c1aa6bd1b509b1f4b27b06(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient-balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_cf1bb0c360361ff22414840c5832508d0a49f594e9c1aa6bd1b509b1f4b27b06_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_cf1bb0c360361ff22414840c5832508d0a49f594e9c1aa6bd1b509b1f4b27b06(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_cf1bb0c360361ff22414840c5832508d0a49f594e9c1aa6bd1b509b1f4b27b06__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_cf1bb0c360361ff22414840c5832508d0a49f594e9c1aa6bd1b509b1f4b27b06_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0da582174113c4a8ccabf7379918160fd1cb3abd983e4d1b1f8ef1a08042944e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient-allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_0da582174113c4a8ccabf7379918160fd1cb3abd983e4d1b1f8ef1a08042944e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_0da582174113c4a8ccabf7379918160fd1cb3abd983e4d1b1f8ef1a08042944e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0da582174113c4a8ccabf7379918160fd1cb3abd983e4d1b1f8ef1a08042944e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0da582174113c4a8ccabf7379918160fd1cb3abd983e4d1b1f8ef1a08042944e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_tuple_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__to_t_bytes32_t_address_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 192)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(memPtr) {\n\n        mstore(add(memPtr, 0), 0x1901000000000000000000000000000000000000000000000000000000000000)\n\n    }\n\n    function abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 2)\n        store_literal_in_memory_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541(pos)\n        end := add(pos, 2)\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_t_bytes32_t_bytes32__to_t_string_memory_ptr_t_bytes32_t_bytes32__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_63ce1ff982ae44aad094e71f7a32e830e1c192617b027e1604999acc859fb5a0(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: invalid-address-0\")\n\n    }\n\n    function abi_encode_t_stringliteral_63ce1ff982ae44aad094e71f7a32e830e1c192617b027e1604999acc859fb5a0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_63ce1ff982ae44aad094e71f7a32e830e1c192617b027e1604999acc859fb5a0(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_63ce1ff982ae44aad094e71f7a32e830e1c192617b027e1604999acc859fb5a0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63ce1ff982ae44aad094e71f7a32e830e1c192617b027e1604999acc859fb5a0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_bytes32_t_uint8_t_bytes32_t_bytes32__to_t_bytes32_t_uint8_t_bytes32_t_bytes32__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_9651f421c0a91aae0759487dc95a6c27e3685ef1aa8c7b6a9aaff61a6b425f31(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: invalid-permit\")\n\n    }\n\n    function abi_encode_t_stringliteral_9651f421c0a91aae0759487dc95a6c27e3685ef1aa8c7b6a9aaff61a6b425f31_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_9651f421c0a91aae0759487dc95a6c27e3685ef1aa8c7b6a9aaff61a6b425f31(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9651f421c0a91aae0759487dc95a6c27e3685ef1aa8c7b6a9aaff61a6b425f31__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9651f421c0a91aae0759487dc95a6c27e3685ef1aa8c7b6a9aaff61a6b425f31_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_bf0cd640067c3a2c6ea3ebb34ef896c6bfc6649304ad046540a58b1d31406b7f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: permit-expired\")\n\n    }\n\n    function abi_encode_t_stringliteral_bf0cd640067c3a2c6ea3ebb34ef896c6bfc6649304ad046540a58b1d31406b7f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_bf0cd640067c3a2c6ea3ebb34ef896c6bfc6649304ad046540a58b1d31406b7f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_bf0cd640067c3a2c6ea3ebb34ef896c6bfc6649304ad046540a58b1d31406b7f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_bf0cd640067c3a2c6ea3ebb34ef896c6bfc6649304ad046540a58b1d31406b7f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_33c8b2e521d57fe3b657b4684a07c4c398e0034c4b4c28c2e83491c0d3ff9c94(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: invalid signature 's' val\")\n\n        mstore(add(memPtr, 32), \"ue\")\n\n    }\n\n    function abi_encode_t_stringliteral_33c8b2e521d57fe3b657b4684a07c4c398e0034c4b4c28c2e83491c0d3ff9c94_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_33c8b2e521d57fe3b657b4684a07c4c398e0034c4b4c28c2e83491c0d3ff9c94(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_33c8b2e521d57fe3b657b4684a07c4c398e0034c4b4c28c2e83491c0d3ff9c94__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_33c8b2e521d57fe3b657b4684a07c4c398e0034c4b4c28c2e83491c0d3ff9c94_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n","id":13,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b506004361061011d5760003560e01c806306fdde0314610122578063095ea7b31461014057806313af40351461016057806318160ddd1461017557806323b872dd1461018b57806327c97fa51461019e57806330adf81f146101b1578063313ce567146101c65780633644e515146101e057806340c10f19146101e957806370a08231146101fc5780637ecebe001461021c5780638da5cb5b1461023c57806395d89b411461025c5780639dc29fac14610264578063a9059cbb14610277578063b6a5d7de1461028a578063b91816111461029d578063d505accf146102c0578063da46098c146102d3578063dd62ed3e1461030d578063e30443bc14610338578063fe9fbb8014610362575b600080fd5b61012a61038e565b6040516101379190610aff565b60405180910390f35b61015361014e366004610b51565b61041c565b6040516101379190610b98565b61017361016e366004610ba6565b610475565b005b61017e60095481565b6040516101379190610bd5565b610153610199366004610be3565b6104ca565b6101736101ac366004610ba6565b61061e565b61017e60008051602061109183398151915281565b6002546101d39060ff1681565b6040516101379190610c3c565b61017e60065481565b6101736101f7366004610b51565b610669565b61017e61020a366004610ba6565b60036020526000908152604090205481565b61017e61022a366004610ba6565b60056020526000908152604090205481565b60075461024f906001600160a01b031681565b6040516101379190610c53565b61012a6106a1565b610173610272366004610b51565b6106ae565b610153610285366004610b51565b6106e2565b610173610298366004610ba6565b6106f6565b6101536102ab366004610ba6565b60086020526000908152604090205460ff1681565b6101736102ce366004610c75565b61074b565b6101736102e1366004610be3565b6001600160a01b0392831660009081526004602090815260408083209490951682529290925291902055565b61017e61031b366004610d14565b600460209081526000928352604080842090915290825290205481565b610173610346366004610b51565b6001600160a01b03909116600090815260036020526040902055565b610153610370366004610ba6565b6001600160a01b031660009081526008602052604090205460ff1690565b6000805461039b90610d5d565b80601f01602080910402602001604051908101604052809291908181526020018280546103c790610d5d565b80156104145780601f106103e957610100808354040283529160200191610414565b820191906000526020600020905b8154815290600101906020018083116103f757829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290916000805160206110b183398151915290610463908690610bd5565b60405180910390a35060015b92915050565b6007546001600160a01b031633146104a85760405162461bcd60e51b815260040161049f90610db4565b60405180910390fd5b600780546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b038316600090815260036020526040812054828110156105035760405162461bcd60e51b815260040161049f90610df6565b6001600160a01b0385163314610591576001600160a01b0385166000908152600460209081526040808320338452909152902054600019811461058f57838110156105605760405162461bcd60e51b815260040161049f90610e3a565b61056a8482610e60565b6001600160a01b03871660009081526004602090815260408083203384529091529020555b505b61059b8382610e60565b6001600160a01b0380871660009081526003602052604080822093909355908616815220546105cb908490610e77565b6001600160a01b0380861660008181526003602052604090819020939093559151908716906000805160206110718339815191529061060b908790610bd5565b60405180910390a3506001949350505050565b6007546001600160a01b031633146106485760405162461bcd60e51b815260040161049f90610db4565b6001600160a01b03166000908152600860205260409020805460ff19169055565b6007546001600160a01b031633146106935760405162461bcd60e51b815260040161049f90610db4565b61069d828261095b565b5050565b6001805461039b90610d5d565b6007546001600160a01b031633146106d85760405162461bcd60e51b815260040161049f90610db4565b61069d82826109ea565b60006106ef3384846104ca565b9392505050565b6007546001600160a01b031633146107205760405162461bcd60e51b815260040161049f90610db4565b610748816001600160a01b03166000908152600860205260409020805460ff19166001179055565b50565b6006546001600160a01b038816600090815260056020908152604080832054905192939261079292600080516020611091833981519152928d928d928d92918d9101610e8f565b604051602081830303815290604052805190602001206040516020016107b9929190610ee9565b60408051601f19818403018152919052805160209091012090506001600160a01b0388166107f95760405162461bcd60e51b815260040161049f90610f49565b6001818585856040516000815260200160405260405161081c9493929190610f59565b6020604051602081039080840390855afa15801561083e573d6000803e3d6000fd5b505050602060405103516001600160a01b0316886001600160a01b0316146108785760405162461bcd60e51b815260040161049f90610fc3565b8415806108855750844211155b6108a15760405162461bcd60e51b815260040161049f90610fff565b6fa2a8918ca85bafe22016d0b997e4df60600160ff1b038211156108d75760405162461bcd60e51b815260040161049f9061100f565b6001600160a01b03881660009081526005602052604081208054916108fb83611055565b90915550506001600160a01b038089166000818152600460209081526040808320948c168084529490915290819020899055516000805160206110b183398151915290610949908a90610bd5565b60405180910390a35050505050505050565b6001600160a01b03821660009081526003602052604090205461097f908290610e77565b6001600160a01b038316600090815260036020526040812091909155600980548392906109ad908490610e77565b90915550506040516001600160a01b03831690600090600080516020611071833981519152906109de908590610bd5565b60405180910390a35050565b6001600160a01b03821660009081526003602052604090205481811015610a29576001600160a01b038316600090815260036020526040812055610a4d565b610a338282610e60565b6001600160a01b0384166000908152600360205260409020555b8160096000828254610a5f9190610e60565b90915550506040516000906001600160a01b0385169060008051602061107183398151915290610a90908690610bd5565b60405180910390a3505050565b60005b83811015610ab8578181015183820152602001610aa0565b83811115610ac7576000848401525b50505050565b6000610ad7825190565b808452602084019350610aee818560208601610a9d565b601f01601f19169290920192915050565b602080825281016106ef8184610acd565b60006001600160a01b03821661046f565b610b2a81610b10565b811461074857600080fd5b803561046f81610b21565b80610b2a565b803561046f81610b40565b60008060408385031215610b6757610b67600080fd5b6000610b738585610b35565b9250506020610b8485828601610b46565b9150509250929050565b8015155b82525050565b6020810161046f8284610b8e565b600060208284031215610bbb57610bbb600080fd5b6000610bc78484610b35565b949350505050565b80610b92565b6020810161046f8284610bcf565b600080600060608486031215610bfb57610bfb600080fd5b6000610c078686610b35565b9350506020610c1886828701610b35565b9250506040610c2986828701610b46565b9150509250925092565b60ff8116610b92565b6020810161046f8284610c33565b610b9281610b10565b6020810161046f8284610c4a565b60ff8116610b2a565b803561046f81610c61565b600080600080600080600060e0888a031215610c9357610c93600080fd5b6000610c9f8a8a610b35565b9750506020610cb08a828b01610b35565b9650506040610cc18a828b01610b46565b9550506060610cd28a828b01610b46565b9450506080610ce38a828b01610c6a565b93505060a0610cf48a828b01610b46565b92505060c0610d058a828b01610b46565b91505092959891949750929550565b60008060408385031215610d2a57610d2a600080fd5b6000610d368585610b35565b9250506020610b8485828601610b35565b634e487b7160e01b600052602260045260246000fd5b600281046001821680610d7157607f821691505b60208210811415610d8457610d84610d47565b50919050565b601081526000602082016f29b2b73232b9103737ba1037bbb732b960811b815291505b5060200190565b6020808252810161046f81610d8a565b601b81526000602082017a45524332303a20696e73756666696369656e742d62616c616e636560281b81529150610dad565b6020808252810161046f81610dc4565b601d81526000602082017f45524332303a20696e73756666696369656e742d616c6c6f77616e636500000081529150610dad565b6020808252810161046f81610e06565b634e487b7160e01b600052601160045260246000fd5b600082821015610e7257610e72610e4a565b500390565b60008219821115610e8a57610e8a610e4a565b500190565b60c08101610e9d8289610bcf565b610eaa6020830188610c4a565b610eb76040830187610c4a565b610ec46060830186610bcf565b610ed16080830185610bcf565b610ede60a0830184610bcf565b979650505050505050565b61190160f01b81526002016000610f008285610bcf565b602082019150610f108284610bcf565b5060200192915050565b6018815260006020820177045524332303a20696e76616c69642d616464726573732d360441b81529150610dad565b6020808252810161046f81610f1a565b60808101610f678287610bcf565b610f746020830186610c33565b610f816040830185610bcf565b610f8e6060830184610bcf565b95945050505050565b6015815260006020820174115490cc8c0e881a5b9d985b1a590b5c195c9b5a5d605a1b81529150610dad565b6020808252810161046f81610f97565b6015815260006020820174115490cc8c0e881c195c9b5a5d0b595e1c1a5c9959605a1b81529150610dad565b6020808252810161046f81610fd3565b6020808252810161046f81602281527f45524332303a20696e76616c6964207369676e6174757265202773272076616c602082015261756560f01b604082015260600190565b600060001982141561106957611069610e4a565b506001019056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925a2646970667358221220394462f28ac639d0355bdfbdb944f25ab55a5dd9b30f8d11d8caf3e0fd23b9ba64736f6c634300080a0033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x122 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x140 JUMPI DUP1 PUSH4 0x13AF4035 EQ PUSH2 0x160 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x175 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x18B JUMPI DUP1 PUSH4 0x27C97FA5 EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x1B1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x3644E515 EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1E9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25C JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x277 JUMPI DUP1 PUSH4 0xB6A5D7DE EQ PUSH2 0x28A JUMPI DUP1 PUSH4 0xB9181611 EQ PUSH2 0x29D JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0xDA46098C EQ PUSH2 0x2D3 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x30D JUMPI DUP1 PUSH4 0xE30443BC EQ PUSH2 0x338 JUMPI DUP1 PUSH4 0xFE9FBB80 EQ PUSH2 0x362 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x12A PUSH2 0x38E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xAFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x153 PUSH2 0x14E CALLDATASIZE PUSH1 0x4 PUSH2 0xB51 JUMP JUMPDEST PUSH2 0x41C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xB98 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x16E CALLDATASIZE PUSH1 0x4 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x475 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17E PUSH1 0x9 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x199 CALLDATASIZE PUSH1 0x4 PUSH2 0xBE3 JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH2 0x173 PUSH2 0x1AC CALLDATASIZE PUSH1 0x4 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST PUSH2 0x17E PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1091 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x1D3 SWAP1 PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xC3C JUMP JUMPDEST PUSH2 0x17E PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xB51 JUMP JUMPDEST PUSH2 0x669 JUMP JUMPDEST PUSH2 0x17E PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x17E PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH2 0x24F SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0xC53 JUMP JUMPDEST PUSH2 0x12A PUSH2 0x6A1 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x272 CALLDATASIZE PUSH1 0x4 PUSH2 0xB51 JUMP JUMPDEST PUSH2 0x6AE JUMP JUMPDEST PUSH2 0x153 PUSH2 0x285 CALLDATASIZE PUSH1 0x4 PUSH2 0xB51 JUMP JUMPDEST PUSH2 0x6E2 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x298 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA6 JUMP JUMPDEST PUSH2 0x6F6 JUMP JUMPDEST PUSH2 0x153 PUSH2 0x2AB CALLDATASIZE PUSH1 0x4 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0xC75 JUMP JUMPDEST PUSH2 0x74B JUMP JUMPDEST PUSH2 0x173 PUSH2 0x2E1 CALLDATASIZE PUSH1 0x4 PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP6 AND DUP3 MSTORE SWAP3 SWAP1 SWAP3 MSTORE SWAP2 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0x17E PUSH2 0x31B CALLDATASIZE PUSH1 0x4 PUSH2 0xD14 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x173 PUSH2 0x346 CALLDATASIZE PUSH1 0x4 PUSH2 0xB51 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMP JUMPDEST PUSH2 0x153 PUSH2 0x370 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH2 0x39B SWAP1 PUSH2 0xD5D JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3C7 SWAP1 PUSH2 0xD5D JUMP JUMPDEST DUP1 ISZERO PUSH2 0x414 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3E9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x414 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x3F7 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP6 SWAP1 SSTORE MLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x10B1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x463 SWAP1 DUP7 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP1 PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x7 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP3 DUP2 LT ISZERO PUSH2 0x503 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP1 PUSH2 0xDF6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND CALLER EQ PUSH2 0x591 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0x0 NOT DUP2 EQ PUSH2 0x58F JUMPI DUP4 DUP2 LT ISZERO PUSH2 0x560 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP1 PUSH2 0xE3A JUMP JUMPDEST PUSH2 0x56A DUP5 DUP3 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST POP JUMPDEST PUSH2 0x59B DUP4 DUP3 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP8 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP7 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x5CB SWAP1 DUP5 SWAP1 PUSH2 0xE77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 DUP2 SWAP1 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 DUP8 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1071 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x60B SWAP1 DUP8 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP1 PUSH2 0xDB4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x693 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP1 PUSH2 0xDB4 JUMP JUMPDEST PUSH2 0x69D DUP3 DUP3 PUSH2 0x95B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 SLOAD PUSH2 0x39B SWAP1 PUSH2 0xD5D JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x6D8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP1 PUSH2 0xDB4 JUMP JUMPDEST PUSH2 0x69D DUP3 DUP3 PUSH2 0x9EA JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6EF CALLER DUP5 DUP5 PUSH2 0x4CA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x7 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x720 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP1 PUSH2 0xDB4 JUMP JUMPDEST PUSH2 0x748 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x6 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD SWAP1 MLOAD SWAP3 SWAP4 SWAP3 PUSH2 0x792 SWAP3 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1091 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP3 DUP14 SWAP3 DUP14 SWAP3 DUP14 SWAP3 SWAP2 DUP14 SWAP2 ADD PUSH2 0xE8F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x7B9 SWAP3 SWAP2 SWAP1 PUSH2 0xEE9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD KECCAK256 SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH2 0x7F9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP1 PUSH2 0xF49 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP6 DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x81C SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xF59 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 SUB SWAP1 DUP1 DUP5 SUB SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x83E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP PUSH1 0x20 PUSH1 0x40 MLOAD SUB MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x878 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP1 PUSH2 0xFC3 JUMP JUMPDEST DUP5 ISZERO DUP1 PUSH2 0x885 JUMPI POP DUP5 TIMESTAMP GT ISZERO JUMPDEST PUSH2 0x8A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP1 PUSH2 0xFFF JUMP JUMPDEST PUSH16 0xA2A8918CA85BAFE22016D0B997E4DF60 PUSH1 0x1 PUSH1 0xFF SHL SUB DUP3 GT ISZERO PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x49F SWAP1 PUSH2 0x100F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x8FB DUP4 PUSH2 0x1055 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP10 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP13 AND DUP1 DUP5 MSTORE SWAP5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 SWAP1 KECCAK256 DUP10 SWAP1 SSTORE MLOAD PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x10B1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x949 SWAP1 DUP11 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x97F SWAP1 DUP3 SWAP1 PUSH2 0xE77 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x9 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x9AD SWAP1 DUP5 SWAP1 PUSH2 0xE77 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1071 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0x9DE SWAP1 DUP6 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA29 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE PUSH2 0xA4D JUMP JUMPDEST PUSH2 0xA33 DUP3 DUP3 PUSH2 0xE60 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SSTORE JUMPDEST DUP2 PUSH1 0x9 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xA5F SWAP2 SWAP1 PUSH2 0xE60 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1071 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 PUSH2 0xA90 SWAP1 DUP7 SWAP1 PUSH2 0xBD5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xAB8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xAA0 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAC7 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAD7 DUP3 MLOAD SWAP1 JUMP JUMPDEST DUP1 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP PUSH2 0xAEE DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA9D JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x6EF DUP2 DUP5 PUSH2 0xACD JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x46F JUMP JUMPDEST PUSH2 0xB2A DUP2 PUSH2 0xB10 JUMP JUMPDEST DUP2 EQ PUSH2 0x748 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x46F DUP2 PUSH2 0xB21 JUMP JUMPDEST DUP1 PUSH2 0xB2A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x46F DUP2 PUSH2 0xB40 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB67 JUMPI PUSH2 0xB67 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB73 DUP6 DUP6 PUSH2 0xB35 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB84 DUP6 DUP3 DUP7 ADD PUSH2 0xB46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST DUP1 ISZERO ISZERO JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x46F DUP3 DUP5 PUSH2 0xB8E JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBBB JUMPI PUSH2 0xBBB PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xBC7 DUP5 DUP5 PUSH2 0xB35 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP1 PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x46F DUP3 DUP5 PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xBFB JUMPI PUSH2 0xBFB PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC07 DUP7 DUP7 PUSH2 0xB35 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xC18 DUP7 DUP3 DUP8 ADD PUSH2 0xB35 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xC29 DUP7 DUP3 DUP8 ADD PUSH2 0xB46 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH2 0xB92 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x46F DUP3 DUP5 PUSH2 0xC33 JUMP JUMPDEST PUSH2 0xB92 DUP2 PUSH2 0xB10 JUMP JUMPDEST PUSH1 0x20 DUP2 ADD PUSH2 0x46F DUP3 DUP5 PUSH2 0xC4A JUMP JUMPDEST PUSH1 0xFF DUP2 AND PUSH2 0xB2A JUMP JUMPDEST DUP1 CALLDATALOAD PUSH2 0x46F DUP2 PUSH2 0xC61 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0xC93 JUMPI PUSH2 0xC93 PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xC9F DUP11 DUP11 PUSH2 0xB35 JUMP JUMPDEST SWAP8 POP POP PUSH1 0x20 PUSH2 0xCB0 DUP11 DUP3 DUP12 ADD PUSH2 0xB35 JUMP JUMPDEST SWAP7 POP POP PUSH1 0x40 PUSH2 0xCC1 DUP11 DUP3 DUP12 ADD PUSH2 0xB46 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x60 PUSH2 0xCD2 DUP11 DUP3 DUP12 ADD PUSH2 0xB46 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x80 PUSH2 0xCE3 DUP11 DUP3 DUP12 ADD PUSH2 0xC6A JUMP JUMPDEST SWAP4 POP POP PUSH1 0xA0 PUSH2 0xCF4 DUP11 DUP3 DUP12 ADD PUSH2 0xB46 JUMP JUMPDEST SWAP3 POP POP PUSH1 0xC0 PUSH2 0xD05 DUP11 DUP3 DUP12 ADD PUSH2 0xB46 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD2A JUMPI PUSH2 0xD2A PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xD36 DUP6 DUP6 PUSH2 0xB35 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xB84 DUP6 DUP3 DUP7 ADD PUSH2 0xB35 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 DIV PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xD71 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xD84 JUMPI PUSH2 0xD84 PUSH2 0xD47 JUMP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x10 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH16 0x29B2B73232B9103737BA1037BBB732B9 PUSH1 0x81 SHL DUP2 MSTORE SWAP2 POP JUMPDEST POP PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x46F DUP2 PUSH2 0xD8A JUMP JUMPDEST PUSH1 0x1B DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH27 0x45524332303A20696E73756666696369656E742D62616C616E6365 PUSH1 0x28 SHL DUP2 MSTORE SWAP2 POP PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x46F DUP2 PUSH2 0xDC4 JUMP JUMPDEST PUSH1 0x1D DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH32 0x45524332303A20696E73756666696369656E742D616C6C6F77616E6365000000 DUP2 MSTORE SWAP2 POP PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x46F DUP2 PUSH2 0xE06 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xE72 JUMPI PUSH2 0xE72 PUSH2 0xE4A JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xE8A JUMPI PUSH2 0xE8A PUSH2 0xE4A JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD PUSH2 0xE9D DUP3 DUP10 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0xEAA PUSH1 0x20 DUP4 ADD DUP9 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0xEB7 PUSH1 0x40 DUP4 ADD DUP8 PUSH2 0xC4A JUMP JUMPDEST PUSH2 0xEC4 PUSH1 0x60 DUP4 ADD DUP7 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0xED1 PUSH1 0x80 DUP4 ADD DUP6 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0xEDE PUSH1 0xA0 DUP4 ADD DUP5 PUSH2 0xBCF JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1901 PUSH1 0xF0 SHL DUP2 MSTORE PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0xF00 DUP3 DUP6 PUSH2 0xBCF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0xF10 DUP3 DUP5 PUSH2 0xBCF JUMP JUMPDEST POP PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x18 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH24 0x45524332303A20696E76616C69642D616464726573732D3 PUSH1 0x44 SHL DUP2 MSTORE SWAP2 POP PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x46F DUP2 PUSH2 0xF1A JUMP JUMPDEST PUSH1 0x80 DUP2 ADD PUSH2 0xF67 DUP3 DUP8 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0xF74 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0xC33 JUMP JUMPDEST PUSH2 0xF81 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0xBCF JUMP JUMPDEST PUSH2 0xF8E PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0xBCF JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x15 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH21 0x115490CC8C0E881A5B9D985B1A590B5C195C9B5A5D PUSH1 0x5A SHL DUP2 MSTORE SWAP2 POP PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x46F DUP2 PUSH2 0xF97 JUMP JUMPDEST PUSH1 0x15 DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD PUSH21 0x115490CC8C0E881C195C9B5A5D0B595E1C1A5C9959 PUSH1 0x5A SHL DUP2 MSTORE SWAP2 POP PUSH2 0xDAD JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x46F DUP2 PUSH2 0xFD3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 ADD PUSH2 0x46F DUP2 PUSH1 0x22 DUP2 MSTORE PUSH32 0x45524332303A20696E76616C6964207369676E6174757265202773272076616C PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x7565 PUSH1 0xF0 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1069 JUMPI PUSH2 0x1069 PUSH2 0xE4A JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID 0xDD CALLCODE MSTORE 0xAD SHL 0xE2 0xC8 SWAP12 PUSH10 0xC2B068FC378DAA952BA7 CALL PUSH4 0xC4A11628 CREATE2 GAS 0x4D CREATE2 0x23 0xB3 0xEF PUSH15 0x71EDAE12B1B97F4D1F60370FEF1010 0x5F LOG2 STATICCALL 0xAE ADD 0x26 GT 0x4A AND SWAP13 PUSH5 0x845D6126C9 DUP13 JUMPDEST 0xE1 0xE5 0xEB 0xEC PUSH30 0x5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925A264697066 PUSH20 0x58221220394462F28AC639D0355BDFBDB944F25A 0xB5 GAS 0x5D 0xD9 0xB3 0xF DUP14 GT 0xD8 0xCA RETURN 0xE0 REVERT 0x23 0xB9 0xBA PUSH5 0x736F6C6343 STOP ADDMOD EXP STOP CALLER ","sourceMap":"202:474:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;589:18:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7615:343;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1526:76:7:-;;;;;;:::i;:::-;;:::i;:::-;;881:26:9;;;;;;;;;;;;;:::i;4319:1493:8:-;;;;;;:::i;:::-;;:::i;1348:93:7:-;;;;;;:::i;:::-;;:::i;1467:116:8:-;;-1:-1:-1;;;;;;;;;;;1467:116:8;;761:30;;;;;;;;;;;;;;;;:::i;1275:40::-;;;;;;1063:105:9;;;;;;:::i;:::-;;:::i;848:53:8:-;;;;;;:::i;:::-;;;;;;;;;;;;;;1135:50;;;;;;:::i;:::-;;;;;;;;;;;;;;207:20:7;;;;;-1:-1:-1;;;;;207:20:7;;;;;;;;;;:::i;650:29:8:-;;;:::i;1891:105:9:-;;;;;;:::i;:::-;;:::i;3708:231:8:-;;;;;;:::i;:::-;;:::i;1139:83:7:-;;;;;;:::i;:::-;;:::i;294:42::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;9023:1667:8;;;;;;:::i;:::-;;:::i;512:162:12:-;;;;;;:::i;:::-;-1:-1:-1;;;;;632:17:12;;;;;;;:9;:17;;;;;;;;:26;;;;;;;;;;;;;:35;512:162;988:73:8;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;408:98:12;;;;;;:::i;:::-;-1:-1:-1;;;;;476:14:12;;;;;;;:9;:14;;;;;:23;408:98;934:101:7;;;;;;:::i;:::-;-1:-1:-1;;;;;1013:15:7;990:4;1013:15;;;:10;:15;;;;;;;;;934:101;589:18:8;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;7615:343::-;7805:10;7720:4;7795:21;;;:9;:21;;;;;;;;-1:-1:-1;;;;;7795:30:8;;;;;;;;;;:39;;;7893:37;7720:4;;7795:30;;-1:-1:-1;;;;;;;;;;;7893:37:8;;;7828:6;;7893:37;:::i;:::-;;;;;;;;-1:-1:-1;7947:4:8;7615:343;;;;;:::o;1526:76:7:-;562:5;;-1:-1:-1;;;;;562:5:7;548:10;:19;540:48;;;;-1:-1:-1;;;540:48:7;;;;;;;:::i;:::-;;;;;;;;;1584:5:::1;:11:::0;;-1:-1:-1;;;;;;1584:11:7::1;-1:-1:-1::0;;;;;1584:11:7;;;::::1;::::0;;;::::1;::::0;;1526:76::o;4319:1493:8:-;-1:-1:-1;;;;;4528:18:8;;4456:4;4528:18;;;:9;:18;;;;;;4564:17;;;;4556:57;;;;-1:-1:-1;;;4556:57:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;4679:21:8;;4690:10;4679:21;4675:626;;-1:-1:-1;;;;;4856:18:8;;4838:15;4856:18;;;:9;:18;;;;;;;;4875:10;4856:30;;;;;;;;-1:-1:-1;;5102:28:8;;5098:193;;5169:6;5158:7;:17;;5150:59;;;;-1:-1:-1;;;5150:59:8;;;;;;;:::i;:::-;5260:16;5270:6;5260:7;:16;:::i;:::-;-1:-1:-1;;;;;5227:18:8;;;;;;:9;:18;;;;;;;;5246:10;5227:30;;;;;;;:49;5098:193;4702:599;4675:626;5362:16;5372:6;5362:7;:16;:::i;:::-;-1:-1:-1;;;;;5341:18:8;;;;;;;:9;:18;;;;;;:37;;;;5628:20;;;;;;;:29;;5651:6;;5628:29;:::i;:::-;-1:-1:-1;;;;;5605:20:8;;;;;;;:9;:20;;;;;;;:52;;;;5705:36;;;;;;-1:-1:-1;;;;;;;;;;;5705:36:8;;;5734:6;;5705:36;:::i;:::-;;;;;;;;-1:-1:-1;5801:4:8;;4319:1493;-1:-1:-1;;;;4319:1493:8:o;1348:93:7:-;562:5;;-1:-1:-1;;;;;562:5:7;548:10;:19;540:48;;;;-1:-1:-1;;;540:48:7;;;;;;;:::i;:::-;-1:-1:-1;;;;;1411:15:7::1;1429:5;1411:15:::0;;;:10:::1;:15;::::0;;;;:23;;-1:-1:-1;;1411:23:7::1;::::0;;1348:93::o;1063:105:9:-;562:5:7;;-1:-1:-1;;;;;562:5:7;548:10;:19;540:48;;;;-1:-1:-1;;;540:48:7;;;;;;;:::i;:::-;1139:22:9::1;1145:7;1154:6;1139:5;:22::i;:::-;1063:105:::0;;:::o;650:29:8:-;;;;;;;:::i;1891:105:9:-;562:5:7;;-1:-1:-1;;;;;562:5:7;548:10;:19;540:48;;;;-1:-1:-1;;;540:48:7;;;;;;;:::i;:::-;1967:22:9::1;1973:7;1982:6;1967:5;:22::i;3708:231:8:-:0;3816:4;3889:43;3902:10;3914:9;3925:6;3889:12;:43::i;:::-;3882:50;3708:231;-1:-1:-1;;;3708:231:8:o;1139:83:7:-;562:5;;-1:-1:-1;;;;;562:5:7;548:10;:19;540:48;;;;-1:-1:-1;;;540:48:7;;;;;;;:::i;:::-;1200:15:::1;1211:3;-1:-1:-1::0;;;;;1763:15:7;;;;;:10;:15;;;;;:22;;-1:-1:-1;;1763:22:7;1781:4;1763:22;;;1711:81;1200:15:::1;1139:83:::0;:::o;9023:1667:8:-;9375:16;;-1:-1:-1;;;;;9612:13:8;;9273:14;9612:13;;;:6;:13;;;;;;;;;9440:241;;9273:14;;9375:16;9440:241;;-1:-1:-1;;;;;;;;;;;1517:66:8;9517:5;;9548:7;;9581:5;;9612:13;9651:8;;9440:241;;:::i;:::-;;;;;;;;;;;;;9409:290;;;;;;9313:400;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;9313:400:8;;;;;;;;;9290:433;;9313:400;9290:433;;;;;-1:-1:-1;;;;;;9787:19:8;;9779:56;;;;-1:-1:-1;;;9779:56:8;;;;;;;:::i;:::-;9927:26;9937:6;9945:1;9948;9951;9927:26;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9918:35:8;:5;-1:-1:-1;;;;;9918:35:8;;9910:69;;;;-1:-1:-1;;;9910:69:8;;;;;;;:::i;:::-;10063:13;;;:44;;;10099:8;10080:15;:27;;10063:44;10042:112;;;;-1:-1:-1;;;10042:112:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;10239:96:8;;;10218:177;;;;-1:-1:-1;;;10218:177:8;;;;;;;:::i;:::-;-1:-1:-1;;;;;10464:13:8;;;;;;:6;:13;;;;;:15;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;10535:16:8;;;;;;;:9;:16;;;;;;;;:25;;;;;;;;;;;;;;:33;;;10652:31;-1:-1:-1;;;;;;;;;;;10652:31:8;;;10563:5;;10652:31;:::i;:::-;;;;;;;;9215:1475;9023:1667;;;;;;;:::o;1403:338:9:-;-1:-1:-1;;;;;1536:18:9;;;;;;:9;:18;;;;;;:27;;1557:6;;1536:27;:::i;:::-;-1:-1:-1;;;;;1515:18:9;;;;;;:9;:18;;;;;:48;;;;1606:11;:21;;1621:6;;1515:18;1606:21;;1621:6;;1606:21;:::i;:::-;;;;-1:-1:-1;;1697:37:9;;-1:-1:-1;;;;;1697:37:9;;;1714:1;;-1:-1:-1;;;;;;;;;;;1697:37:9;;;1727:6;;1697:37;:::i;:::-;;;;;;;;1403:338;;:::o;2198:546::-;-1:-1:-1;;;;;2332:18:9;;2307:22;2332:18;;;:9;:18;;;;;;2432:23;;;2428:151;;;-1:-1:-1;;;;;2471:18:9;;2492:1;2471:18;;;:9;:18;;;;;:22;2428:151;;;2545:23;2562:6;2545:14;:23;:::i;:::-;-1:-1:-1;;;;;2524:18:9;;;;;;:9;:18;;;;;:44;2428:151;2636:6;2621:11;;:21;;;;;;;:::i;:::-;;;;-1:-1:-1;;2700:37:9;;2726:1;;-1:-1:-1;;;;;2700:37:9;;;-1:-1:-1;;;;;;;;;;;2700:37:9;;;2730:6;;2700:37;:::i;:::-;;;;;;;;2264:480;2198:546;;:::o;287:307:13:-;355:1;365:113;379:6;376:1;373:13;365:113;;;455:11;;;449:18;436:11;;;429:39;401:2;394:10;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;708:364::-;796:3;824:39;857:5;87:12;;7:99;824:39;218:19;;;270:4;261:14;;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;692:2;672:14;-1:-1:-1;;668:28:13;1027:39;;;;;;-1:-1:-1;;708:364:13:o;1078:313::-;1229:2;1242:47;;;1214:18;;1306:78;1214:18;1370:6;1306:78;:::i;1856:96::-;1893:7;-1:-1:-1;;;;;1790:54:13;;1922:24;1724:126;1958:122;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2086:139;2157:20;;2186:33;2157:20;2186:33;:::i;2314:122::-;2405:5;2387:24;2231:77;2442:139;2513:20;;2542:33;2513:20;2542:33;:::i;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;202:474:12;;;2718:79:13;2838:1;2863:53;2908:7;2888:9;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3163:109::-;3137:13;;3130:21;3244;3239:3;3232:34;3163:109;;:::o;3278:210::-;3403:2;3388:18;;3416:65;3392:9;3454:6;3416:65;:::i;3494:329::-;3553:6;3602:2;3590:9;3581:7;3577:23;3573:32;3570:119;;;3608:79;202:474:12;;;3608:79:13;3728:1;3753:53;3798:7;3778:9;3753:53;:::i;:::-;3743:63;3494:329;-1:-1:-1;;;;3494:329:13:o;3829:118::-;3934:5;3916:24;2231:77;3953:222;4084:2;4069:18;;4097:71;4073:9;4141:6;4097:71;:::i;4181:619::-;4258:6;4266;4274;4323:2;4311:9;4302:7;4298:23;4294:32;4291:119;;;4329:79;202:474:12;;;4329:79:13;4449:1;4474:53;4519:7;4499:9;4474:53;:::i;:::-;4464:63;;4420:117;4576:2;4602:53;4647:7;4638:6;4627:9;4623:22;4602:53;:::i;:::-;4592:63;;4547:118;4704:2;4730:53;4775:7;4766:6;4755:9;4751:22;4730:53;:::i;:::-;4720:63;;4675:118;4181:619;;;;;:::o;5333:112::-;5316:4;5305:16;;5416:22;5241:86;5451:214;5578:2;5563:18;;5591:67;5567:9;5631:6;5591:67;:::i;5671:118::-;5758:24;5776:5;5758:24;:::i;5795:222::-;5926:2;5911:18;;5939:71;5915:9;5983:6;5939:71;:::i;6023:118::-;5316:4;5305:16;;6094:22;5241:86;6147:135;6216:20;;6245:31;6216:20;6245:31;:::i;6561:1199::-;6672:6;6680;6688;6696;6704;6712;6720;6769:3;6757:9;6748:7;6744:23;6740:33;6737:120;;;6776:79;202:474:12;;;6776:79:13;6896:1;6921:53;6966:7;6946:9;6921:53;:::i;:::-;6911:63;;6867:117;7023:2;7049:53;7094:7;7085:6;7074:9;7070:22;7049:53;:::i;:::-;7039:63;;6994:118;7151:2;7177:53;7222:7;7213:6;7202:9;7198:22;7177:53;:::i;:::-;7167:63;;7122:118;7279:2;7305:53;7350:7;7341:6;7330:9;7326:22;7305:53;:::i;:::-;7295:63;;7250:118;7407:3;7434:51;7477:7;7468:6;7457:9;7453:22;7434:51;:::i;:::-;7424:61;;7378:117;7534:3;7561:53;7606:7;7597:6;7586:9;7582:22;7561:53;:::i;:::-;7551:63;;7505:119;7663:3;7690:53;7735:7;7726:6;7715:9;7711:22;7690:53;:::i;:::-;7680:63;;7634:119;6561:1199;;;;;;;;;;:::o;7766:474::-;7834:6;7842;7891:2;7879:9;7870:7;7866:23;7862:32;7859:119;;;7897:79;202:474:12;;;7897:79:13;8017:1;8042:53;8087:7;8067:9;8042:53;:::i;:::-;8032:63;;7988:117;8144:2;8170:53;8215:7;8206:6;8195:9;8191:22;8170:53;:::i;8246:180::-;-1:-1:-1;;;8291:1:13;8284:88;8391:4;8388:1;8381:15;8415:4;8412:1;8405:15;8432:320;8513:1;8503:12;;8560:1;8550:12;;;8571:81;;8637:4;8629:6;8625:17;8615:27;;8571:81;8699:2;8691:6;8688:14;8668:18;8665:38;8662:84;;;8718:18;;:::i;:::-;8483:269;8432:320;;;:::o;8930:366::-;9157:2;218:19;;9072:3;270:4;261:14;;-1:-1:-1;;;8875:42:13;;9086:74;-1:-1:-1;9169:93:13;-1:-1:-1;9287:2:13;9278:12;;8930:366::o;9302:419::-;9506:2;9519:47;;;9491:18;;9583:131;9491:18;9583:131;:::i;9910:366::-;10137:2;218:19;;10052:3;270:4;261:14;;-1:-1:-1;;;9844:53:13;;10066:74;-1:-1:-1;10149:93:13;9727:177;10282:419;10486:2;10499:47;;;10471:18;;10563:131;10471:18;10563:131;:::i;10892:366::-;11119:2;218:19;;11034:3;270:4;261:14;;10847:31;10824:55;;11048:74;-1:-1:-1;11131:93:13;10707:179;11264:419;11468:2;11481:47;;;11453:18;;11545:131;11453:18;11545:131;:::i;11689:180::-;-1:-1:-1;;;11734:1:13;11727:88;11834:4;11831:1;11824:15;11858:4;11855:1;11848:15;11875:191;11915:4;12008:1;12005;12002:8;11999:34;;;12013:18;;:::i;:::-;-1:-1:-1;12051:9:13;;11875:191::o;12072:305::-;12112:3;12247:74;;12241:81;;12238:107;;;12325:18;;:::i;:::-;-1:-1:-1;12362:9:13;;12072:305::o;12383:775::-;12654:3;12639:19;;12668:71;12643:9;12712:6;12668:71;:::i;:::-;12749:72;12817:2;12806:9;12802:18;12793:6;12749:72;:::i;:::-;12831;12899:2;12888:9;12884:18;12875:6;12831:72;:::i;:::-;12913;12981:2;12970:9;12966:18;12957:6;12913:72;:::i;:::-;12995:73;13063:3;13052:9;13048:19;13039:6;12995:73;:::i;:::-;13078;13146:3;13135:9;13131:19;13122:6;13078:73;:::i;:::-;12383:775;;;;;;;;;:::o;14192:663::-;-1:-1:-1;;;13435:90:13;;13930:1;13921:11;14433:3;14613:75;13921:11;14675:6;14613:75;:::i;:::-;14713:2;14708:3;14704:12;14697:19;;14726:75;14797:3;14788:6;14726:75;:::i;:::-;-1:-1:-1;14826:2:13;14817:12;;14192:663;-1:-1:-1;;14192:663:13:o;15041:366::-;15268:2;218:19;;15183:3;270:4;261:14;;-1:-1:-1;;;14978:50:13;;15197:74;-1:-1:-1;15280:93:13;14861:174;15413:419;15617:2;15630:47;;;15602:18;;15694:131;15602:18;15694:131;:::i;15838:545::-;16049:3;16034:19;;16063:71;16038:9;16107:6;16063:71;:::i;:::-;16144:68;16208:2;16197:9;16193:18;16184:6;16144:68;:::i;:::-;16222:72;16290:2;16279:9;16275:18;16266:6;16222:72;:::i;:::-;16304;16372:2;16361:9;16357:18;16348:6;16304:72;:::i;:::-;15838:545;;;;;;;:::o;16566:366::-;16793:2;218:19;;16708:3;270:4;261:14;;-1:-1:-1;;;16506:47:13;;16722:74;-1:-1:-1;16805:93:13;16389:171;16938:419;17142:2;17155:47;;;17127:18;;17219:131;17127:18;17219:131;:::i;17540:366::-;17767:2;218:19;;17682:3;270:4;261:14;;-1:-1:-1;;;17480:47:13;;17696:74;-1:-1:-1;17779:93:13;17363:171;17912:419;18116:2;18129:47;;;18101:18;;18193:131;18101:18;18193:131;:::i;18936:419::-;19140:2;19153:47;;;19125:18;;19217:131;19125:18;18791:2;218:19;;18477:34;270:4;261:14;;18454:58;-1:-1:-1;;;18529:15:13;;;18522:29;18912:12;;;18564:366;19361:233;19400:3;-1:-1:-1;;19462:5:13;19459:77;19456:103;;;19539:18;;:::i;:::-;-1:-1:-1;19586:1:13;19575:13;;19361:233::o"},"gasEstimates":{"creation":{"codeDepositCost":"871600","executionCost":"infinite","totalCost":"infinite"},"external":{"DOMAIN_SEPARATOR()":"1226","PERMIT_TYPEHASH()":"infinite","allowance(address,address)":"infinite","approve(address,uint256)":"infinite","authorize(address)":"infinite","authorized(address)":"infinite","balanceOf(address)":"infinite","burn(address,uint256)":"infinite","deauthorize(address)":"infinite","decimals()":"1219","isAuthorized(address)":"infinite","mint(address,uint256)":"infinite","name()":"infinite","nonces(address)":"infinite","owner()":"infinite","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"infinite","setAllowance(address,address,uint256)":"infinite","setBalance(address,uint256)":"infinite","setOwner(address)":"infinite","symbol()":"infinite","totalSupply()":"1116","transfer(address,uint256)":"infinite","transferFrom(address,address,uint256)":"infinite"}},"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","PERMIT_TYPEHASH()":"30adf81f","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","authorize(address)":"b6a5d7de","authorized(address)":"b9181611","balanceOf(address)":"70a08231","burn(address,uint256)":"9dc29fac","deauthorize(address)":"27c97fa5","decimals()":"313ce567","isAuthorized(address)":"fe9fbb80","mint(address,uint256)":"40c10f19","name()":"06fdde03","nonces(address)":"7ecebe00","owner()":"8da5cb5b","permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":"d505accf","setAllowance(address,address,uint256)":"da46098c","setBalance(address,uint256)":"e30443bc","setOwner(address)":"13af4035","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.10+commit.fc410830\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"authorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"authorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"deauthorize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"isAuthorized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"source\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setAllowance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"params\":{\"account\":\"The account which will be approve to transfer tokens\",\"amount\":\"The approval amount, if set to uint256.max the allowance does not go down on transfers.\"},\"returns\":{\"_0\":\"returns true for compatibility with the ERC20 standard\"}},\"authorize(address)\":{\"details\":\"Privileged function authorize an address\",\"params\":{\"who\":\"the address to authorize\"}},\"burn(address,uint256)\":{\"params\":{\"account\":\"the account to burn from\",\"amount\":\"the amount of token to burn\"}},\"deauthorize(address)\":{\"details\":\"Privileged function to de authorize an address\",\"params\":{\"who\":\"The address to remove authorization from\"}},\"isAuthorized(address)\":{\"details\":\"Returns true if an address is authorized\",\"params\":{\"who\":\"the address to check\"},\"returns\":{\"_0\":\"true if authorized false if not\"}},\"mint(address,uint256)\":{\"params\":{\"account\":\"the account to addd tokens to\",\"amount\":\"the amount of tokens to add\"}},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"The signature for this function follows EIP 712 standard and should be generated with the      eth_signTypedData JSON RPC call instead of the eth_sign JSON RPC call. If using out of date      parity signing libraries the v component may need to be adjusted. Also it is very rare but possible      for v to be other values, those values are not supported.\",\"params\":{\"deadline\":\"the timestamp which the signature must be submitted by to be valid\",\"owner\":\"the owner of the account which is having the new approval set\",\"r\":\"The r component of the ECDSA signature\",\"s\":\"The s component of the ECDSA signature\",\"spender\":\"the address which will be allowed to spend owner's tokens\",\"v\":\"Extra ECDSA data which allows public key recovery from signature assumed to be 27 or 28\",\"value\":\"the new allowance value\"}},\"setOwner(address)\":{\"details\":\"Function to change owner\",\"params\":{\"who\":\"The new owner address\"}},\"transfer(address,uint256)\":{\"details\":\"transfers to this contract address or 0 will fail\",\"params\":{\"amount\":\"The amount user token to send\",\"recipient\":\"The address which will be credited with the tokens\"},\"returns\":{\"_0\":\"returns true on success, reverts on failure so cannot return false.\"}},\"transferFrom(address,address,uint256)\":{\"details\":\"will fail transfers which send funds to this contract or 0\",\"params\":{\"amount\":\"the number of tokens to send\",\"recipient\":\"The destination of the ERC20 tokens\",\"spender\":\"The source of the ERC20 tokens\"},\"returns\":{\"_0\":\"returns true on success and reverts on failure\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"approve(address,uint256)\":{\"notice\":\"This function allows a user to approve an account which can transfer         tokens on their behalf.\"},\"burn(address,uint256)\":{\"notice\":\"Allows the governance to burn\"},\"mint(address,uint256)\":{\"notice\":\"Allows the governance to mint\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"This function allows a caller who is not the owner of an account to execute the functionality of 'approve' with the owners signature.\"},\"transfer(address,uint256)\":{\"notice\":\"Allows a token owner to send tokens to another address\"},\"transferFrom(address,address,uint256)\":{\"notice\":\"Transfers an amount of erc20 from a spender to a receipt\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/mockHog.sol\":\"MockHog\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"details\":{\"constantOptimizer\":true,\"cse\":true,\"deduplicate\":true,\"inliner\":true,\"jumpdestRemover\":true,\"orderLiterals\":true,\"peephole\":true,\"yul\":false},\"runs\":1},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\nimport './pool/IUniswapV3PoolImmutables.sol';\\nimport './pool/IUniswapV3PoolState.sol';\\nimport './pool/IUniswapV3PoolDerivedState.sol';\\nimport './pool/IUniswapV3PoolActions.sol';\\nimport './pool/IUniswapV3PoolOwnerActions.sol';\\nimport './pool/IUniswapV3PoolEvents.sol';\\n\\n/// @title The interface for a Uniswap V3 Pool\\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\\n/// to the ERC20 specification\\n/// @dev The pool interface is broken up into many smaller pieces\\ninterface IUniswapV3Pool is\\n    IUniswapV3PoolImmutables,\\n    IUniswapV3PoolState,\\n    IUniswapV3PoolDerivedState,\\n    IUniswapV3PoolActions,\\n    IUniswapV3PoolOwnerActions,\\n    IUniswapV3PoolEvents\\n{\\n\\n}\\n\",\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissionless pool actions\\n/// @notice Contains pool methods that can be called by anyone\\ninterface IUniswapV3PoolActions {\\n    /// @notice Sets the initial price for the pool\\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\\n    function initialize(uint160 sqrtPriceX96) external;\\n\\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\\n    /// @param recipient The address for which the liquidity will be created\\n    /// @param tickLower The lower tick of the position in which to add liquidity\\n    /// @param tickUpper The upper tick of the position in which to add liquidity\\n    /// @param amount The amount of liquidity to mint\\n    /// @param data Any data that should be passed through to the callback\\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    function mint(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount,\\n        bytes calldata data\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Collects tokens owed to a position\\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\\n    /// @param recipient The address which should receive the fees collected\\n    /// @param tickLower The lower tick of the position for which to collect fees\\n    /// @param tickUpper The upper tick of the position for which to collect fees\\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\\n    /// @return amount0 The amount of fees collected in token0\\n    /// @return amount1 The amount of fees collected in token1\\n    function collect(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n\\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\\n    /// @dev Fees must be collected separately via a call to #collect\\n    /// @param tickLower The lower tick of the position for which to burn liquidity\\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\\n    /// @param amount How much liquidity to burn\\n    /// @return amount0 The amount of token0 sent to the recipient\\n    /// @return amount1 The amount of token1 sent to the recipient\\n    function burn(\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Swap token0 for token1, or token1 for token0\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\\n    /// @param recipient The address to receive the output of the swap\\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\\n    /// @param data Any data to be passed through to the callback\\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\\n    function swap(\\n        address recipient,\\n        bool zeroForOne,\\n        int256 amountSpecified,\\n        uint160 sqrtPriceLimitX96,\\n        bytes calldata data\\n    ) external returns (int256 amount0, int256 amount1);\\n\\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\\n    /// @param recipient The address which will receive the token0 and token1 amounts\\n    /// @param amount0 The amount of token0 to send\\n    /// @param amount1 The amount of token1 to send\\n    /// @param data Any data to be passed through to the callback\\n    function flash(\\n        address recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        bytes calldata data\\n    ) external;\\n\\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\\n    /// the input observationCardinalityNext.\\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\\n}\\n\",\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that is not stored\\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\\n/// blockchain. The functions here may have variable gas costs.\\ninterface IUniswapV3PoolDerivedState {\\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\\n    /// you must call it with secondsAgos = [3600, 0].\\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\\n    /// timestamp\\n    function observe(uint32[] calldata secondsAgos)\\n        external\\n        view\\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\\n\\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\\n    /// snapshot is taken and the second snapshot is taken.\\n    /// @param tickLower The lower tick of the range\\n    /// @param tickUpper The upper tick of the range\\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\\n        external\\n        view\\n        returns (\\n            int56 tickCumulativeInside,\\n            uint160 secondsPerLiquidityInsideX128,\\n            uint32 secondsInside\\n        );\\n}\\n\",\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Events emitted by a pool\\n/// @notice Contains all events emitted by the pool\\ninterface IUniswapV3PoolEvents {\\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\\n\\n    /// @notice Emitted when liquidity is minted for a given position\\n    /// @param sender The address that minted the liquidity\\n    /// @param owner The owner of the position and recipient of any minted liquidity\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity minted to the position range\\n    /// @param amount0 How much token0 was required for the minted liquidity\\n    /// @param amount1 How much token1 was required for the minted liquidity\\n    event Mint(\\n        address sender,\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted when fees are collected by the owner of a position\\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\\n    /// @param owner The owner of the position for which fees are collected\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount0 The amount of token0 fees collected\\n    /// @param amount1 The amount of token1 fees collected\\n    event Collect(\\n        address indexed owner,\\n        address recipient,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount0,\\n        uint128 amount1\\n    );\\n\\n    /// @notice Emitted when a position's liquidity is removed\\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\\n    /// @param owner The owner of the position for which liquidity is removed\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity to remove\\n    /// @param amount0 The amount of token0 withdrawn\\n    /// @param amount1 The amount of token1 withdrawn\\n    event Burn(\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted by the pool for any swaps between token0 and token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the output of the swap\\n    /// @param amount0 The delta of the token0 balance of the pool\\n    /// @param amount1 The delta of the token1 balance of the pool\\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\\n    /// @param liquidity The liquidity of the pool after the swap\\n    /// @param tick The log base 1.0001 of price of the pool after the swap\\n    event Swap(\\n        address indexed sender,\\n        address indexed recipient,\\n        int256 amount0,\\n        int256 amount1,\\n        uint160 sqrtPriceX96,\\n        uint128 liquidity,\\n        int24 tick\\n    );\\n\\n    /// @notice Emitted by the pool for any flashes of token0/token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the tokens from flash\\n    /// @param amount0 The amount of token0 that was flashed\\n    /// @param amount1 The amount of token1 that was flashed\\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\\n    event Flash(\\n        address indexed sender,\\n        address indexed recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        uint256 paid0,\\n        uint256 paid1\\n    );\\n\\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\\n    /// just before a mint/swap/burn.\\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\\n    event IncreaseObservationCardinalityNext(\\n        uint16 observationCardinalityNextOld,\\n        uint16 observationCardinalityNextNew\\n    );\\n\\n    /// @notice Emitted when the protocol fee is changed by the pool\\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\\n\\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\\n    /// @param sender The address that collects the protocol fees\\n    /// @param recipient The address that receives the collected protocol fees\\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that never changes\\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\\ninterface IUniswapV3PoolImmutables {\\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\\n    /// @return The contract address\\n    function factory() external view returns (address);\\n\\n    /// @notice The first of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token0() external view returns (address);\\n\\n    /// @notice The second of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token1() external view returns (address);\\n\\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\\n    /// @return The fee\\n    function fee() external view returns (uint24);\\n\\n    /// @notice The pool tick spacing\\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\\n    /// This value is an int24 to avoid casting even though it is always positive.\\n    /// @return The tick spacing\\n    function tickSpacing() external view returns (int24);\\n\\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\\n    /// @return The max amount of liquidity per tick\\n    function maxLiquidityPerTick() external view returns (uint128);\\n}\\n\",\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissioned pool actions\\n/// @notice Contains pool methods that may only be called by the factory owner\\ninterface IUniswapV3PoolOwnerActions {\\n    /// @notice Set the denominator of the protocol's % share of the fees\\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\\n\\n    /// @notice Collect the protocol fee accrued to the pool\\n    /// @param recipient The address to which collected protocol fees should be sent\\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\\n    /// @return amount0 The protocol fee collected in token0\\n    /// @return amount1 The protocol fee collected in token1\\n    function collectProtocol(\\n        address recipient,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that can change\\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\\n/// per transaction\\ninterface IUniswapV3PoolState {\\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\\n    /// when accessed externally.\\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\\n    /// boundary.\\n    /// observationIndex The index of the last oracle observation that was written,\\n    /// observationCardinality The current maximum number of observations stored in the pool,\\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\\n    /// feeProtocol The protocol fee for both tokens of the pool.\\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\\n    /// unlocked Whether the pool is currently locked to reentrancy\\n    function slot0()\\n        external\\n        view\\n        returns (\\n            uint160 sqrtPriceX96,\\n            int24 tick,\\n            uint16 observationIndex,\\n            uint16 observationCardinality,\\n            uint16 observationCardinalityNext,\\n            uint8 feeProtocol,\\n            bool unlocked\\n        );\\n\\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal0X128() external view returns (uint256);\\n\\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal1X128() external view returns (uint256);\\n\\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\\n    /// @dev Protocol fees will never exceed uint128 max in either token\\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\\n\\n    /// @notice The currently in range liquidity available to the pool\\n    /// @dev This value has no relationship to the total liquidity across all ticks\\n    function liquidity() external view returns (uint128);\\n\\n    /// @notice Look up information about a specific tick in the pool\\n    /// @param tick The tick to look up\\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\\n    /// tick upper,\\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\\n    /// a specific position.\\n    function ticks(int24 tick)\\n        external\\n        view\\n        returns (\\n            uint128 liquidityGross,\\n            int128 liquidityNet,\\n            uint256 feeGrowthOutside0X128,\\n            uint256 feeGrowthOutside1X128,\\n            int56 tickCumulativeOutside,\\n            uint160 secondsPerLiquidityOutsideX128,\\n            uint32 secondsOutside,\\n            bool initialized\\n        );\\n\\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\\n\\n    /// @notice Returns the information about a position by the position's key\\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\\n    /// @return _liquidity The amount of liquidity in the position,\\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\\n    function positions(bytes32 key)\\n        external\\n        view\\n        returns (\\n            uint128 _liquidity,\\n            uint256 feeGrowthInside0LastX128,\\n            uint256 feeGrowthInside1LastX128,\\n            uint128 tokensOwed0,\\n            uint128 tokensOwed1\\n        );\\n\\n    /// @notice Returns data about a specific observation index\\n    /// @param index The element of the observations array to fetch\\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\\n    /// ago, rather than at a specific index in the array.\\n    /// @return blockTimestamp The timestamp of the observation,\\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\\n    function observations(uint256 index)\\n        external\\n        view\\n        returns (\\n            uint32 blockTimestamp,\\n            int56 tickCumulative,\\n            uint160 secondsPerLiquidityCumulativeX128,\\n            bool initialized\\n        );\\n}\\n\",\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\"},\"contracts/Authorizable.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity >=0.7.0;\\n\\ncontract Authorizable {\\n    // This contract allows a flexible authorization scheme\\n\\n    // The owner who can change authorization status\\n    address public owner;\\n    // A mapping from an address to its authorization status\\n    mapping(address => bool) public authorized;\\n\\n    /// @dev We set the deployer to the owner\\n    constructor() {\\n        owner = msg.sender;\\n    }\\n\\n    /// @dev This modifier checks if the msg.sender is the owner\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"Sender not owner\\\");\\n        _;\\n    }\\n\\n    /// @dev This modifier checks if an address is authorized\\n    modifier onlyAuthorized() {\\n        require(isAuthorized(msg.sender), \\\"Sender not Authorized\\\");\\n        _;\\n    }\\n\\n    /// @dev Returns true if an address is authorized\\n    /// @param who the address to check\\n    /// @return true if authorized false if not\\n    function isAuthorized(address who) public view returns (bool) {\\n        return authorized[who];\\n    }\\n\\n    /// @dev Privileged function authorize an address\\n    /// @param who the address to authorize\\n    function authorize(address who) external onlyOwner {\\n        _authorize(who);\\n    }\\n\\n    /// @dev Privileged function to de authorize an address\\n    /// @param who The address to remove authorization from\\n    function deauthorize(address who) external onlyOwner {\\n        authorized[who] = false;\\n    }\\n\\n    /// @dev Function to change owner\\n    /// @param who The new owner address\\n    function setOwner(address who) public onlyOwner {\\n        owner = who;\\n    }\\n\\n    /// @dev Inheritable function which authorizes someone\\n    /// @param who the address to authorize\\n    function _authorize(address who) internal {\\n        authorized[who] = true;\\n    }\\n}\",\"keccak256\":\"0xa5eb77918ce2f4c8a980f8720c8d8d4b09ae47d43be25b70cc06be4935a1edab\",\"license\":\"Apache-2.0\"},\"contracts/ERC20Permit.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\n// Copied from https://github.com/delvtech/elf-contracts/blob/a6cb960896301b7562ced70a8b221f3cc964ea0a/contracts/libraries/ERC20Permit.sol\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"./IERC20Permit.sol\\\";\\n\\n// This default erc20 library is designed for max efficiency and security.\\n// WARNING: By default it does not include totalSupply which breaks the ERC20 standard\\n//          to use a fully standard compliant ERC20 use 'ERC20PermitWithSupply\\\"\\nabstract contract ERC20Permit is IERC20Permit {\\n    // --- ERC20 Data ---\\n    // The name of the erc20 token\\n    string public name;\\n    // The symbol of the erc20 token\\n    string public override symbol;\\n    // The decimals of the erc20 token, should default to 18 for new tokens\\n    uint8 public override decimals;\\n\\n    // A mapping which tracks user token balances\\n    mapping(address => uint256) public override balanceOf;\\n    // A mapping which tracks which addresses a user allows to move their tokens\\n    mapping(address => mapping(address => uint256)) public override allowance;\\n    // A mapping which tracks the permit signature nonces for users\\n    mapping(address => uint256) public override nonces;\\n\\n    // --- EIP712 niceties ---\\n    // solhint-disable-next-line var-name-mixedcase\\n    bytes32 public override DOMAIN_SEPARATOR;\\n    // bytes32 public constant PERMIT_TYPEHASH = keccak256(\\\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\\\");\\n    bytes32 public constant PERMIT_TYPEHASH =\\n        0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\\n\\n    /// @notice Initializes the erc20 contract\\n    /// @param name_ the value 'name' will be set to\\n    /// @param symbol_ the value 'symbol' will be set to\\n    /// @dev decimals default to 18 and must be reset by an inheriting contract for\\n    ///      non standard decimal values\\n    constructor(string memory name_, string memory symbol_) {\\n        // Set the state variables\\n        name = name_;\\n        symbol = symbol_;\\n        decimals = 18;\\n\\n        // By setting these addresses to 0 attempting to execute a transfer to\\n        // either of them will revert. This is a gas efficient way to prevent\\n        // a common user mistake where they transfer to the token address.\\n        // These values are not considered 'real' tokens and so are not included\\n        // in 'total supply' which only contains minted tokens.\\n        balanceOf[address(0)] = type(uint256).max;\\n        balanceOf[address(this)] = type(uint256).max;\\n\\n        // Optional extra state manipulation\\n        _extraConstruction();\\n\\n        // Computes the EIP 712 domain separator which prevents user signed messages for\\n        // this contract to be replayed in other contracts.\\n        // https://eips.ethereum.org/EIPS/eip-712\\n        DOMAIN_SEPARATOR = keccak256(\\n            abi.encode(\\n                keccak256(\\n                    \\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"\\n                ),\\n                keccak256(bytes(name)),\\n                keccak256(bytes(\\\"1\\\")),\\n                block.chainid,\\n                address(this)\\n            )\\n        );\\n    }\\n\\n    /// @notice An optional override function to execute and change state before immutable assignment\\n    function _extraConstruction() internal virtual {}\\n\\n    // --- Token ---\\n    /// @notice Allows a token owner to send tokens to another address\\n    /// @param recipient The address which will be credited with the tokens\\n    /// @param amount The amount user token to send\\n    /// @return returns true on success, reverts on failure so cannot return false.\\n    /// @dev transfers to this contract address or 0 will fail\\n    function transfer(\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        // We forward this call to 'transferFrom'\\n        return transferFrom(msg.sender, recipient, amount);\\n    }\\n\\n    /// @notice Transfers an amount of erc20 from a spender to a receipt\\n    /// @param spender The source of the ERC20 tokens\\n    /// @param recipient The destination of the ERC20 tokens\\n    /// @param amount the number of tokens to send\\n    /// @return returns true on success and reverts on failure\\n    /// @dev will fail transfers which send funds to this contract or 0\\n    function transferFrom(\\n        address spender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        // Load balance and allowance\\n        uint256 balance = balanceOf[spender];\\n        require(balance >= amount, \\\"ERC20: insufficient-balance\\\");\\n        // We potentially have to change allowances\\n        if (spender != msg.sender) {\\n            // Loading the allowance in the if block prevents vanilla transfers\\n            // from paying for the sload.\\n            uint256 allowed = allowance[spender][msg.sender];\\n            // If the allowance is max we do not reduce it\\n            // Note - This means that max allowances will be more gas efficient\\n            // by not requiring a sstore on 'transferFrom'\\n            if (allowed != type(uint256).max) {\\n                require(allowed >= amount, \\\"ERC20: insufficient-allowance\\\");\\n                allowance[spender][msg.sender] = allowed - amount;\\n            }\\n        }\\n        // Update the balances\\n        balanceOf[spender] = balance - amount;\\n        // Note - In the constructor we initialize the 'balanceOf' of address 0 and\\n        //        the token address to uint256.max and so in 8.0 transfers to those\\n        //        addresses revert on this step.\\n        balanceOf[recipient] = balanceOf[recipient] + amount;\\n        // Emit the needed event\\n        emit Transfer(spender, recipient, amount);\\n        // Return that this call succeeded\\n        return true;\\n    }\\n\\n    /// @notice This internal minting function allows inheriting contracts\\n    ///         to mint tokens in the way they wish.\\n    /// @param account the address which will receive the token.\\n    /// @param amount the amount of token which they will receive\\n    /// @dev This function is virtual so that it can be overridden, if you\\n    ///      are reviewing this contract for security you should ensure to\\n    ///      check for overrides\\n    function _mint(address account, uint256 amount) internal virtual {\\n        // Add tokens to the account\\n        balanceOf[account] = balanceOf[account] + amount;\\n        // Emit an event to track the minting\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /// @notice This internal burning function allows inheriting contracts to\\n    ///         burn tokens in the way they see fit.\\n    /// @param account the account to remove tokens from\\n    /// @param amount  the amount of tokens to remove\\n    /// @dev This function is virtual so that it can be overridden, if you\\n    ///      are reviewing this contract for security you should ensure to\\n    ///      check for overrides\\n    function _burn(address account, uint256 amount) internal virtual {\\n        // Reduce the balance of the account\\n        balanceOf[account] = balanceOf[account] - amount;\\n        // Emit an event tracking transfers\\n        emit Transfer(account, address(0), amount);\\n    }\\n\\n    /// @notice This function allows a user to approve an account which can transfer\\n    ///         tokens on their behalf.\\n    /// @param account The account which will be approve to transfer tokens\\n    /// @param amount The approval amount, if set to uint256.max the allowance does not go down on transfers.\\n    /// @return returns true for compatibility with the ERC20 standard\\n    function approve(\\n        address account,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        // Set the senders allowance for account to amount\\n        allowance[msg.sender][account] = amount;\\n        // Emit an event to track approvals\\n        emit Approval(msg.sender, account, amount);\\n        return true;\\n    }\\n\\n    /// @notice This function allows a caller who is not the owner of an account to execute the functionality of 'approve' with the owners signature.\\n    /// @param owner the owner of the account which is having the new approval set\\n    /// @param spender the address which will be allowed to spend owner's tokens\\n    /// @param value the new allowance value\\n    /// @param deadline the timestamp which the signature must be submitted by to be valid\\n    /// @param v Extra ECDSA data which allows public key recovery from signature assumed to be 27 or 28\\n    /// @param r The r component of the ECDSA signature\\n    /// @param s The s component of the ECDSA signature\\n    /// @dev The signature for this function follows EIP 712 standard and should be generated with the\\n    ///      eth_signTypedData JSON RPC call instead of the eth_sign JSON RPC call. If using out of date\\n    ///      parity signing libraries the v component may need to be adjusted. Also it is very rare but possible\\n    ///      for v to be other values, those values are not supported.\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external override {\\n        // The EIP 712 digest for this function\\n        bytes32 digest = keccak256(\\n            abi.encodePacked(\\n                \\\"\\\\x19\\\\x01\\\",\\n                DOMAIN_SEPARATOR,\\n                keccak256(\\n                    abi.encode(\\n                        PERMIT_TYPEHASH,\\n                        owner,\\n                        spender,\\n                        value,\\n                        nonces[owner],\\n                        deadline\\n                    )\\n                )\\n            )\\n        );\\n        // Require that the owner is not zero\\n        require(owner != address(0), \\\"ERC20: invalid-address-0\\\");\\n        // Require that we have a valid signature from the owner\\n        require(owner == ecrecover(digest, v, r, s), \\\"ERC20: invalid-permit\\\");\\n        // Require that the signature is not expired\\n        require(\\n            deadline == 0 || block.timestamp <= deadline,\\n            \\\"ERC20: permit-expired\\\"\\n        );\\n        // Format the signature to the default format\\n        require(\\n            uint256(s) <=\\n                0x7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF5D576E7357A4501DDFE92F46681B20A0,\\n            \\\"ERC20: invalid signature 's' value\\\"\\n        );\\n        // Increment the signature nonce to prevent replay\\n        nonces[owner]++;\\n        // Set the allowance to the new value\\n        allowance[owner][spender] = value;\\n        // Emit an approval event to be able to track this happening\\n        emit Approval(owner, spender, value);\\n    }\\n\\n    /// @notice Internal function which allows inheriting contract to set custom decimals\\n    /// @param decimals_ the new decimal value\\n    function _setupDecimals(uint8 decimals_) internal {\\n        // Set the decimals\\n        decimals = decimals_;\\n    }\\n}\",\"keccak256\":\"0xe3ecdc39b3eaf301d9af6e40d2f20273e089a5e51e7c1b18f5f771da2343eedd\",\"license\":\"Apache-2.0\"},\"contracts/ERC20PermitWithMint.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\n// Largely based on https://github.com/delvtech/elf-contracts/blob/a6cb960896301b7562ced70a8b221f3cc964ea0a/contracts/libraries/ERC20PermitWithSupply.sol\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"./ERC20Permit.sol\\\";\\nimport \\\"./Authorizable.sol\\\";\\n\\n// This contract adds total supply and minting to the generic erc20\\nabstract contract ERC20PermitWithMint is ERC20Permit, Authorizable {\\n    /// @notice Initializes the erc20 contract\\n    /// @param name_ the value 'name' will be set to\\n    /// @param symbol_ the value 'symbol' will be set to\\n    /// @param owner_ address which has the power to mint\\n    constructor(\\n        string memory name_,\\n        string memory symbol_,\\n        address owner_\\n    ) ERC20Permit(name_, symbol_) {\\n        setOwner(owner_);\\n    }\\n\\n    // The stored totalSupply, it equals all tokens minted - all tokens burned\\n    uint256 public totalSupply;\\n\\n    /// @notice Allows the governance to mint\\n    /// @param account the account to addd tokens to\\n    /// @param amount the amount of tokens to add\\n    function mint(address account, uint256 amount) external onlyOwner {\\n        _mint(account, amount);\\n    }\\n\\n    /// @notice This function overrides the ERC20Permit Library's _mint and causes it\\n    ///          to track total supply.\\n    /// @param account the account to addd tokens to\\n    /// @param amount the amount of tokens to add\\n    function _mint(address account, uint256 amount) internal override {\\n        // Increase account balance\\n        balanceOf[account] = balanceOf[account] + amount;\\n        // Increase total supply\\n        totalSupply += amount;\\n        // Emit a transfer from zero to emulate a mint\\n        emit Transfer(address(0), account, amount);\\n    }\\n\\n    /// @notice Allows the governance to burn\\n    /// @param account the account to burn from\\n    /// @param amount the amount of token to burn\\n    function burn(address account, uint256 amount) external onlyOwner {\\n        _burn(account, amount);\\n    }\\n\\n    /// @notice This function overrides the ERC20Permit Library's _burn to decrement total supply\\n    /// @param account the account to burn from\\n    /// @param amount the amount of token to burn\\n    function _burn(address account, uint256 amount) internal override {\\n        // Decrease user balance\\n        uint256 currentBalance = balanceOf[account];\\n        // This logic prevents a reversion if the _burn is frontrun\\n        if (currentBalance < amount) {\\n            balanceOf[account] = 0;\\n        } else {\\n            balanceOf[account] = currentBalance - amount;\\n        }\\n        // Decrease total supply\\n        totalSupply -= amount;\\n        // Emit an event tracking the burn\\n        emit Transfer(account, address(0), amount);\\n    }\\n}\",\"keccak256\":\"0xd0ca44654901b287872a88ea5d614163af4eeda8ea61e9b82a287a95c96a785c\",\"license\":\"Apache-2.0\"},\"contracts/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\npragma solidity ^0.8.3;\\n\\ninterface IERC20 {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    // Note this is non standard but nearly all ERC20 have exposed decimal functions\\n    function decimals() external view returns (uint8);\\n\\n    function transfer(\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    function allowance(\\n        address owner,\\n        address spender\\n    ) external view returns (uint256);\\n\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n}\",\"keccak256\":\"0xf33d0362011774ccf7d6db862131ce7539c78d96beb6ffc7ad81580e1623fce7\",\"license\":\"Apache-2.0\"},\"contracts/IERC20Permit.sol\":{\"content\":\"// Forked from openzepplin\\n// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"./IERC20.sol\\\";\\n\\n/**\\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\\n *\\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\\n * presenting a message signed by the account. By not relying on `{IERC20-approve}`, the token holder account doesn't\\n * need to send a transaction, and thus is not required to hold Ether at all.\\n */\\ninterface IERC20Permit is IERC20 {\\n    /**\\n     * @dev Sets `value` as the allowance of `spender` over `owner`'s tokens,\\n     * given `owner`'s signed approval.\\n     *\\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\\n     * ordering also apply here.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `deadline` must be a timestamp in the future.\\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\\n     * over the EIP712-formatted function arguments.\\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\\n     *\\n     * For more information on the signature format, see the\\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\\n     * section].\\n     */\\n    function permit(\\n        address owner,\\n        address spender,\\n        uint256 value,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external;\\n\\n    /**\\n     * @dev Returns the current nonce for `owner`. This value must be\\n     * included whenever a signature is generated for {permit}.\\n     *\\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\\n     * prevents a signature from being used multiple times.\\n     */\\n    function nonces(address owner) external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the domain separator used in the encoding of the signature for `permit`, as defined by {EIP712}.\\n     */\\n    // solhint-disable-next-line func-name-mixedcase\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n}\",\"keccak256\":\"0x1521813d267ce22cd87d494d97495d2d7cd070e56fe7b2e05c25a8b0d586e560\",\"license\":\"MIT\"},\"contracts/mockHog.sol\":{\"content\":\"// SPDX-License-Identifier: Apache-2.0\\n\\n// taken from our contracts repo\\n\\nimport \\\"./ERC20PermitWithMint.sol\\\";\\nimport \\\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\\\";\\npragma solidity ^0.8.3;\\n\\ncontract MockHog is ERC20PermitWithMint {\\n    constructor(\\n        string memory name_,\\n        string memory symbol_,      \\n        address owner_\\n    ) ERC20PermitWithMint(name_, symbol_, owner_) {}\\n\\n    function setBalance(address who, uint256 amount) external {\\n        balanceOf[who] = amount;\\n    }\\n\\n    function setAllowance(\\n        address source,\\n        address spender,\\n        uint256 amount\\n    ) external {\\n        allowance[source][spender] = amount;\\n    }\\n}\",\"keccak256\":\"0xefc574de459851a1a08fd5fcc2b81e36194199359c645c313829a6f2ebe9842a\",\"license\":\"Apache-2.0\"}},\"version\":1}","storageLayout":{"storage":[{"astId":560,"contract":"contracts/mockHog.sol:MockHog","label":"name","offset":0,"slot":"0","type":"t_string_storage"},{"astId":563,"contract":"contracts/mockHog.sol:MockHog","label":"symbol","offset":0,"slot":"1","type":"t_string_storage"},{"astId":566,"contract":"contracts/mockHog.sol:MockHog","label":"decimals","offset":0,"slot":"2","type":"t_uint8"},{"astId":571,"contract":"contracts/mockHog.sol:MockHog","label":"balanceOf","offset":0,"slot":"3","type":"t_mapping(t_address,t_uint256)"},{"astId":578,"contract":"contracts/mockHog.sol:MockHog","label":"allowance","offset":0,"slot":"4","type":"t_mapping(t_address,t_mapping(t_address,t_uint256))"},{"astId":583,"contract":"contracts/mockHog.sol:MockHog","label":"nonces","offset":0,"slot":"5","type":"t_mapping(t_address,t_uint256)"},{"astId":586,"contract":"contracts/mockHog.sol:MockHog","label":"DOMAIN_SEPARATOR","offset":0,"slot":"6","type":"t_bytes32"},{"astId":445,"contract":"contracts/mockHog.sol:MockHog","label":"owner","offset":0,"slot":"7","type":"t_address"},{"astId":449,"contract":"contracts/mockHog.sol:MockHog","label":"authorized","offset":0,"slot":"8","type":"t_mapping(t_address,t_bool)"},{"astId":1020,"contract":"contracts/mockHog.sol:MockHog","label":"totalSupply","offset":0,"slot":"9","type":"t_uint256"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_bytes32":{"encoding":"inplace","label":"bytes32","numberOfBytes":"32"},"t_mapping(t_address,t_bool)":{"encoding":"mapping","key":"t_address","label":"mapping(address => bool)","numberOfBytes":"32","value":"t_bool"},"t_mapping(t_address,t_mapping(t_address,t_uint256))":{"encoding":"mapping","key":"t_address","label":"mapping(address => mapping(address => uint256))","numberOfBytes":"32","value":"t_mapping(t_address,t_uint256)"},"t_mapping(t_address,t_uint256)":{"encoding":"mapping","key":"t_address","label":"mapping(address => uint256)","numberOfBytes":"32","value":"t_uint256"},"t_string_storage":{"encoding":"bytes","label":"string","numberOfBytes":"32"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"},"t_uint8":{"encoding":"inplace","label":"uint8","numberOfBytes":"1"}}},"userdoc":{"kind":"user","methods":{"approve(address,uint256)":{"notice":"This function allows a user to approve an account which can transfer         tokens on their behalf."},"burn(address,uint256)":{"notice":"Allows the governance to burn"},"mint(address,uint256)":{"notice":"Allows the governance to mint"},"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)":{"notice":"This function allows a caller who is not the owner of an account to execute the functionality of 'approve' with the owners signature."},"transfer(address,uint256)":{"notice":"Allows a token owner to send tokens to another address"},"transferFrom(address,address,uint256)":{"notice":"Transfers an amount of erc20 from a spender to a receipt"}},"version":1}}}}}}